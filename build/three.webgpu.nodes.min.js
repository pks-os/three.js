/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
import{Color as e,Vector2 as t,Vector3 as s,Vector4 as r,Matrix3 as n,Matrix4 as i,EventDispatcher as o,MathUtils as a,ColorManagement as u,SRGBTransfer as l,NoToneMapping as d,StaticDrawUsage as c,InterleavedBuffer as h,DynamicDrawUsage as p,InterleavedBufferAttribute as g,NoColorSpace as m,UnsignedIntType as f,IntType as y,WebGLCoordinateSystem as b,BackSide as x,CubeReflectionMapping as T,CubeRefractionMapping as _,WebGPUCoordinateSystem as N,TangentSpaceNormalMap as v,ObjectSpaceNormalMap as S,InstancedInterleavedBuffer as A,InstancedBufferAttribute as R,DataArrayTexture as C,FloatType as E,FramebufferTexture as w,LinearMipmapLinearFilter as M,DepthTexture as B,Material as U,NormalBlending as F,PointsMaterial as P,LineBasicMaterial as I,LineDashedMaterial as L,MeshNormalMaterial as V,WebGLCubeRenderTarget as D,BoxGeometry as O,NoBlending as G,Mesh as k,Scene as z,LinearFilter as $,CubeCamera as H,CubeTexture as W,EquirectangularReflectionMapping as j,EquirectangularRefractionMapping as q,AddOperation as K,MixOperation as X,MultiplyOperation as Y,MeshBasicMaterial as Q,MeshLambertMaterial as Z,MeshPhongMaterial as J,Texture as ee,MeshStandardMaterial as te,MeshPhysicalMaterial as se,MeshToonMaterial as re,MeshMatcapMaterial as ne,SpriteMaterial as ie,ShadowMaterial as oe,Uint32BufferAttribute as ae,Uint16BufferAttribute as ue,DoubleSide as le,DepthStencilFormat as de,DepthFormat as ce,UnsignedInt248Type as he,UnsignedByteType as pe,RenderTarget as ge,Plane as me,Object3D as fe,HalfFloatType as ye,LinearMipMapLinearFilter as be,OrthographicCamera as xe,BufferGeometry as Te,Float32BufferAttribute as _e,UVMapping as Ne,Euler as ve,LinearSRGBColorSpace as Se,LessCompare as Ae,VSMShadowMap as Re,RGFormat as Ce,BasicShadowMap as Ee,SphereGeometry as we,BufferAttribute as Me,CubeUVReflectionMapping as Be,PerspectiveCamera as Ue,RGBAFormat as Fe,LinearMipmapNearestFilter as Pe,NearestMipmapLinearFilter as Ie,Float16BufferAttribute as Le,REVISION as Ve,SRGBColorSpace as De,PCFShadowMap as Oe,FrontSide as Ge,Frustum as ke,DataTexture as ze,RedIntegerFormat as $e,RedFormat as He,RGIntegerFormat as We,RGBIntegerFormat as je,RGBFormat as qe,RGBAIntegerFormat as Ke,UnsignedShortType as Xe,ByteType as Ye,ShortType as Qe,createCanvasElement as Ze,AddEquation as Je,SubtractEquation as et,ReverseSubtractEquation as tt,ZeroFactor as st,OneFactor as rt,SrcColorFactor as nt,SrcAlphaFactor as it,SrcAlphaSaturateFactor as ot,DstColorFactor as at,DstAlphaFactor as ut,OneMinusSrcColorFactor as lt,OneMinusSrcAlphaFactor as dt,OneMinusDstColorFactor as ct,OneMinusDstAlphaFactor as ht,CullFaceNone as pt,CullFaceBack as gt,CullFaceFront as mt,CustomBlending as ft,MultiplyBlending as yt,SubtractiveBlending as bt,AdditiveBlending as xt,NotEqualDepth as Tt,GreaterDepth as _t,GreaterEqualDepth as Nt,EqualDepth as vt,LessEqualDepth as St,LessDepth as At,AlwaysDepth as Rt,NeverDepth as Ct,UnsignedShort4444Type as Et,UnsignedShort5551Type as wt,UnsignedInt5999Type as Mt,AlphaFormat as Bt,LuminanceFormat as Ut,LuminanceAlphaFormat as Ft,RGB_S3TC_DXT1_Format as Pt,RGBA_S3TC_DXT1_Format as It,RGBA_S3TC_DXT3_Format as Lt,RGBA_S3TC_DXT5_Format as Vt,RGB_PVRTC_4BPPV1_Format as Dt,RGB_PVRTC_2BPPV1_Format as Ot,RGBA_PVRTC_4BPPV1_Format as Gt,RGBA_PVRTC_2BPPV1_Format as kt,RGB_ETC1_Format as zt,RGB_ETC2_Format as $t,RGBA_ETC2_EAC_Format as Ht,RGBA_ASTC_4x4_Format as Wt,RGBA_ASTC_5x4_Format as jt,RGBA_ASTC_5x5_Format as qt,RGBA_ASTC_6x5_Format as Kt,RGBA_ASTC_6x6_Format as Xt,RGBA_ASTC_8x5_Format as Yt,RGBA_ASTC_8x6_Format as Qt,RGBA_ASTC_8x8_Format as Zt,RGBA_ASTC_10x5_Format as Jt,RGBA_ASTC_10x6_Format as es,RGBA_ASTC_10x8_Format as ts,RGBA_ASTC_10x10_Format as ss,RGBA_ASTC_12x10_Format as rs,RGBA_ASTC_12x12_Format as ns,RGBA_BPTC_Format as is,RED_RGTC1_Format as os,SIGNED_RED_RGTC1_Format as as,RED_GREEN_RGTC2_Format as us,SIGNED_RED_GREEN_RGTC2_Format as ls,RepeatWrapping as ds,ClampToEdgeWrapping as cs,MirroredRepeatWrapping as hs,NearestFilter as ps,NearestMipmapNearestFilter as gs,NeverCompare as ms,AlwaysCompare as fs,LessEqualCompare as ys,EqualCompare as bs,GreaterEqualCompare as xs,GreaterCompare as Ts,NotEqualCompare as _s,warnOnce as Ns,NotEqualStencilFunc as vs,GreaterStencilFunc as Ss,GreaterEqualStencilFunc as As,EqualStencilFunc as Rs,LessEqualStencilFunc as Cs,LessStencilFunc as Es,AlwaysStencilFunc as ws,NeverStencilFunc as Ms,DecrementWrapStencilOp as Bs,IncrementWrapStencilOp as Us,DecrementStencilOp as Fs,IncrementStencilOp as Ps,InvertStencilOp as Is,ReplaceStencilOp as Ls,ZeroStencilOp as Vs,KeepStencilOp as Ds,MaxEquation as Os,MinEquation as Gs,SpotLight as ks,PointLight as zs,DirectionalLight as $s,RectAreaLight as Hs,AmbientLight as Ws,HemisphereLight as js,LightProbe as qs,LinearToneMapping as Ks,ReinhardToneMapping as Xs,CineonToneMapping as Ys,ACESFilmicToneMapping as Qs,AgXToneMapping as Zs,NeutralToneMapping as Js,Group as er,Loader as tr,FileLoader as sr,MaterialLoader as rr,ObjectLoader as nr}from"./three.core.min.js";export{AdditiveAnimationBlendMode,AnimationAction,AnimationClip,AnimationLoader,AnimationMixer,AnimationObjectGroup,AnimationUtils,ArcCurve,ArrayCamera,ArrowHelper,AttachedBindMode,Audio,AudioAnalyser,AudioContext,AudioListener,AudioLoader,AxesHelper,BasicDepthPacking,BatchedMesh,Bone,BooleanKeyframeTrack,Box2,Box3,Box3Helper,BoxHelper,BufferGeometryLoader,Cache,Camera,CameraHelper,CanvasTexture,CapsuleGeometry,CatmullRomCurve3,CircleGeometry,Clock,ColorKeyframeTrack,CompressedArrayTexture,CompressedCubeTexture,CompressedTexture,CompressedTextureLoader,ConeGeometry,ConstantAlphaFactor,ConstantColorFactor,Controls,CubeTextureLoader,CubicBezierCurve,CubicBezierCurve3,CubicInterpolant,CullFaceFrontBack,Curve,CurvePath,CustomToneMapping,CylinderGeometry,Cylindrical,Data3DTexture,DataTextureLoader,DataUtils,DefaultLoadingManager,DetachedBindMode,DirectionalLightHelper,DiscreteInterpolant,DodecahedronGeometry,DynamicCopyUsage,DynamicReadUsage,EdgesGeometry,EllipseCurve,ExtrudeGeometry,Fog,FogExp2,GLBufferAttribute,GLSL1,GLSL3,GridHelper,HemisphereLightHelper,IcosahedronGeometry,ImageBitmapLoader,ImageLoader,ImageUtils,InstancedBufferGeometry,InstancedMesh,Int16BufferAttribute,Int32BufferAttribute,Int8BufferAttribute,Interpolant,InterpolateDiscrete,InterpolateLinear,InterpolateSmooth,KeyframeTrack,LOD,LatheGeometry,Layers,Light,Line,Line3,LineCurve,LineCurve3,LineLoop,LineSegments,LinearInterpolant,LinearMipMapNearestFilter,LinearTransfer,LoaderUtils,LoadingManager,LoopOnce,LoopPingPong,LoopRepeat,MOUSE,Matrix2,MeshDepthMaterial,MeshDistanceMaterial,NearestMipMapLinearFilter,NearestMipMapNearestFilter,NormalAnimationBlendMode,NumberKeyframeTrack,OctahedronGeometry,OneMinusConstantAlphaFactor,OneMinusConstantColorFactor,PCFSoftShadowMap,Path,PlaneGeometry,PlaneHelper,PointLightHelper,Points,PolarGridHelper,PolyhedronGeometry,PositionalAudio,PropertyBinding,PropertyMixer,QuadraticBezierCurve,QuadraticBezierCurve3,Quaternion,QuaternionKeyframeTrack,QuaternionLinearInterpolant,RGBADepthPacking,RGBDepthPacking,RGB_BPTC_SIGNED_Format,RGB_BPTC_UNSIGNED_Format,RGDepthPacking,RawShaderMaterial,Ray,Raycaster,RingGeometry,ShaderMaterial,Shape,ShapeGeometry,ShapePath,ShapeUtils,Skeleton,SkeletonHelper,SkinnedMesh,Source,Sphere,Spherical,SphericalHarmonics3,SplineCurve,SpotLightHelper,Sprite,StaticCopyUsage,StaticReadUsage,StereoCamera,StreamCopyUsage,StreamDrawUsage,StreamReadUsage,StringKeyframeTrack,TOUCH,TetrahedronGeometry,TextureLoader,TextureUtils,TorusGeometry,TorusKnotGeometry,Triangle,TriangleFanDrawMode,TriangleStripDrawMode,TrianglesDrawMode,TubeGeometry,Uint8BufferAttribute,Uint8ClampedBufferAttribute,Uniform,UniformsGroup,VectorKeyframeTrack,VideoTexture,WebGL3DRenderTarget,WebGLArrayRenderTarget,WebGLMultipleRenderTargets,WebGLRenderTarget,WireframeGeometry,WrapAroundEnding,ZeroCurvatureEnding,ZeroSlopeEnding}from"./three.core.min.js";const ir=["alphaMap","alphaTest","anisotropy","anisotropyMap","anisotropyRotation","aoMap","attenuationColor","attenuationDistance","bumpMap","clearcoat","clearcoatMap","clearcoatNormalMap","clearcoatNormalScale","clearcoatRoughness","color","dispersion","displacementMap","emissive","emissiveMap","envMap","gradientMap","ior","iridescence","iridescenceIOR","iridescenceMap","iridescenceThicknessMap","lightMap","map","matcap","metalness","metalnessMap","normalMap","normalScale","opacity","roughness","roughnessMap","sheen","sheenColor","sheenColorMap","sheenRoughnessMap","shininess","specular","specularColor","specularColorMap","specularIntensity","specularIntensityMap","specularMap","thickness","transmission","transmissionMap"];class or{constructor(e){this.renderObjects=new WeakMap,this.hasNode=this.containsNode(e),this.hasAnimation=!0===e.object.isSkinnedMesh,this.refreshUniforms=ir,this.renderId=0}firstInitialization(e){return!1===this.renderObjects.has(e)&&(this.getRenderObjectData(e),!0)}getRenderObjectData(e){let t=this.renderObjects.get(e);if(void 0===t){const{geometry:s,material:r,object:n}=e;if(t={material:this.getMaterialData(r),geometry:{attributes:this.getAttributesData(s.attributes),indexVersion:s.index?s.index.version:null,drawRange:{start:s.drawRange.start,count:s.drawRange.count}},worldMatrix:n.matrixWorld.clone()},n.center&&(t.center=n.center.clone()),n.morphTargetInfluences&&(t.morphTargetInfluences=n.morphTargetInfluences.slice()),null!==e.bundle&&(t.version=e.bundle.version),t.material.transmission>0){const{width:s,height:r}=e.context;t.bufferWidth=s,t.bufferHeight=r}this.renderObjects.set(e,t)}return t}getAttributesData(e){const t={};for(const s in e){const r=e[s];t[s]={version:r.version}}return t}containsNode(e){const t=e.material;for(const e in t)if(t[e]&&t[e].isNode)return!0;return null!==e.renderer.nodes.modelViewMatrix||null!==e.renderer.nodes.modelNormalViewMatrix}getMaterialData(e){const t={};for(const s of this.refreshUniforms){const r=e[s];null!=r&&("object"==typeof r&&void 0!==r.clone?!0===r.isTexture?t[s]={id:r.id,version:r.version}:t[s]=r.clone():t[s]=r)}return t}equals(e){const{object:t,material:s,geometry:r}=e,n=this.getRenderObjectData(e);if(!0!==n.worldMatrix.equals(t.matrixWorld))return n.worldMatrix.copy(t.matrixWorld),!1;const i=n.material;for(const e in i){const t=i[e],r=s[e];if(void 0!==t.equals){if(!1===t.equals(r))return t.copy(r),!1}else if(!0===r.isTexture){if(t.id!==r.id||t.version!==r.version)return t.id=r.id,t.version=r.version,!1}else if(t!==r)return i[e]=r,!1}if(i.transmission>0){const{width:t,height:s}=e.context;if(n.bufferWidth!==t||n.bufferHeight!==s)return n.bufferWidth=t,n.bufferHeight=s,!1}const o=n.geometry,a=r.attributes,u=o.attributes,l=Object.keys(u),d=Object.keys(a);if(l.length!==d.length)return n.geometry.attributes=this.getAttributesData(a),!1;for(const e of l){const t=u[e],s=a[e];if(void 0===s)return delete u[e],!1;if(t.version!==s.version)return t.version=s.version,!1}const c=r.index,h=o.indexVersion,p=c?c.version:null;if(h!==p)return o.indexVersion=p,!1;if(o.drawRange.start!==r.drawRange.start||o.drawRange.count!==r.drawRange.count)return o.drawRange.start=r.drawRange.start,o.drawRange.count=r.drawRange.count,!1;if(n.morphTargetInfluences){let e=!1;for(let s=0;s<n.morphTargetInfluences.length;s++)n.morphTargetInfluences[s]!==t.morphTargetInfluences[s]&&(e=!0);if(e)return!0}return n.center&&!1===n.center.equals(t.center)?(n.center.copy(t.center),!0):(null!==e.bundle&&(n.version=e.bundle.version),!0)}needsRefresh(e,t){if(this.hasNode||this.hasAnimation||this.firstInitialization(e))return!0;const{renderId:s}=t;if(this.renderId!==s)return this.renderId=s,!0;const r=!0===e.object.static,n=null!==e.bundle&&!0===e.bundle.static&&this.getRenderObjectData(e).version===e.bundle.version;if(r||n)return!1;return!0!==this.equals(e)}}function ar(e,t=0){let s=3735928559^t,r=1103547991^t;if(e instanceof Array)for(let t,n=0;n<e.length;n++)t=e[n],s=Math.imul(s^t,2654435761),r=Math.imul(r^t,1597334677);else for(let t,n=0;n<e.length;n++)t=e.charCodeAt(n),s=Math.imul(s^t,2654435761),r=Math.imul(r^t,1597334677);return s=Math.imul(s^s>>>16,2246822507),s^=Math.imul(r^r>>>13,3266489909),r=Math.imul(r^r>>>16,2246822507),r^=Math.imul(s^s>>>13,3266489909),4294967296*(2097151&r)+(s>>>0)}const ur=e=>ar(e),lr=e=>ar(e),dr=(...e)=>ar(e);function cr(e,t=!1){const s=[];!0===e.isNode&&(s.push(e.id),e=e.getSelf());for(const{property:r,childNode:n}of hr(e))s.push(s,ar(r.slice(0,-4)),n.getCacheKey(t));return ar(s)}function*hr(e,t=!1){for(const s in e){if(!0===s.startsWith("_"))continue;const r=e[s];if(!0===Array.isArray(r))for(let e=0;e<r.length;e++){const n=r[e];n&&(!0===n.isNode||t&&"function"==typeof n.toJSON)&&(yield{property:s,index:e,childNode:n})}else if(r&&!0===r.isNode)yield{property:s,childNode:r};else if("object"==typeof r)for(const e in r){const n=r[e];n&&(!0===n.isNode||t&&"function"==typeof n.toJSON)&&(yield{property:s,index:e,childNode:n})}}}function pr(e){if(null==e)return null;const t=typeof e;return!0===e.isNode?"node":"number"===t?"float":"boolean"===t?"bool":"string"===t?"string":"function"===t?"shader":!0===e.isVector2?"vec2":!0===e.isVector3?"vec3":!0===e.isVector4?"vec4":!0===e.isMatrix3?"mat3":!0===e.isMatrix4?"mat4":!0===e.isColor?"color":e instanceof ArrayBuffer?"ArrayBuffer":null}function gr(o,...a){const u=o?o.slice(-4):void 0;return 1===a.length&&("vec2"===u?a=[a[0],a[0]]:"vec3"===u?a=[a[0],a[0],a[0]]:"vec4"===u&&(a=[a[0],a[0],a[0],a[0]])),"color"===o?new e(...a):"vec2"===u?new t(...a):"vec3"===u?new s(...a):"vec4"===u?new r(...a):"mat3"===u?new n(...a):"mat4"===u?new i(...a):"bool"===o?a[0]||!1:"float"===o||"int"===o||"uint"===o?a[0]||0:"string"===o?a[0]||"":"ArrayBuffer"===o?fr(a[0]):null}function mr(e){let t="";const s=new Uint8Array(e);for(let e=0;e<s.length;e++)t+=String.fromCharCode(s[e]);return btoa(t)}function fr(e){return Uint8Array.from(atob(e),(e=>e.charCodeAt(0))).buffer}var yr=Object.freeze({__proto__:null,arrayBufferToBase64:mr,base64ToArrayBuffer:fr,getCacheKey:cr,getNodeChildren:hr,getValueFromType:gr,getValueType:pr,hash:dr,hashArray:lr,hashString:ur});const br={VERTEX:"vertex",FRAGMENT:"fragment"},xr={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},Tr={BOOLEAN:"bool",INTEGER:"int",FLOAT:"float",VECTOR2:"vec2",VECTOR3:"vec3",VECTOR4:"vec4",MATRIX2:"mat2",MATRIX3:"mat3",MATRIX4:"mat4"},_r=["fragment","vertex"],Nr=["setup","analyze","generate"],vr=[..._r,"compute"],Sr=["x","y","z","w"];let Ar=0;class Rr extends o{static get type(){return"Node"}constructor(e=null){super(),this.nodeType=e,this.updateType=xr.NONE,this.updateBeforeType=xr.NONE,this.updateAfterType=xr.NONE,this.uuid=a.generateUUID(),this.version=0,this._cacheKey=null,this._cacheKeyVersion=0,this.global=!1,this.isNode=!0,Object.defineProperty(this,"id",{value:Ar++})}set needsUpdate(e){!0===e&&this.version++}get type(){return this.constructor.type}onUpdate(e,t){return this.updateType=t,this.update=e.bind(this.getSelf()),this}onFrameUpdate(e){return this.onUpdate(e,xr.FRAME)}onRenderUpdate(e){return this.onUpdate(e,xr.RENDER)}onObjectUpdate(e){return this.onUpdate(e,xr.OBJECT)}onReference(e){return this.updateReference=e.bind(this.getSelf()),this}getSelf(){return this.self||this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(const{childNode:e}of hr(this))yield e}dispose(){this.dispatchEvent({type:"dispose"})}traverse(e){e(this);for(const t of this.getChildren())t.traverse(e)}getCacheKey(e=!1){return!0!==(e=e||this.version!==this._cacheKeyVersion)&&null!==this._cacheKey||(this._cacheKey=cr(this,e),this._cacheKeyVersion=this.version),this._cacheKey}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(e){const t=this.getNodeType(e);return e.getElementType(t)}getNodeType(e){const t=e.getNodeProperties(this);return t.outputNode?t.outputNode.getNodeType(e):this.nodeType}getShared(e){const t=this.getHash(e);return e.getNodeFromHash(t)||this}setup(e){const t=e.getNodeProperties(this);let s=0;for(const e of this.getChildren())t["node"+s++]=e;return null}analyze(e){if(1===e.increaseUsage(this)){const t=e.getNodeProperties(this);for(const s of Object.values(t))s&&!0===s.isNode&&s.build(e)}}generate(e,t){const{outputNode:s}=e.getNodeProperties(this);if(s&&!0===s.isNode)return s.build(e,t)}updateBefore(){console.warn("Abstract function.")}updateAfter(){console.warn("Abstract function.")}update(){console.warn("Abstract function.")}build(e,t=null){const s=this.getShared(e);if(this!==s)return s.build(e,t);e.addNode(this),e.addChain(this);let r=null;const n=e.getBuildStage();if("setup"===n){this.updateReference(e);const t=e.getNodeProperties(this);if(!0!==t.initialized){e.stack.nodes.length;t.initialized=!0,t.outputNode=this.setup(e),null!==t.outputNode&&e.stack.nodes.length;for(const s of Object.values(t))s&&!0===s.isNode&&s.build(e)}}else if("analyze"===n)this.analyze(e);else if("generate"===n){if(1===this.generate.length){const s=this.getNodeType(e),n=e.getDataFromNode(this);r=n.snippet,void 0===r?(r=this.generate(e)||"",n.snippet=r):void 0!==n.flowCodes&&void 0!==e.context.nodeBlock&&e.addFlowCodeHierarchy(this,e.context.nodeBlock),r=e.format(r,s,t)}else r=this.generate(e,t)||""}return e.removeChain(this),e.addSequentialNode(this),r}getSerializeChildren(){return hr(this)}serialize(e){const t=this.getSerializeChildren(),s={};for(const{property:r,index:n,childNode:i}of t)void 0!==n?(void 0===s[r]&&(s[r]=Number.isInteger(n)?[]:{}),s[r][n]=i.toJSON(e.meta).uuid):s[r]=i.toJSON(e.meta).uuid;Object.keys(s).length>0&&(e.inputNodes=s)}deserialize(e){if(void 0!==e.inputNodes){const t=e.meta.nodes;for(const s in e.inputNodes)if(Array.isArray(e.inputNodes[s])){const r=[];for(const n of e.inputNodes[s])r.push(t[n]);this[s]=r}else if("object"==typeof e.inputNodes[s]){const r={};for(const n in e.inputNodes[s]){const i=e.inputNodes[s][n];r[n]=t[i]}this[s]=r}else{const r=e.inputNodes[s];this[s]=t[r]}}}toJSON(e){const{uuid:t,type:s}=this,r=void 0===e||"string"==typeof e;r&&(e={textures:{},images:{},nodes:{}});let n=e.nodes[t];function i(e){const t=[];for(const s in e){const r=e[s];delete r.metadata,t.push(r)}return t}if(void 0===n&&(n={uuid:t,type:s,meta:e,metadata:{version:4.6,type:"Node",generator:"Node.toJSON"}},!0!==r&&(e.nodes[n.uuid]=n),this.serialize(n),delete n.meta),r){const t=i(e.textures),s=i(e.images),r=i(e.nodes);t.length>0&&(n.textures=t),s.length>0&&(n.images=s),r.length>0&&(n.nodes=r)}return n}}class Cr extends Rr{static get type(){return"ArrayElementNode"}constructor(e,t){super(),this.node=e,this.indexNode=t,this.isArrayElementNode=!0}getNodeType(e){return this.node.getElementType(e)}generate(e){return`${this.node.build(e)}[ ${this.indexNode.build(e,"uint")} ]`}}class Er extends Rr{static get type(){return"ConvertNode"}constructor(e,t){super(),this.node=e,this.convertTo=t}getNodeType(e){const t=this.node.getNodeType(e);let s=null;for(const r of this.convertTo.split("|"))null!==s&&e.getTypeLength(t)!==e.getTypeLength(r)||(s=r);return s}serialize(e){super.serialize(e),e.convertTo=this.convertTo}deserialize(e){super.deserialize(e),this.convertTo=e.convertTo}generate(e,t){const s=this.node,r=this.getNodeType(e),n=s.build(e,r);return e.format(n,r,t)}}class wr extends Rr{static get type(){return"TempNode"}constructor(e){super(e),this.isTempNode=!0}hasDependencies(e){return e.getDataFromNode(this).usageCount>1}build(e,t){if("generate"===e.getBuildStage()){const s=e.getVectorType(this.getNodeType(e,t)),r=e.getDataFromNode(this);if(void 0!==r.propertyName)return e.format(r.propertyName,s,t);if("void"!==s&&"void"!==t&&this.hasDependencies(e)){const n=super.build(e,s),i=e.getVarFromNode(this,null,s),o=e.getPropertyName(i);return e.addLineFlowCode(`${o} = ${n}`,this),r.snippet=n,r.propertyName=o,e.format(r.propertyName,s,t)}}return super.build(e,t)}}class Mr extends wr{static get type(){return"JoinNode"}constructor(e=[],t=null){super(t),this.nodes=e}getNodeType(e){return null!==this.nodeType?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce(((t,s)=>t+e.getTypeLength(s.getNodeType(e))),0))}generate(e,t){const s=this.getNodeType(e),r=this.nodes,n=e.getComponentType(s),i=[];for(const t of r){let s=t.build(e);const r=e.getComponentType(t.getNodeType(e));r!==n&&(s=e.format(s,r,n)),i.push(s)}const o=`${e.getType(s)}( ${i.join(", ")} )`;return e.format(o,s,t)}}const Br=Sr.join("");class Ur extends Rr{static get type(){return"SplitNode"}constructor(e,t="x"){super(),this.node=e,this.components=t,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(const t of this.components)e=Math.max(Sr.indexOf(t)+1,e);return e}getComponentType(e){return e.getComponentType(this.node.getNodeType(e))}getNodeType(e){return e.getTypeFromLength(this.components.length,this.getComponentType(e))}generate(e,t){const s=this.node,r=e.getTypeLength(s.getNodeType(e));let n=null;if(r>1){let i=null;this.getVectorLength()>=r&&(i=e.getTypeFromLength(this.getVectorLength(),this.getComponentType(e)));const o=s.build(e,i);n=this.components.length===r&&this.components===Br.slice(0,this.components.length)?e.format(o,i,t):e.format(`${o}.${this.components}`,this.getNodeType(e),t)}else n=s.build(e,t);return n}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}}class Fr extends wr{static get type(){return"SetNode"}constructor(e,t,s){super(),this.sourceNode=e,this.components=t,this.targetNode=s}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{sourceNode:t,components:s,targetNode:r}=this,n=this.getNodeType(e),i=e.getTypeFromLength(s.length,r.getNodeType(e)),o=r.build(e,i),a=t.build(e,n),u=e.getTypeLength(n),l=[];for(let e=0;e<u;e++){const t=Sr[e];t===s[0]?(l.push(o),e+=s.length-1):l.push(a+"."+t)}return`${e.getType(n)}( ${l.join(", ")} )`}}class Pr extends wr{static get type(){return"FlipNode"}constructor(e,t){super(),this.sourceNode=e,this.components=t}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{components:t,sourceNode:s}=this,r=this.getNodeType(e),n=s.build(e),i=e.getVarFromNode(this),o=e.getPropertyName(i);e.addLineFlowCode(o+" = "+n,this);const a=e.getTypeLength(r),u=[];let l=0;for(let e=0;e<a;e++){const s=Sr[e];s===t[l]?(u.push("1.0 - "+o+"."+s),l++):u.push(o+"."+s)}return`${e.getType(r)}( ${u.join(", ")} )`}}class Ir extends Rr{static get type(){return"InputNode"}constructor(e,t=null){super(t),this.isInputNode=!0,this.value=e,this.precision=null}getNodeType(){return null===this.nodeType?pr(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}setPrecision(e){return this.precision=e,this}serialize(e){super.serialize(e),e.value=this.value,this.value&&this.value.toArray&&(e.value=this.value.toArray()),e.valueType=pr(this.value),e.nodeType=this.nodeType,"ArrayBuffer"===e.valueType&&(e.value=mr(e.value)),e.precision=this.precision}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=Array.isArray(e.value)?gr(e.valueType,...e.value):e.value,this.precision=e.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(e.value))}generate(){console.warn("Abstract function.")}}class Lr extends Ir{static get type(){return"ConstNode"}constructor(e,t=null){super(e,t),this.isConstNode=!0}generateConst(e){return e.generateConst(this.getNodeType(e),this.value)}generate(e,t){const s=this.getNodeType(e);return e.format(this.generateConst(e),s,t)}}let Vr=null;const Dr=new Map;function Or(e,t){if(Dr.has(e))console.warn(`Redefinition of method chaining ${e}`);else{if("function"!=typeof t)throw new Error(`Node element ${e} is not a function`);Dr.set(e,t)}}const Gr=e=>e.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),kr=e=>Gr(e).split("").sort().join(""),zr={setup(e,t){const s=t.shift();return e(gn(s),...t)},get(e,t,s){if("string"==typeof t&&void 0===e[t]){if(!0!==e.isStackNode&&"assign"===t)return(...e)=>(Vr.assign(s,...e),s);if(Dr.has(t)){const r=Dr.get(t);return e.isStackNode?(...e)=>s.add(r(...e)):(...e)=>r(s,...e)}if("self"===t)return e;if(t.endsWith("Assign")&&Dr.has(t.slice(0,t.length-6))){const r=Dr.get(t.slice(0,t.length-6));return e.isStackNode?(...e)=>s.assign(e[0],r(...e)):(...e)=>s.assign(r(s,...e))}if(!0===/^[xyzwrgbastpq]{1,4}$/.test(t))return t=Gr(t),pn(new Ur(s,t));if(!0===/^set[XYZWRGBASTPQ]{1,4}$/.test(t))return t=kr(t.slice(3).toLowerCase()),s=>pn(new Fr(e,t,s));if(!0===/^flip[XYZWRGBASTPQ]{1,4}$/.test(t))return t=kr(t.slice(4).toLowerCase()),()=>pn(new Pr(pn(e),t));if("width"===t||"height"===t||"depth"===t)return"width"===t?t="x":"height"===t?t="y":"depth"===t&&(t="z"),pn(new Ur(e,t));if(!0===/^\d+$/.test(t))return pn(new Cr(s,new Lr(Number(t),"uint")))}return Reflect.get(e,t,s)},set:(e,t,s,r)=>"string"!=typeof t||void 0!==e[t]||!0!==/^[xyzwrgbastpq]{1,4}$/.test(t)&&"width"!==t&&"height"!==t&&"depth"!==t&&!0!==/^\d+$/.test(t)?Reflect.set(e,t,s,r):(r[t].assign(s),!0)},$r=new WeakMap,Hr=new WeakMap,Wr=function(e,t=null){for(const s in e)e[s]=pn(e[s],t);return e},jr=function(e,t=null){const s=e.length;for(let r=0;r<s;r++)e[r]=pn(e[r],t);return e},qr=function(e,t=null,s=null,r=null){const n=e=>pn(null!==r?Object.assign(e,r):e);return null===t?(...t)=>n(new e(...mn(t))):null!==s?(s=pn(s),(...r)=>n(new e(t,...mn(r),s))):(...s)=>n(new e(t,...mn(s)))},Kr=function(e,...t){return pn(new e(...mn(t)))};class Xr extends Rr{constructor(e,t){super(),this.shaderNode=e,this.inputNodes=t}getNodeType(e){return this.shaderNode.nodeType||this.getOutputNode(e).getNodeType(e)}call(e){const{shaderNode:t,inputNodes:s}=this,r=e.getNodeProperties(t);if(r.onceOutput)return r.onceOutput;let n=null;if(t.layout){let r=Hr.get(e.constructor);void 0===r&&(r=new WeakMap,Hr.set(e.constructor,r));let i=r.get(t);void 0===i&&(i=pn(e.buildFunctionNode(t)),r.set(t,i)),null!==e.currentFunctionNode&&e.currentFunctionNode.includes.push(i),n=pn(i.call(s))}else{const r=t.jsFunc,i=null!==s?r(s,e):r(e);n=pn(i)}return t.once&&(r.onceOutput=n),n}getOutputNode(e){const t=e.getNodeProperties(this);return null===t.outputNode&&(t.outputNode=this.setupOutput(e)),t.outputNode}setup(e){return this.getOutputNode(e)}setupOutput(e){return e.addStack(),e.stack.outputNode=this.call(e),e.removeStack()}generate(e,t){return this.getOutputNode(e).build(e,t)}}class Yr extends Rr{constructor(e,t){super(t),this.jsFunc=e,this.layout=null,this.global=!0,this.once=!1}setLayout(e){return this.layout=e,this}call(e=null){return gn(e),pn(new Xr(this,e))}setup(){return this.call()}}const Qr=[!1,!0],Zr=[0,1,2,3],Jr=[-1,-2],en=[.5,1.5,1/3,1e-6,1e6,Math.PI,2*Math.PI,1/Math.PI,2/Math.PI,1/(2*Math.PI),Math.PI/2],tn=new Map;for(const e of Qr)tn.set(e,new Lr(e));const sn=new Map;for(const e of Zr)sn.set(e,new Lr(e,"uint"));const rn=new Map([...sn].map((e=>new Lr(e.value,"int"))));for(const e of Jr)rn.set(e,new Lr(e,"int"));const nn=new Map([...rn].map((e=>new Lr(e.value))));for(const e of en)nn.set(e,new Lr(e));for(const e of en)nn.set(-e,new Lr(-e));const on={bool:tn,uint:sn,ints:rn,float:nn},an=new Map([...tn,...nn]),un=(e,t)=>an.has(e)?an.get(e):!0===e.isNode?e:new Lr(e,t),ln=function(e,t=null){return(...s)=>{if((0===s.length||!["bool","float","int","uint"].includes(e)&&s.every((e=>"object"!=typeof e)))&&(s=[gr(e,...s)]),1===s.length&&null!==t&&t.has(s[0]))return pn(t.get(s[0]));if(1===s.length){const t=un(s[0],e);return(e=>{try{return e.getNodeType()}catch(e){return}})(t)===e?pn(t):pn(new Er(t,e))}const r=s.map((e=>un(e)));return pn(new Mr(r,e))}},dn=e=>"object"==typeof e&&null!==e?e.value:e,cn=e=>null!=e?e.nodeType||e.convertTo||("string"==typeof e?e:null):null;function hn(e,t){return new Proxy(new Yr(e,t),zr)}const pn=(e,t=null)=>function(e,t=null){const s=pr(e);if("node"===s){let t=$r.get(e);return void 0===t&&(t=new Proxy(e,zr),$r.set(e,t),$r.set(t,t)),t}return null===t&&("float"===s||"boolean"===s)||s&&"shader"!==s&&"string"!==s?pn(un(e,t)):"shader"===s?bn(e):e}(e,t),gn=(e,t=null)=>new Wr(e,t),mn=(e,t=null)=>new jr(e,t),fn=(...e)=>new qr(...e),yn=(...e)=>new Kr(...e),bn=(e,t)=>{const s=new hn(e,t),r=(...e)=>{let t;return gn(e),t=e[0]&&e[0].isNode?[...e]:e[0],s.call(t)};return r.shaderNode=s,r.setLayout=e=>(s.setLayout(e),r),r.once=()=>(s.once=!0,r),r},xn=(...e)=>(console.warn("TSL.ShaderNode: tslFn() has been renamed to Fn()."),bn(...e));Or("toGlobal",(e=>(e.global=!0,e)));const Tn=e=>{Vr=e},_n=()=>Vr,Nn=(...e)=>Vr.If(...e);function vn(e){return Vr&&Vr.add(e),e}Or("append",vn);const Sn=new ln("color"),An=new ln("float",on.float),Rn=new ln("int",on.ints),Cn=new ln("uint",on.uint),En=new ln("bool",on.bool),wn=new ln("vec2"),Mn=new ln("ivec2"),Bn=new ln("uvec2"),Un=new ln("bvec2"),Fn=new ln("vec3"),Pn=new ln("ivec3"),In=new ln("uvec3"),Ln=new ln("bvec3"),Vn=new ln("vec4"),Dn=new ln("ivec4"),On=new ln("uvec4"),Gn=new ln("bvec4"),kn=new ln("mat2"),zn=new ln("mat3"),$n=new ln("mat4"),Hn=(e="")=>pn(new Lr(e,"string")),Wn=e=>pn(new Lr(e,"ArrayBuffer"));Or("toColor",Sn),Or("toFloat",An),Or("toInt",Rn),Or("toUint",Cn),Or("toBool",En),Or("toVec2",wn),Or("toIVec2",Mn),Or("toUVec2",Bn),Or("toBVec2",Un),Or("toVec3",Fn),Or("toIVec3",Pn),Or("toUVec3",In),Or("toBVec3",Ln),Or("toVec4",Vn),Or("toIVec4",Dn),Or("toUVec4",On),Or("toBVec4",Gn),Or("toMat2",kn),Or("toMat3",zn),Or("toMat4",$n);const jn=fn(Cr),qn=(e,t)=>pn(new Er(pn(e),t)),Kn=(e,t)=>pn(new Ur(pn(e),t));Or("element",jn),Or("convert",qn);class Xn extends Rr{static get type(){return"UniformGroupNode"}constructor(e,t=!1,s=1){super("string"),this.name=e,this.version=0,this.shared=t,this.order=s,this.isUniformGroup=!0}set needsUpdate(e){!0===e&&this.version++}serialize(e){super.serialize(e),e.name=this.name,e.version=this.version,e.shared=this.shared}deserialize(e){super.deserialize(e),this.name=e.name,this.version=e.version,this.shared=e.shared}}const Yn=e=>new Xn(e),Qn=(e,t=0)=>new Xn(e,!0,t),Zn=Qn("frame"),Jn=Qn("render"),ei=Yn("object");class ti extends Ir{static get type(){return"UniformNode"}constructor(e,t=null){super(e,t),this.isUniformNode=!0,this.name="",this.groupNode=ei}label(e){return this.name=e,this}setGroup(e){return this.groupNode=e,this}getGroup(){return this.groupNode}getUniformHash(e){return this.getHash(e)}onUpdate(e,t){const s=this.getSelf();return e=e.bind(s),super.onUpdate((t=>{const r=e(t,s);void 0!==r&&(this.value=r)}),t)}generate(e,t){const s=this.getNodeType(e),r=this.getUniformHash(e);let n=e.getNodeFromHash(r);void 0===n&&(e.setHashNode(this,r),n=this);const i=n.getInputType(e),o=e.getUniformFromNode(n,i,e.shaderStage,this.name||e.context.label),a=e.getPropertyName(o);return void 0!==e.context.label&&delete e.context.label,e.format(a,s,t)}}const si=(e,t)=>{const s=cn(t||e),r=e&&!0===e.isNode?e.node&&e.node.value||e.value:e;return pn(new ti(r,s))};class ri extends Rr{static get type(){return"PropertyNode"}constructor(e,t=null,s=!1){super(e),this.name=t,this.varying=s,this.isPropertyNode=!0}getHash(e){return this.name||super.getHash(e)}isGlobal(){return!0}generate(e){let t;return!0===this.varying?(t=e.getVaryingFromNode(this,this.name),t.needsInterpolation=!0):t=e.getVarFromNode(this,this.name),e.getPropertyName(t)}}const ni=(e,t)=>pn(new ri(e,t)),ii=(e,t)=>pn(new ri(e,t,!0)),oi=yn(ri,"vec4","DiffuseColor"),ai=yn(ri,"vec3","EmissiveColor"),ui=yn(ri,"float","Roughness"),li=yn(ri,"float","Metalness"),di=yn(ri,"float","Clearcoat"),ci=yn(ri,"float","ClearcoatRoughness"),hi=yn(ri,"vec3","Sheen"),pi=yn(ri,"float","SheenRoughness"),gi=yn(ri,"float","Iridescence"),mi=yn(ri,"float","IridescenceIOR"),fi=yn(ri,"float","IridescenceThickness"),yi=yn(ri,"float","AlphaT"),bi=yn(ri,"float","Anisotropy"),xi=yn(ri,"vec3","AnisotropyT"),Ti=yn(ri,"vec3","AnisotropyB"),_i=yn(ri,"color","SpecularColor"),Ni=yn(ri,"float","SpecularF90"),vi=yn(ri,"float","Shininess"),Si=yn(ri,"vec4","Output"),Ai=yn(ri,"float","dashSize"),Ri=yn(ri,"float","gapSize"),Ci=yn(ri,"float","pointWidth"),Ei=yn(ri,"float","IOR"),wi=yn(ri,"float","Transmission"),Mi=yn(ri,"float","Thickness"),Bi=yn(ri,"float","AttenuationDistance"),Ui=yn(ri,"color","AttenuationColor"),Fi=yn(ri,"float","Dispersion");class Pi extends wr{static get type(){return"AssignNode"}constructor(e,t){super(),this.targetNode=e,this.sourceNode=t}hasDependencies(){return!1}getNodeType(e,t){return"void"!==t?this.targetNode.getNodeType(e):"void"}needsSplitAssign(e){const{targetNode:t}=this;if(!1===e.isAvailable("swizzleAssign")&&t.isSplitNode&&t.components.length>1){const s=e.getTypeLength(t.node.getNodeType(e));return Sr.join("").slice(0,s)!==t.components}return!1}generate(e,t){const{targetNode:s,sourceNode:r}=this,n=this.needsSplitAssign(e),i=s.getNodeType(e),o=s.context({assign:!0}).build(e),a=r.build(e,i),u=r.getNodeType(e),l=e.getDataFromNode(this);let d;if(!0===l.initialized)"void"!==t&&(d=o);else if(n){const r=e.getVarFromNode(this,null,i),n=e.getPropertyName(r);e.addLineFlowCode(`${n} = ${a}`,this);const u=s.node.context({assign:!0}).build(e);for(let t=0;t<s.components.length;t++){const r=s.components[t];e.addLineFlowCode(`${u}.${r} = ${n}[ ${t} ]`,this)}"void"!==t&&(d=o)}else d=`${o} = ${a}`,"void"!==t&&"void"!==u||(e.addLineFlowCode(d,this),"void"!==t&&(d=o));return l.initialized=!0,e.format(d,i,t)}}const Ii=fn(Pi);Or("assign",Ii);class Li extends wr{static get type(){return"FunctionCallNode"}constructor(e=null,t={}){super(),this.functionNode=e,this.parameters=t}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}generate(e){const t=[],s=this.functionNode,r=s.getInputs(e),n=this.parameters,i=(t,s)=>{const r=s.type;let n;return n="pointer"===r?"&"+t.build(e):t.build(e,r),n};if(Array.isArray(n))for(let e=0;e<n.length;e++)t.push(i(n[e],r[e]));else for(const e of r){const s=n[e.name];if(void 0===s)throw new Error(`FunctionCallNode: Input '${e.name}' not found in FunctionNode.`);t.push(i(s,e))}return`${s.build(e,"property")}( ${t.join(", ")} )`}}const Vi=(e,...t)=>(t=t.length>1||t[0]&&!0===t[0].isNode?mn(t):gn(t[0]),pn(new Li(pn(e),t)));Or("call",Vi);class Di extends wr{static get type(){return"OperatorNode"}constructor(e,t,s,...r){if(super(),r.length>0){let n=new Di(e,t,s);for(let t=0;t<r.length-1;t++)n=new Di(e,n,r[t]);t=n,s=r[r.length-1]}this.op=e,this.aNode=t,this.bNode=s}getNodeType(e,t){const s=this.op,r=this.aNode,n=this.bNode,i=r.getNodeType(e),o=void 0!==n?n.getNodeType(e):null;if("void"===i||"void"===o)return"void";if("%"===s)return i;if("~"===s||"&"===s||"|"===s||"^"===s||">>"===s||"<<"===s)return e.getIntegerType(i);if("!"===s||"=="===s||"&&"===s||"||"===s||"^^"===s)return"bool";if("<"===s||">"===s||"<="===s||">="===s){const s=t?e.getTypeLength(t):Math.max(e.getTypeLength(i),e.getTypeLength(o));return s>1?`bvec${s}`:"bool"}return"float"===i&&e.isMatrix(o)?o:e.isMatrix(i)&&e.isVector(o)?e.getVectorFromMatrix(i):e.isVector(i)&&e.isMatrix(o)?e.getVectorFromMatrix(o):e.getTypeLength(o)>e.getTypeLength(i)?o:i}generate(e,t){const s=this.op,r=this.aNode,n=this.bNode,i=this.getNodeType(e,t);let o=null,a=null;"void"!==i?(o=r.getNodeType(e),a=void 0!==n?n.getNodeType(e):null,"<"===s||">"===s||"<="===s||">="===s||"=="===s?e.isVector(o)?a=o:o!==a&&(o=a="float"):">>"===s||"<<"===s?(o=i,a=e.changeComponentType(a,"uint")):e.isMatrix(o)&&e.isVector(a)?a=e.getVectorFromMatrix(o):o=e.isVector(o)&&e.isMatrix(a)?e.getVectorFromMatrix(a):a=i):o=a=i;const u=r.build(e,o),l=void 0!==n?n.build(e,a):null,d=e.getTypeLength(t),c=e.getFunctionOperator(s);return"void"!==t?"<"===s&&d>1?e.useComparisonMethod?e.format(`${e.getMethod("lessThan",t)}( ${u}, ${l} )`,i,t):e.format(`( ${u} < ${l} )`,i,t):"<="===s&&d>1?e.useComparisonMethod?e.format(`${e.getMethod("lessThanEqual",t)}( ${u}, ${l} )`,i,t):e.format(`( ${u} <= ${l} )`,i,t):">"===s&&d>1?e.useComparisonMethod?e.format(`${e.getMethod("greaterThan",t)}( ${u}, ${l} )`,i,t):e.format(`( ${u} > ${l} )`,i,t):">="===s&&d>1?e.useComparisonMethod?e.format(`${e.getMethod("greaterThanEqual",t)}( ${u}, ${l} )`,i,t):e.format(`( ${u} >= ${l} )`,i,t):"!"===s||"~"===s?e.format(`(${s}${u})`,o,t):c?e.format(`${c}( ${u}, ${l} )`,i,t):e.format(`( ${u} ${s} ${l} )`,i,t):"void"!==o?c?e.format(`${c}( ${u}, ${l} )`,i,t):e.format(`${u} ${s} ${l}`,i,t):void 0}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}}const Oi=fn(Di,"+"),Gi=fn(Di,"-"),ki=fn(Di,"*"),zi=fn(Di,"/"),$i=fn(Di,"%"),Hi=fn(Di,"=="),Wi=fn(Di,"!="),ji=fn(Di,"<"),qi=fn(Di,">"),Ki=fn(Di,"<="),Xi=fn(Di,">="),Yi=fn(Di,"&&"),Qi=fn(Di,"||"),Zi=fn(Di,"!"),Ji=fn(Di,"^^"),eo=fn(Di,"&"),to=fn(Di,"~"),so=fn(Di,"|"),ro=fn(Di,"^"),no=fn(Di,"<<"),io=fn(Di,">>");Or("add",Oi),Or("sub",Gi),Or("mul",ki),Or("div",zi),Or("modInt",$i),Or("equal",Hi),Or("notEqual",Wi),Or("lessThan",ji),Or("greaterThan",qi),Or("lessThanEqual",Ki),Or("greaterThanEqual",Xi),Or("and",Yi),Or("or",Qi),Or("not",Zi),Or("xor",Ji),Or("bitAnd",eo),Or("bitNot",to),Or("bitOr",so),Or("bitXor",ro),Or("shiftLeft",no),Or("shiftRight",io);const oo=(...e)=>(console.warn("TSL.OperatorNode: .remainder() has been renamed to .modInt()."),$i(...e));Or("remainder",oo);class ao extends wr{static get type(){return"MathNode"}constructor(e,t,s=null,r=null){super(),this.method=e,this.aNode=t,this.bNode=s,this.cNode=r}getInputType(e){const t=this.aNode.getNodeType(e),s=this.bNode?this.bNode.getNodeType(e):null,r=this.cNode?this.cNode.getNodeType(e):null,n=e.isMatrix(t)?0:e.getTypeLength(t),i=e.isMatrix(s)?0:e.getTypeLength(s),o=e.isMatrix(r)?0:e.getTypeLength(r);return n>i&&n>o?t:i>o?s:o>n?r:t}getNodeType(e){const t=this.method;return t===ao.LENGTH||t===ao.DISTANCE||t===ao.DOT?"float":t===ao.CROSS?"vec3":t===ao.ALL?"bool":t===ao.EQUALS?e.changeComponentType(this.aNode.getNodeType(e),"bool"):t===ao.MOD?this.aNode.getNodeType(e):this.getInputType(e)}generate(e,t){const s=this.method,r=this.getNodeType(e),n=this.getInputType(e),i=this.aNode,o=this.bNode,a=this.cNode,u=!0===e.renderer.isWebGLRenderer;if(s===ao.TRANSFORM_DIRECTION){let s=i,r=o;e.isMatrix(s.getNodeType(e))?r=Vn(Fn(r),0):s=Vn(Fn(s),0);const n=ki(s,r).xyz;return Ro(n).build(e,t)}if(s===ao.NEGATE)return e.format("( - "+i.build(e,n)+" )",r,t);if(s===ao.ONE_MINUS)return Gi(1,i).build(e,t);if(s===ao.RECIPROCAL)return zi(1,i).build(e,t);if(s===ao.DIFFERENCE)return Po(Gi(i,o)).build(e,t);{const l=[];return s===ao.CROSS||s===ao.MOD?l.push(i.build(e,r),o.build(e,r)):u&&s===ao.STEP?l.push(i.build(e,1===e.getTypeLength(i.getNodeType(e))?"float":n),o.build(e,n)):u&&(s===ao.MIN||s===ao.MAX)||s===ao.MOD?l.push(i.build(e,n),o.build(e,1===e.getTypeLength(o.getNodeType(e))?"float":n)):s===ao.REFRACT?l.push(i.build(e,n),o.build(e,n),a.build(e,"float")):s===ao.MIX?l.push(i.build(e,n),o.build(e,n),a.build(e,1===e.getTypeLength(a.getNodeType(e))?"float":n)):(l.push(i.build(e,n)),null!==o&&l.push(o.build(e,n)),null!==a&&l.push(a.build(e,n))),e.format(`${e.getMethod(s,r)}( ${l.join(", ")} )`,r,t)}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}ao.ALL="all",ao.ANY="any",ao.EQUALS="equals",ao.RADIANS="radians",ao.DEGREES="degrees",ao.EXP="exp",ao.EXP2="exp2",ao.LOG="log",ao.LOG2="log2",ao.SQRT="sqrt",ao.INVERSE_SQRT="inversesqrt",ao.FLOOR="floor",ao.CEIL="ceil",ao.NORMALIZE="normalize",ao.FRACT="fract",ao.SIN="sin",ao.COS="cos",ao.TAN="tan",ao.ASIN="asin",ao.ACOS="acos",ao.ATAN="atan",ao.ABS="abs",ao.SIGN="sign",ao.LENGTH="length",ao.NEGATE="negate",ao.ONE_MINUS="oneMinus",ao.DFDX="dFdx",ao.DFDY="dFdy",ao.ROUND="round",ao.RECIPROCAL="reciprocal",ao.TRUNC="trunc",ao.FWIDTH="fwidth",ao.BITCAST="bitcast",ao.TRANSPOSE="transpose",ao.ATAN2="atan2",ao.MIN="min",ao.MAX="max",ao.MOD="mod",ao.STEP="step",ao.REFLECT="reflect",ao.DISTANCE="distance",ao.DIFFERENCE="difference",ao.DOT="dot",ao.CROSS="cross",ao.POW="pow",ao.TRANSFORM_DIRECTION="transformDirection",ao.MIX="mix",ao.CLAMP="clamp",ao.REFRACT="refract",ao.SMOOTHSTEP="smoothstep",ao.FACEFORWARD="faceforward";const uo=An(1e-6),lo=An(1e6),co=An(Math.PI),ho=An(2*Math.PI),po=fn(ao,ao.ALL),go=fn(ao,ao.ANY),mo=fn(ao,ao.EQUALS),fo=fn(ao,ao.RADIANS),yo=fn(ao,ao.DEGREES),bo=fn(ao,ao.EXP),xo=fn(ao,ao.EXP2),To=fn(ao,ao.LOG),_o=fn(ao,ao.LOG2),No=fn(ao,ao.SQRT),vo=fn(ao,ao.INVERSE_SQRT),So=fn(ao,ao.FLOOR),Ao=fn(ao,ao.CEIL),Ro=fn(ao,ao.NORMALIZE),Co=fn(ao,ao.FRACT),Eo=fn(ao,ao.SIN),wo=fn(ao,ao.COS),Mo=fn(ao,ao.TAN),Bo=fn(ao,ao.ASIN),Uo=fn(ao,ao.ACOS),Fo=fn(ao,ao.ATAN),Po=fn(ao,ao.ABS),Io=fn(ao,ao.SIGN),Lo=fn(ao,ao.LENGTH),Vo=fn(ao,ao.NEGATE),Do=fn(ao,ao.ONE_MINUS),Oo=fn(ao,ao.DFDX),Go=fn(ao,ao.DFDY),ko=fn(ao,ao.ROUND),zo=fn(ao,ao.RECIPROCAL),$o=fn(ao,ao.TRUNC),Ho=fn(ao,ao.FWIDTH),Wo=fn(ao,ao.BITCAST),jo=fn(ao,ao.TRANSPOSE),qo=fn(ao,ao.ATAN2),Ko=fn(ao,ao.MIN),Xo=fn(ao,ao.MAX),Yo=fn(ao,ao.MOD),Qo=fn(ao,ao.STEP),Zo=fn(ao,ao.REFLECT),Jo=fn(ao,ao.DISTANCE),ea=fn(ao,ao.DIFFERENCE),ta=fn(ao,ao.DOT),sa=fn(ao,ao.CROSS),ra=fn(ao,ao.POW),na=fn(ao,ao.POW,2),ia=fn(ao,ao.POW,3),oa=fn(ao,ao.POW,4),aa=fn(ao,ao.TRANSFORM_DIRECTION),ua=e=>ki(Io(e),ra(Po(e),1/3)),la=e=>ta(e,e),da=fn(ao,ao.MIX),ca=(e,t=0,s=1)=>pn(new ao(ao.CLAMP,pn(e),pn(t),pn(s))),ha=e=>ca(e),pa=fn(ao,ao.REFRACT),ga=fn(ao,ao.SMOOTHSTEP),ma=fn(ao,ao.FACEFORWARD),fa=bn((([e])=>{const t=ta(e.xy,wn(12.9898,78.233)),s=Yo(t,co);return Co(Eo(s).mul(43758.5453))})),ya=(e,t,s)=>da(t,s,e),ba=(e,t,s)=>ga(t,s,e);Or("all",po),Or("any",go),Or("equals",mo),Or("radians",fo),Or("degrees",yo),Or("exp",bo),Or("exp2",xo),Or("log",To),Or("log2",_o),Or("sqrt",No),Or("inverseSqrt",vo),Or("floor",So),Or("ceil",Ao),Or("normalize",Ro),Or("fract",Co),Or("sin",Eo),Or("cos",wo),Or("tan",Mo),Or("asin",Bo),Or("acos",Uo),Or("atan",Fo),Or("abs",Po),Or("sign",Io),Or("length",Lo),Or("lengthSq",la),Or("negate",Vo),Or("oneMinus",Do),Or("dFdx",Oo),Or("dFdy",Go),Or("round",ko),Or("reciprocal",zo),Or("trunc",$o),Or("fwidth",Ho),Or("atan2",qo),Or("min",Ko),Or("max",Xo),Or("mod",Yo),Or("step",Qo),Or("reflect",Zo),Or("distance",Jo),Or("dot",ta),Or("cross",sa),Or("pow",ra),Or("pow2",na),Or("pow3",ia),Or("pow4",oa),Or("transformDirection",aa),Or("mix",ya),Or("clamp",ca),Or("refract",pa),Or("smoothstep",ba),Or("faceForward",ma),Or("difference",ea),Or("saturate",ha),Or("cbrt",ua),Or("transpose",jo),Or("rand",fa);class xa extends Rr{static get type(){return"ConditionalNode"}constructor(e,t,s=null){super(),this.condNode=e,this.ifNode=t,this.elseNode=s}getNodeType(e){const t=this.ifNode.getNodeType(e);if(null!==this.elseNode){const s=this.elseNode.getNodeType(e);if(e.getTypeLength(s)>e.getTypeLength(t))return s}return t}setup(e){const t=this.condNode.cache(),s=this.ifNode.cache(),r=this.elseNode?this.elseNode.cache():null,n=e.context.nodeBlock;e.getDataFromNode(s).parentNodeBlock=n,null!==r&&(e.getDataFromNode(r).parentNodeBlock=n);const i=e.getNodeProperties(this);i.condNode=t,i.ifNode=s.context({nodeBlock:s}),i.elseNode=r?r.context({nodeBlock:r}):null}generate(e,t){const s=this.getNodeType(e),r=e.getDataFromNode(this);if(void 0!==r.nodeProperty)return r.nodeProperty;const{condNode:n,ifNode:i,elseNode:o}=e.getNodeProperties(this),a="void"!==t,u=a?ni(s).build(e):"";r.nodeProperty=u;const l=n.build(e,"bool");e.addFlowCode(`\n${e.tab}if ( ${l} ) {\n\n`).addFlowTab();let d=i.build(e,s);if(d&&(d=a?u+" = "+d+";":"return "+d+";"),e.removeFlowTab().addFlowCode(e.tab+"\t"+d+"\n\n"+e.tab+"}"),null!==o){e.addFlowCode(" else {\n\n").addFlowTab();let t=o.build(e,s);t&&(t=a?u+" = "+t+";":"return "+t+";"),e.removeFlowTab().addFlowCode(e.tab+"\t"+t+"\n\n"+e.tab+"}\n\n")}else e.addFlowCode("\n\n");return e.format(u,s,t)}}const Ta=fn(xa);Or("select",Ta);const _a=(...e)=>(console.warn("TSL.ConditionalNode: cond() has been renamed to select()."),Ta(...e));Or("cond",_a);class Na extends Rr{static get type(){return"ContextNode"}constructor(e,t={}){super(),this.isContextNode=!0,this.node=e,this.value=t}getScope(){return this.node.getScope()}getNodeType(e){return this.node.getNodeType(e)}analyze(e){this.node.build(e)}setup(e){const t=e.getContext();e.setContext({...e.context,...this.value});const s=this.node.build(e);return e.setContext(t),s}generate(e,t){const s=e.getContext();e.setContext({...e.context,...this.value});const r=this.node.build(e,t);return e.setContext(s),r}}const va=fn(Na),Sa=(e,t)=>va(e,{label:t});Or("context",va),Or("label",Sa);class Aa extends Rr{static get type(){return"VarNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.global=!0,this.isVarNode=!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){const{node:t,name:s}=this,r=e.getVarFromNode(this,s,e.getVectorType(this.getNodeType(e))),n=e.getPropertyName(r),i=t.build(e,r.type);return e.addLineFlowCode(`${n} = ${i}`,this),n}}const Ra=fn(Aa);Or("toVar",((...e)=>Ra(...e).append()));const Ca=e=>(console.warn('TSL: "temp" is deprecated. Use ".toVar()" instead.'),Ra(e));Or("temp",Ca);class Ea extends Rr{static get type(){return"VaryingNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.isVaryingNode=!0}isGlobal(){return!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}setupVarying(e){const t=e.getNodeProperties(this);let s=t.varying;if(void 0===s){const r=this.name,n=this.getNodeType(e);t.varying=s=e.getVaryingFromNode(this,r,n),t.node=this.node}return s.needsInterpolation||(s.needsInterpolation="fragment"===e.shaderStage),s}setup(e){this.setupVarying(e)}analyze(e){return this.setupVarying(e),this.node.analyze(e)}generate(e){const t=e.getNodeProperties(this),s=this.setupVarying(e);if(void 0===t.propertyName){const r=this.getNodeType(e),n=e.getPropertyName(s,br.VERTEX);e.flowNodeFromShaderStage(br.VERTEX,this.node,r,n),t.propertyName=n}return e.getPropertyName(s)}}const wa=fn(Ea);Or("varying",wa);const Ma=bn((([e])=>{const t=e.mul(.9478672986).add(.0521327014).pow(2.4),s=e.mul(.0773993808),r=e.lessThanEqual(.04045);return da(t,s,r)})).setLayout({name:"sRGBTransferEOTF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),Ba=bn((([e])=>{const t=e.pow(.41666).mul(1.055).sub(.055),s=e.mul(12.92),r=e.lessThanEqual(.0031308);return da(t,s,r)})).setLayout({name:"sRGBTransferOETF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),Ua="WorkingColorSpace",Fa="OutputColorSpace";class Pa extends wr{static get type(){return"ColorSpaceNode"}constructor(e,t,s){super("vec4"),this.colorNode=e,this.source=t,this.target=s}resolveColorSpace(e,t){return t===Ua?u.workingColorSpace:t===Fa?e.context.outputColorSpace||e.renderer.outputColorSpace:t}setup(e){const{colorNode:t}=this,s=this.resolveColorSpace(e,this.source),r=this.resolveColorSpace(e,this.target);let i=t;return!1!==u.enabled&&s!==r&&s&&r?(u.getTransfer(s)===l&&(i=Vn(Ma(i.rgb),i.a)),u.getPrimaries(s)!==u.getPrimaries(r)&&(i=Vn(zn(u._getMatrix(new n,s,r)).mul(i.rgb),i.a)),u.getTransfer(r)===l&&(i=Vn(Ba(i.rgb),i.a)),i):i}}const Ia=e=>pn(new Pa(pn(e),Ua,Fa)),La=e=>pn(new Pa(pn(e),Fa,Ua)),Va=(e,t)=>pn(new Pa(pn(e),Ua,t)),Da=(e,t)=>pn(new Pa(pn(e),t,Ua)),Oa=(e,t,s)=>pn(new Pa(pn(e),t,s));Or("toOutputColorSpace",Ia),Or("toWorkingColorSpace",La),Or("workingToColorSpace",Va),Or("colorSpaceToWorking",Da);let Ga=class extends Cr{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),s=this.referenceNode.getNodeType(),r=this.getNodeType();return e.format(t,s,r)}};class ka extends Rr{static get type(){return"ReferenceBaseNode"}constructor(e,t,s=null,r=null){super(),this.property=e,this.uniformType=t,this.object=s,this.count=r,this.properties=e.split("."),this.reference=s,this.node=null,this.group=null,this.updateType=xr.OBJECT}setGroup(e){return this.group=e,this}element(e){return pn(new Ga(this,pn(e)))}setNodeType(e){const t=si(null,e).getSelf();null!==this.group&&t.setGroup(this.group),this.node=t}getNodeType(e){return null===this.node&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let s=e[t[0]];for(let e=1;e<t.length;e++)s=s[t[e]];return s}updateReference(e){return this.reference=null!==this.object?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){null===this.node&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}class za extends ka{static get type(){return"RendererReferenceNode"}constructor(e,t,s=null){super(e,t,s),this.renderer=s,this.setGroup(Jn)}updateReference(e){return this.reference=null!==this.renderer?this.renderer:e.renderer,this.reference}}const $a=(e,t,s)=>pn(new za(e,t,s));class Ha extends wr{static get type(){return"ToneMappingNode"}constructor(e,t=ja,s=null){super("vec3"),this.toneMapping=e,this.exposureNode=t,this.colorNode=s}getCacheKey(){return dr(super.getCacheKey(),this.toneMapping)}setup(e){const t=this.colorNode||e.context.color,s=this.toneMapping;if(s===d)return t;let r=null;const n=e.renderer.library.getToneMappingFunction(s);return null!==n?r=Vn(n(t.rgb,this.exposureNode),t.a):(console.error("ToneMappingNode: Unsupported Tone Mapping configuration.",s),r=t),r}}const Wa=(e,t,s)=>pn(new Ha(e,pn(t),pn(s))),ja=$a("toneMappingExposure","float");Or("toneMapping",((e,t,s)=>Wa(t,s,e)));class qa extends Ir{static get type(){return"BufferAttributeNode"}constructor(e,t=null,s=0,r=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferStride=s,this.bufferOffset=r,this.usage=c,this.instanced=!1,this.attribute=null,this.global=!0,e&&!0===e.isBufferAttribute&&(this.attribute=e,this.usage=e.usage,this.instanced=e.isInstancedBufferAttribute)}getHash(e){if(0===this.bufferStride&&0===this.bufferOffset){let t=e.globalCache.getData(this.value);return void 0===t&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getNodeType(e){return null===this.bufferType&&(this.bufferType=e.getTypeFromAttribute(this.attribute)),this.bufferType}setup(e){if(null!==this.attribute)return;const t=this.getNodeType(e),s=this.value,r=e.getTypeLength(t),n=this.bufferStride||r,i=this.bufferOffset,o=!0===s.isInterleavedBuffer?s:new h(s,n),a=new g(o,r,i);o.setUsage(this.usage),this.attribute=a,this.attribute.isInstancedBufferAttribute=this.instanced}generate(e){const t=this.getNodeType(e),s=e.getBufferAttributeFromNode(this,t),r=e.getPropertyName(s);let n=null;if("vertex"===e.shaderStage||"compute"===e.shaderStage)this.name=r,n=r;else{n=wa(this).build(e,t)}return n}getInputType(){return"bufferAttribute"}setUsage(e){return this.usage=e,this.attribute&&!0===this.attribute.isBufferAttribute&&(this.attribute.usage=e),this}setInstanced(e){return this.instanced=e,this}}const Ka=(e,t,s,r)=>pn(new qa(e,t,s,r)),Xa=(e,t,s,r)=>Ka(e,t,s,r).setUsage(p),Ya=(e,t,s,r)=>Ka(e,t,s,r).setInstanced(!0),Qa=(e,t,s,r)=>Xa(e,t,s,r).setInstanced(!0);Or("toAttribute",(e=>Ka(e.value)));class Za extends Rr{static get type(){return"ComputeNode"}constructor(e,t,s=[64]){super("void"),this.isComputeNode=!0,this.computeNode=e,this.count=t,this.workgroupSize=s,this.dispatchCount=0,this.version=1,this.updateBeforeType=xr.OBJECT,this.onInitFunction=null,this.updateDispatchCount()}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}updateDispatchCount(){const{count:e,workgroupSize:t}=this;let s=t[0];for(let e=1;e<t.length;e++)s*=t[e];this.dispatchCount=Math.ceil(e/s)}onInit(e){return this.onInitFunction=e,this}updateBefore({renderer:e}){e.compute(this)}generate(e){const{shaderStage:t}=e;if("compute"===t){const t=this.computeNode.build(e,"void");""!==t&&e.addLineFlowCode(t,this)}}}const Ja=(e,t,s)=>pn(new Za(pn(e),t,s));Or("compute",Ja);class eu extends Rr{static get type(){return"CacheNode"}constructor(e,t=!0){super(),this.node=e,this.parent=t,this.isCacheNode=!0}getNodeType(e){return this.node.getNodeType(e)}build(e,...t){const s=e.getCache(),r=e.getCacheFromNode(this,this.parent);e.setCache(r);const n=this.node.build(e,...t);return e.setCache(s),n}}const tu=(e,...t)=>pn(new eu(pn(e),...t));Or("cache",tu);class su extends Rr{static get type(){return"BypassNode"}constructor(e,t){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=t}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e){const t=this.callNode.build(e,"void");return""!==t&&e.addLineFlowCode(t,this),this.outputNode.build(e)}}const ru=fn(su);Or("bypass",ru);class nu extends Rr{static get type(){return"RemapNode"}constructor(e,t,s,r=An(0),n=An(1)){super(),this.node=e,this.inLowNode=t,this.inHighNode=s,this.outLowNode=r,this.outHighNode=n,this.doClamp=!0}setup(){const{node:e,inLowNode:t,inHighNode:s,outLowNode:r,outHighNode:n,doClamp:i}=this;let o=e.sub(t).div(s.sub(t));return!0===i&&(o=o.clamp()),o.mul(n.sub(r)).add(r)}}const iu=fn(nu,null,null,{doClamp:!1}),ou=fn(nu);Or("remap",iu),Or("remapClamp",ou);class au extends Rr{static get type(){return"ExpressionNode"}constructor(e="",t="void"){super(t),this.snippet=e}generate(e,t){const s=this.getNodeType(e),r=this.snippet;if("void"!==s)return e.format(`( ${r} )`,s,t);e.addLineFlowCode(r,this)}}const uu=fn(au),lu=e=>(e?Ta(e,uu("discard")):uu("discard")).append(),du=()=>uu("return").append();Or("discard",lu);class cu extends wr{static get type(){return"RenderOutputNode"}constructor(e,t,s){super("vec4"),this.colorNode=e,this.toneMapping=t,this.outputColorSpace=s,this.isRenderOutput=!0}setup({context:e}){let t=this.colorNode||e.color;const s=(null!==this.toneMapping?this.toneMapping:e.toneMapping)||d,r=(null!==this.outputColorSpace?this.outputColorSpace:e.outputColorSpace)||m;return s!==d&&(t=t.toneMapping(s)),r!==m&&r!==u.workingColorSpace&&(t=t.workingToColorSpace(r)),t}}const hu=(e,t=null,s=null)=>pn(new cu(pn(e),t,s));function pu(e){console.warn("THREE.TSLBase: AddNodeElement has been removed in favor of tree-shaking. Trying add",e)}Or("renderOutput",hu);class gu extends Rr{static get type(){return"AttributeNode"}constructor(e,t=null){super(t),this.global=!0,this._attributeName=e}getHash(e){return this.getAttributeName(e)}getNodeType(e){let t=this.nodeType;if(null===t){const s=this.getAttributeName(e);if(e.hasGeometryAttribute(s)){const r=e.geometry.getAttribute(s);t=e.getTypeFromAttribute(r)}else t="float"}return t}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){const t=this.getAttributeName(e),s=this.getNodeType(e);if(!0===e.hasGeometryAttribute(t)){const r=e.geometry.getAttribute(t),n=e.getTypeFromAttribute(r),i=e.getAttribute(t,n);if("vertex"===e.shaderStage)return e.format(i.name,n,s);return wa(this).build(e,s)}return console.warn(`AttributeNode: Vertex attribute "${t}" not found on geometry.`),e.generateConst(s)}serialize(e){super.serialize(e),e.global=this.global,e._attributeName=this._attributeName}deserialize(e){super.deserialize(e),this.global=e.global,this._attributeName=e._attributeName}}const mu=(e,t)=>pn(new gu(e,t)),fu=e=>mu("uv"+(e>0?e:""),"vec2");class yu extends Rr{static get type(){return"TextureSizeNode"}constructor(e,t=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=e,this.levelNode=t}generate(e,t){const s=this.textureNode.build(e,"property"),r=null===this.levelNode?"0":this.levelNode.build(e,"int");return e.format(`${e.getMethod("textureDimensions")}( ${s}, ${r} )`,this.getNodeType(e),t)}}const bu=fn(yu);class xu extends ti{static get type(){return"MaxMipLevelNode"}constructor(e){super(0),this._textureNode=e,this.updateType=xr.FRAME}get textureNode(){return this._textureNode}get texture(){return this._textureNode.value}update(){const e=this.texture,t=e.images,s=t&&t.length>0?t[0]&&t[0].image||t[0]:e.image;if(s&&void 0!==s.width){const{width:e,height:t}=s;this.value=Math.log2(Math.max(e,t))}}}const Tu=fn(xu);class _u extends ti{static get type(){return"TextureNode"}constructor(e,t=null,s=null,r=null){super(e),this.isTextureNode=!0,this.uvNode=t,this.levelNode=s,this.biasNode=r,this.compareNode=null,this.depthNode=null,this.gradNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=xr.NONE,this.referenceNode=null,this._value=e,this._matrixUniform=null,this.setUpdateMatrix(null===t)}set value(e){this.referenceNode?this.referenceNode.value=e:this._value=e}get value(){return this.referenceNode?this.referenceNode.value:this._value}getUniformHash(){return this.value.uuid}getNodeType(){return!0===this.value.isDepthTexture?"float":this.value.type===f?"uvec4":this.value.type===y?"ivec4":"vec4"}getInputType(){return"texture"}getDefaultUV(){return fu(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){return null===this._matrixUniform&&(this._matrixUniform=si(this.value.matrix)),this._matrixUniform.mul(Fn(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this.updateType=e?xr.FRAME:xr.NONE,this}setupUV(e,t){const s=this.value;return e.isFlipY()&&(s.image instanceof ImageBitmap&&!0===s.flipY||!0===s.isRenderTargetTexture||!0===s.isFramebufferTexture||!0===s.isDepthTexture)&&(t=this.sampler?t.flipY():t.setY(Rn(bu(this,this.levelNode).y).sub(t.y).sub(1))),t}setup(e){const t=e.getNodeProperties(this);t.referenceNode=this.referenceNode;let s=this.uvNode;null!==s&&!0!==e.context.forceUVContext||!e.context.getUV||(s=e.context.getUV(this)),s||(s=this.getDefaultUV()),!0===this.updateMatrix&&(s=this.getTransformedUV(s)),s=this.setupUV(e,s);let r=this.levelNode;null===r&&e.context.getTextureLevel&&(r=e.context.getTextureLevel(this)),t.uvNode=s,t.levelNode=r,t.biasNode=this.biasNode,t.compareNode=this.compareNode,t.gradNode=this.gradNode,t.depthNode=this.depthNode}generateUV(e,t){return t.build(e,!0===this.sampler?"vec2":"ivec2")}generateSnippet(e,t,s,r,n,i,o,a){const u=this.value;let l;return l=r?e.generateTextureLevel(u,t,s,r,i):n?e.generateTextureBias(u,t,s,n,i):a?e.generateTextureGrad(u,t,s,a,i):o?e.generateTextureCompare(u,t,s,o,i):!1===this.sampler?e.generateTextureLoad(u,t,s,i):e.generateTexture(u,t,s,i),l}generate(e,t){const s=e.getNodeProperties(this),r=this.value;if(!r||!0!==r.isTexture)throw new Error("TextureNode: Need a three.js texture.");const n=super.generate(e,"property");if("sampler"===t)return n+"_sampler";if(e.isReference(t))return n;{const i=e.getDataFromNode(this);let o=i.propertyName;if(void 0===o){const{uvNode:t,levelNode:r,biasNode:a,compareNode:u,depthNode:l,gradNode:d}=s,c=this.generateUV(e,t),h=r?r.build(e,"float"):null,p=a?a.build(e,"float"):null,g=l?l.build(e,"int"):null,m=u?u.build(e,"float"):null,f=d?[d[0].build(e,"vec2"),d[1].build(e,"vec2")]:null,y=e.getVarFromNode(this);o=e.getPropertyName(y);const b=this.generateSnippet(e,n,c,h,p,g,m,f);e.addLineFlowCode(`${o} = ${b}`,this),i.snippet=b,i.propertyName=o}let a=o;const u=this.getNodeType(e);return e.needsToWorkingColorSpace(r)&&(a=Da(uu(a,u),r.colorSpace).setup(e).build(e,u)),e.format(a,u,t)}}setSampler(e){return this.sampler=e,this}getSampler(){return this.sampler}uv(e){const t=this.clone();return t.uvNode=pn(e),t.referenceNode=this.getSelf(),pn(t)}blur(e){const t=this.clone();return t.biasNode=pn(e).mul(Tu(t)),t.referenceNode=this.getSelf(),pn(t)}level(e){const t=this.clone();return t.levelNode=pn(e),t.referenceNode=this.getSelf(),pn(t)}size(e){return bu(this,e)}bias(e){const t=this.clone();return t.biasNode=pn(e),t.referenceNode=this.getSelf(),pn(t)}compare(e){const t=this.clone();return t.compareNode=pn(e),t.referenceNode=this.getSelf(),pn(t)}grad(e,t){const s=this.clone();return s.gradNode=[pn(e),pn(t)],s.referenceNode=this.getSelf(),pn(s)}depth(e){const t=this.clone();return t.depthNode=pn(e),t.referenceNode=this.getSelf(),pn(t)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid,e.sampler=this.sampler,e.updateMatrix=this.updateMatrix,e.updateType=this.updateType}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value],this.sampler=e.sampler,this.updateMatrix=e.updateMatrix,this.updateType=e.updateType}update(){const e=this.value,t=this._matrixUniform;null!==t&&(t.value=e.matrix),!0===e.matrixAutoUpdate&&e.updateMatrix()}clone(){const e=new this.constructor(this.value,this.uvNode,this.levelNode,this.biasNode);return e.sampler=this.sampler,e}}const Nu=fn(_u),vu=(...e)=>Nu(...e).setSampler(!1),Su=e=>(!0===e.isNode?e:Nu(e)).convert("sampler"),Au=si("float").label("cameraNear").setGroup(Jn).onRenderUpdate((({camera:e})=>e.near)),Ru=si("float").label("cameraFar").setGroup(Jn).onRenderUpdate((({camera:e})=>e.far)),Cu=si("mat4").label("cameraProjectionMatrix").setGroup(Jn).onRenderUpdate((({camera:e})=>e.projectionMatrix)),Eu=si("mat4").label("cameraProjectionMatrixInverse").setGroup(Jn).onRenderUpdate((({camera:e})=>e.projectionMatrixInverse)),wu=si("mat4").label("cameraViewMatrix").setGroup(Jn).onRenderUpdate((({camera:e})=>e.matrixWorldInverse)),Mu=si("mat4").label("cameraWorldMatrix").setGroup(Jn).onRenderUpdate((({camera:e})=>e.matrixWorld)),Bu=si("mat3").label("cameraNormalMatrix").setGroup(Jn).onRenderUpdate((({camera:e})=>e.normalMatrix)),Uu=si(new s).label("cameraPosition").setGroup(Jn).onRenderUpdate((({camera:e},t)=>t.value.setFromMatrixPosition(e.matrixWorld)));class Fu extends Rr{static get type(){return"Object3DNode"}constructor(e,t=null){super(),this.scope=e,this.object3d=t,this.updateType=xr.OBJECT,this._uniformNode=new ti(null)}getNodeType(){const e=this.scope;return e===Fu.WORLD_MATRIX?"mat4":e===Fu.POSITION||e===Fu.VIEW_POSITION||e===Fu.DIRECTION||e===Fu.SCALE?"vec3":void 0}update(e){const t=this.object3d,r=this._uniformNode,n=this.scope;if(n===Fu.WORLD_MATRIX)r.value=t.matrixWorld;else if(n===Fu.POSITION)r.value=r.value||new s,r.value.setFromMatrixPosition(t.matrixWorld);else if(n===Fu.SCALE)r.value=r.value||new s,r.value.setFromMatrixScale(t.matrixWorld);else if(n===Fu.DIRECTION)r.value=r.value||new s,t.getWorldDirection(r.value);else if(n===Fu.VIEW_POSITION){const n=e.camera;r.value=r.value||new s,r.value.setFromMatrixPosition(t.matrixWorld),r.value.applyMatrix4(n.matrixWorldInverse)}}generate(e){const t=this.scope;return t===Fu.WORLD_MATRIX?this._uniformNode.nodeType="mat4":t!==Fu.POSITION&&t!==Fu.VIEW_POSITION&&t!==Fu.DIRECTION&&t!==Fu.SCALE||(this._uniformNode.nodeType="vec3"),this._uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}Fu.WORLD_MATRIX="worldMatrix",Fu.POSITION="position",Fu.SCALE="scale",Fu.VIEW_POSITION="viewPosition",Fu.DIRECTION="direction";const Pu=fn(Fu,Fu.DIRECTION),Iu=fn(Fu,Fu.WORLD_MATRIX),Lu=fn(Fu,Fu.POSITION),Vu=fn(Fu,Fu.SCALE),Du=fn(Fu,Fu.VIEW_POSITION);class Ou extends Fu{static get type(){return"ModelNode"}constructor(e){super(e)}update(e){this.object3d=e.object,super.update(e)}}const Gu=yn(Ou,Ou.DIRECTION),ku=yn(Ou,Ou.WORLD_MATRIX),zu=yn(Ou,Ou.POSITION),$u=yn(Ou,Ou.SCALE),Hu=yn(Ou,Ou.VIEW_POSITION),Wu=si(new n).onObjectUpdate((({object:e},t)=>t.value.getNormalMatrix(e.matrixWorld))),ju=si(new i).onObjectUpdate((({object:e},t)=>t.value.copy(e.matrixWorld).invert())),qu=wu.mul(ku).toVar("modelViewMatrix"),Ku=bn((e=>(e.context.isHighPrecisionModelViewMatrix=!0,si("mat4").onObjectUpdate((({object:e,camera:t})=>e.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld)))))).once()().toVar("highPrecisionModelViewMatrix"),Xu=bn((e=>{const t=e.context.isHighPrecisionModelViewMatrix;return si("mat3").onObjectUpdate((({object:e,camera:s})=>(!0!==t&&e.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix))))})).once()().toVar("highPrecisionModelNormalMatrix"),Yu=mu("position","vec3"),Qu=Yu.varying("positionLocal"),Zu=Yu.varying("positionPrevious"),Ju=ku.mul(Qu).xyz.varying("v_positionWorld"),el=Qu.transformDirection(ku).varying("v_positionWorldDirection").normalize().toVar("positionWorldDirection"),tl=qu.mul(Qu).xyz.varying("v_positionView"),sl=tl.negate().varying("v_positionViewDirection").normalize().toVar("positionViewDirection");class rl extends Rr{static get type(){return"FrontFacingNode"}constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){const{renderer:t,material:s}=e;return t.coordinateSystem===b&&s.side===x?"false":e.getFrontFacing()}}const nl=yn(rl),il=An(nl).mul(2).sub(1),ol=mu("normal","vec3"),al=bn((e=>!1===e.geometry.hasAttribute("normal")?(console.warn('TSL.NormalNode: Vertex attribute "normal" not found on geometry.'),Fn(0,1,0)):ol),"vec3").once()().toVar("normalLocal"),ul=tl.dFdx().cross(tl.dFdy()).normalize().toVar("normalFlat"),ll=bn((e=>{let t;return t=!0===e.material.flatShading?ul:wa(ml(al),"v_normalView").normalize(),t}),"vec3").once()().toVar("normalView"),dl=wa(ll.transformDirection(wu),"v_normalWorld").normalize().toVar("normalWorld"),cl=bn((e=>e.context.setupNormal()),"vec3").once()().mul(il).toVar("transformedNormalView"),hl=cl.transformDirection(wu).toVar("transformedNormalWorld"),pl=bn((e=>e.context.setupClearcoatNormal()),"vec3").once()().mul(il).toVar("transformedClearcoatNormalView"),gl=bn((([e,t=ku])=>{const s=zn(t),r=e.div(Fn(s[0].dot(s[0]),s[1].dot(s[1]),s[2].dot(s[2])));return s.mul(r).xyz})),ml=bn((([e],t)=>{const s=t.renderer.nodes.modelNormalViewMatrix;if(null!==s)return s.transformDirection(e);const r=Wu.mul(e);return wu.transformDirection(r)})),fl=si(0).onReference((({material:e})=>e)).onRenderUpdate((({material:e})=>e.refractionRatio)),yl=sl.negate().reflect(cl),bl=sl.negate().refract(cl,fl),xl=yl.transformDirection(wu).toVar("reflectVector"),Tl=bl.transformDirection(wu).toVar("reflectVector");class _l extends _u{static get type(){return"CubeTextureNode"}constructor(e,t=null,s=null,r=null){super(e,t,s,r),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){const e=this.value;return e.mapping===T?xl:e.mapping===_?Tl:(console.error('THREE.CubeTextureNode: Mapping "%s" not supported.',e.mapping),Fn(0,0,0))}setUpdateMatrix(){}setupUV(e,t){const s=this.value;return e.renderer.coordinateSystem!==N&&s.isRenderTargetTexture?t:Fn(t.x.negate(),t.yz)}generateUV(e,t){return t.build(e,"vec3")}}const Nl=fn(_l);class vl extends ti{static get type(){return"BufferNode"}constructor(e,t,s=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferCount=s}getElementType(e){return this.getNodeType(e)}getInputType(){return"buffer"}}const Sl=(e,t,s)=>pn(new vl(e,t,s));class Al extends Cr{static get type(){return"UniformArrayElementNode"}constructor(e,t){super(e,t),this.isArrayBufferElementNode=!0}generate(e){const t=super.generate(e),s=this.getNodeType();return e.format(t,"vec4",s)}}class Rl extends vl{static get type(){return"UniformArrayNode"}constructor(e,t=null){super(null,"vec4"),this.array=e,this.elementType=t,this._elementType=null,this._elementLength=0,this.updateType=xr.RENDER,this.isArrayBufferNode=!0}getElementType(){return this.elementType||this._elementType}getElementLength(){return this._elementLength}update(){const{array:e,value:t}=this,s=this.getElementLength(),r=this.getElementType();if(1===s)for(let s=0;s<e.length;s++){t[4*s]=e[s]}else if("color"===r)for(let s=0;s<e.length;s++){const r=4*s,n=e[s];t[r]=n.r,t[r+1]=n.g,t[r+2]=n.b||0}else for(let s=0;s<e.length;s++){const r=4*s,n=e[s];t[r]=n.x,t[r+1]=n.y,t[r+2]=n.z||0,t[r+3]=n.w||0}}setup(e){const t=this.array.length;this._elementType=null===this.elementType?pr(this.array[0]):this.elementType,this._elementLength=e.getTypeLength(this._elementType);let s=Float32Array;return"i"===this._elementType.charAt(0)?s=Int32Array:"u"===this._elementType.charAt(0)&&(s=Uint32Array),this.value=new s(4*t),this.bufferCount=t,this.bufferType=e.changeComponentType("vec4",e.getComponentType(this._elementType)),super.setup(e)}element(e){return pn(new Al(this,pn(e)))}}const Cl=(e,t)=>pn(new Rl(e,t)),El=(e,t)=>(console.warn("TSL.UniformArrayNode: uniforms() has been renamed to uniformArray()."),pn(new Rl(e,t)));class wl extends Cr{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),s=this.referenceNode.getNodeType(),r=this.getNodeType();return e.format(t,s,r)}}class Ml extends Rr{static get type(){return"ReferenceNode"}constructor(e,t,s=null,r=null){super(),this.property=e,this.uniformType=t,this.object=s,this.count=r,this.properties=e.split("."),this.reference=s,this.node=null,this.group=null,this.name=null,this.updateType=xr.OBJECT}element(e){return pn(new wl(this,pn(e)))}setGroup(e){return this.group=e,this}label(e){return this.name=e,this}setNodeType(e){let t=null;t=null!==this.count?Sl(null,e,this.count):Array.isArray(this.getValueFromReference())?Cl(null,e):"texture"===e?Nu(null):"cubeTexture"===e?Nl(null):si(null,e),null!==this.group&&t.setGroup(this.group),null!==this.name&&t.label(this.name),this.node=t.getSelf()}getNodeType(e){return null===this.node&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let s=e[t[0]];for(let e=1;e<t.length;e++)s=s[t[e]];return s}updateReference(e){return this.reference=null!==this.object?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){null===this.node&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const Bl=(e,t,s)=>pn(new Ml(e,t,s)),Ul=(e,t,s,r)=>pn(new Ml(e,t,r,s));class Fl extends Ml{static get type(){return"MaterialReferenceNode"}constructor(e,t,s=null){super(e,t,s),this.material=s,this.isMaterialReferenceNode=!0}updateReference(e){return this.reference=null!==this.material?this.material:e.material,this.reference}}const Pl=(e,t,s)=>pn(new Fl(e,t,s)),Il=bn((e=>(!1===e.geometry.hasAttribute("tangent")&&e.geometry.computeTangents(),mu("tangent","vec4"))))(),Ll=Il.xyz.toVar("tangentLocal"),Vl=qu.mul(Vn(Ll,0)).xyz.varying("v_tangentView").normalize().toVar("tangentView"),Dl=Vl.transformDirection(wu).varying("v_tangentWorld").normalize().toVar("tangentWorld"),Ol=Vl.toVar("transformedTangentView"),Gl=Ol.transformDirection(wu).normalize().toVar("transformedTangentWorld"),kl=e=>e.mul(Il.w).xyz,zl=wa(kl(ol.cross(Il)),"v_bitangentGeometry").normalize().toVar("bitangentGeometry"),$l=wa(kl(al.cross(Ll)),"v_bitangentLocal").normalize().toVar("bitangentLocal"),Hl=wa(kl(ll.cross(Vl)),"v_bitangentView").normalize().toVar("bitangentView"),Wl=wa(kl(dl.cross(Dl)),"v_bitangentWorld").normalize().toVar("bitangentWorld"),jl=kl(cl.cross(Ol)).normalize().toVar("transformedBitangentView"),ql=jl.transformDirection(wu).normalize().toVar("transformedBitangentWorld"),Kl=zn(Vl,Hl,ll),Xl=sl.mul(Kl),Yl=(e,t)=>e.sub(Xl.mul(t)),Ql=(()=>{let e=Ti.cross(sl);return e=e.cross(Ti).normalize(),e=da(e,cl,bi.mul(ui.oneMinus()).oneMinus().pow2().pow2()).normalize(),e})(),Zl=bn((e=>{const{eye_pos:t,surf_norm:s,mapN:r,uv:n}=e,i=t.dFdx(),o=t.dFdy(),a=n.dFdx(),u=n.dFdy(),l=s,d=o.cross(l),c=l.cross(i),h=d.mul(a.x).add(c.mul(u.x)),p=d.mul(a.y).add(c.mul(u.y)),g=h.dot(h).max(p.dot(p)),m=il.mul(g.inverseSqrt());return Oi(h.mul(r.x,m),p.mul(r.y,m),l.mul(r.z)).normalize()}));class Jl extends wr{static get type(){return"NormalMapNode"}constructor(e,t=null){super("vec3"),this.node=e,this.scaleNode=t,this.normalMapType=v}setup(e){const{normalMapType:t,scaleNode:s}=this;let r=this.node.mul(2).sub(1);null!==s&&(r=Fn(r.xy.mul(s),r.z));let n=null;if(t===S)n=ml(r);else if(t===v){n=!0===e.hasGeometryAttribute("tangent")?Kl.mul(r).normalize():Zl({eye_pos:tl,surf_norm:ll,mapN:r,uv:fu()})}return n}}const ed=fn(Jl),td=bn((({textureNode:e,bumpScale:t})=>{const s=t=>e.cache().context({getUV:e=>t(e.uvNode||fu()),forceUVContext:!0}),r=An(s((e=>e)));return wn(An(s((e=>e.add(e.dFdx())))).sub(r),An(s((e=>e.add(e.dFdy())))).sub(r)).mul(t)})),sd=bn((e=>{const{surf_pos:t,surf_norm:s,dHdxy:r}=e,n=t.dFdx().normalize(),i=s,o=t.dFdy().normalize().cross(i),a=i.cross(n),u=n.dot(o).mul(il),l=u.sign().mul(r.x.mul(o).add(r.y.mul(a)));return u.abs().mul(s).sub(l).normalize()}));class rd extends wr{static get type(){return"BumpMapNode"}constructor(e,t=null){super("vec3"),this.textureNode=e,this.scaleNode=t}setup(){const e=null!==this.scaleNode?this.scaleNode:1,t=td({textureNode:this.textureNode,bumpScale:e});return sd({surf_pos:tl,surf_norm:ll,dHdxy:t})}}const nd=fn(rd),id=new Map;class od extends Rr{static get type(){return"MaterialNode"}constructor(e){super(),this.scope=e}getCache(e,t){let s=id.get(e);return void 0===s&&(s=Pl(e,t),id.set(e,s)),s}getFloat(e){return this.getCache(e,"float")}getColor(e){return this.getCache(e,"color")}getTexture(e){return this.getCache("map"===e?"map":e+"Map","texture")}setup(e){const t=e.context.material,s=this.scope;let r=null;if(s===od.COLOR){const e=void 0!==t.color?this.getColor(s):Fn();r=t.map&&!0===t.map.isTexture?e.mul(this.getTexture("map")):e}else if(s===od.OPACITY){const e=this.getFloat(s);r=t.alphaMap&&!0===t.alphaMap.isTexture?e.mul(this.getTexture("alpha")):e}else if(s===od.SPECULAR_STRENGTH)r=t.specularMap&&!0===t.specularMap.isTexture?this.getTexture("specular").r:An(1);else if(s===od.SPECULAR_INTENSITY){const e=this.getFloat(s);r=t.specularMap?e.mul(this.getTexture(s).a):e}else if(s===od.SPECULAR_COLOR){const e=this.getColor(s);r=t.specularColorMap&&!0===t.specularColorMap.isTexture?e.mul(this.getTexture(s).rgb):e}else if(s===od.ROUGHNESS){const e=this.getFloat(s);r=t.roughnessMap&&!0===t.roughnessMap.isTexture?e.mul(this.getTexture(s).g):e}else if(s===od.METALNESS){const e=this.getFloat(s);r=t.metalnessMap&&!0===t.metalnessMap.isTexture?e.mul(this.getTexture(s).b):e}else if(s===od.EMISSIVE){const e=this.getFloat("emissiveIntensity"),n=this.getColor(s).mul(e);r=t.emissiveMap&&!0===t.emissiveMap.isTexture?n.mul(this.getTexture(s)):n}else if(s===od.NORMAL)t.normalMap?(r=ed(this.getTexture("normal"),this.getCache("normalScale","vec2")),r.normalMapType=t.normalMapType):r=t.bumpMap?nd(this.getTexture("bump").r,this.getFloat("bumpScale")):ll;else if(s===od.CLEARCOAT){const e=this.getFloat(s);r=t.clearcoatMap&&!0===t.clearcoatMap.isTexture?e.mul(this.getTexture(s).r):e}else if(s===od.CLEARCOAT_ROUGHNESS){const e=this.getFloat(s);r=t.clearcoatRoughnessMap&&!0===t.clearcoatRoughnessMap.isTexture?e.mul(this.getTexture(s).r):e}else if(s===od.CLEARCOAT_NORMAL)r=t.clearcoatNormalMap?ed(this.getTexture(s),this.getCache(s+"Scale","vec2")):ll;else if(s===od.SHEEN){const e=this.getColor("sheenColor").mul(this.getFloat("sheen"));r=t.sheenColorMap&&!0===t.sheenColorMap.isTexture?e.mul(this.getTexture("sheenColor").rgb):e}else if(s===od.SHEEN_ROUGHNESS){const e=this.getFloat(s);r=t.sheenRoughnessMap&&!0===t.sheenRoughnessMap.isTexture?e.mul(this.getTexture(s).a):e,r=r.clamp(.07,1)}else if(s===od.ANISOTROPY)if(t.anisotropyMap&&!0===t.anisotropyMap.isTexture){const e=this.getTexture(s);r=kn(Hd.x,Hd.y,Hd.y.negate(),Hd.x).mul(e.rg.mul(2).sub(wn(1)).normalize().mul(e.b))}else r=Hd;else if(s===od.IRIDESCENCE_THICKNESS){const e=Bl("1","float",t.iridescenceThicknessRange);if(t.iridescenceThicknessMap){const n=Bl("0","float",t.iridescenceThicknessRange);r=e.sub(n).mul(this.getTexture(s).g).add(n)}else r=e}else if(s===od.TRANSMISSION){const e=this.getFloat(s);r=t.transmissionMap?e.mul(this.getTexture(s).r):e}else if(s===od.THICKNESS){const e=this.getFloat(s);r=t.thicknessMap?e.mul(this.getTexture(s).g):e}else if(s===od.IOR)r=this.getFloat(s);else if(s===od.LIGHT_MAP)r=this.getTexture(s).rgb.mul(this.getFloat("lightMapIntensity"));else if(s===od.AO_MAP)r=this.getTexture(s).r.sub(1).mul(this.getFloat("aoMapIntensity")).add(1);else{const t=this.getNodeType(e);r=this.getCache(s,t)}return r}}od.ALPHA_TEST="alphaTest",od.COLOR="color",od.OPACITY="opacity",od.SHININESS="shininess",od.SPECULAR="specular",od.SPECULAR_STRENGTH="specularStrength",od.SPECULAR_INTENSITY="specularIntensity",od.SPECULAR_COLOR="specularColor",od.REFLECTIVITY="reflectivity",od.ROUGHNESS="roughness",od.METALNESS="metalness",od.NORMAL="normal",od.CLEARCOAT="clearcoat",od.CLEARCOAT_ROUGHNESS="clearcoatRoughness",od.CLEARCOAT_NORMAL="clearcoatNormal",od.EMISSIVE="emissive",od.ROTATION="rotation",od.SHEEN="sheen",od.SHEEN_ROUGHNESS="sheenRoughness",od.ANISOTROPY="anisotropy",od.IRIDESCENCE="iridescence",od.IRIDESCENCE_IOR="iridescenceIOR",od.IRIDESCENCE_THICKNESS="iridescenceThickness",od.IOR="ior",od.TRANSMISSION="transmission",od.THICKNESS="thickness",od.ATTENUATION_DISTANCE="attenuationDistance",od.ATTENUATION_COLOR="attenuationColor",od.LINE_SCALE="scale",od.LINE_DASH_SIZE="dashSize",od.LINE_GAP_SIZE="gapSize",od.LINE_WIDTH="linewidth",od.LINE_DASH_OFFSET="dashOffset",od.POINT_WIDTH="pointWidth",od.DISPERSION="dispersion",od.LIGHT_MAP="light",od.AO_MAP="ao";const ad=yn(od,od.ALPHA_TEST),ud=yn(od,od.COLOR),ld=yn(od,od.SHININESS),dd=yn(od,od.EMISSIVE),cd=yn(od,od.OPACITY),hd=yn(od,od.SPECULAR),pd=yn(od,od.SPECULAR_INTENSITY),gd=yn(od,od.SPECULAR_COLOR),md=yn(od,od.SPECULAR_STRENGTH),fd=yn(od,od.REFLECTIVITY),yd=yn(od,od.ROUGHNESS),bd=yn(od,od.METALNESS),xd=yn(od,od.NORMAL).context({getUV:null}),Td=yn(od,od.CLEARCOAT),_d=yn(od,od.CLEARCOAT_ROUGHNESS),Nd=yn(od,od.CLEARCOAT_NORMAL).context({getUV:null}),vd=yn(od,od.ROTATION),Sd=yn(od,od.SHEEN),Ad=yn(od,od.SHEEN_ROUGHNESS),Rd=yn(od,od.ANISOTROPY),Cd=yn(od,od.IRIDESCENCE),Ed=yn(od,od.IRIDESCENCE_IOR),wd=yn(od,od.IRIDESCENCE_THICKNESS),Md=yn(od,od.TRANSMISSION),Bd=yn(od,od.THICKNESS),Ud=yn(od,od.IOR),Fd=yn(od,od.ATTENUATION_DISTANCE),Pd=yn(od,od.ATTENUATION_COLOR),Id=yn(od,od.LINE_SCALE),Ld=yn(od,od.LINE_DASH_SIZE),Vd=yn(od,od.LINE_GAP_SIZE),Dd=yn(od,od.LINE_WIDTH),Od=yn(od,od.LINE_DASH_OFFSET),Gd=yn(od,od.POINT_WIDTH),kd=yn(od,od.DISPERSION),zd=yn(od,od.LIGHT_MAP),$d=yn(od,od.AO_MAP),Hd=si(new t).onReference((function(e){return e.material})).onRenderUpdate((function({material:e}){this.value.set(e.anisotropy*Math.cos(e.anisotropyRotation),e.anisotropy*Math.sin(e.anisotropyRotation))}));class Wd extends wr{static get type(){return"ModelViewProjectionNode"}constructor(e=null){super("vec4"),this.positionNode=e}setup(e){if("fragment"===e.shaderStage)return wa(e.context.mvp);const t=this.positionNode||Qu,s=e.renderer.nodes.modelViewMatrix||qu;return Cu.mul(s).mul(t)}}const jd=fn(Wd);class qd extends Rr{static get type(){return"IndexNode"}constructor(e){super("uint"),this.scope=e,this.isInstanceIndexNode=!0}generate(e){const t=this.getNodeType(e),s=this.scope;let r,n;if(s===qd.VERTEX)r=e.getVertexIndex();else if(s===qd.INSTANCE)r=e.getInstanceIndex();else if(s===qd.DRAW)r=e.getDrawIndex();else if(s===qd.INVOCATION_LOCAL)r=e.getInvocationLocalIndex();else if(s===qd.INVOCATION_SUBGROUP)r=e.getInvocationSubgroupIndex();else{if(s!==qd.SUBGROUP)throw new Error("THREE.IndexNode: Unknown scope: "+s);r=e.getSubgroupIndex()}if("vertex"===e.shaderStage||"compute"===e.shaderStage)n=r;else{n=wa(this).build(e,t)}return n}}qd.VERTEX="vertex",qd.INSTANCE="instance",qd.SUBGROUP="subgroup",qd.INVOCATION_LOCAL="invocationLocal",qd.INVOCATION_SUBGROUP="invocationSubgroup",qd.DRAW="draw";const Kd=yn(qd,qd.VERTEX),Xd=yn(qd,qd.INSTANCE),Yd=yn(qd,qd.SUBGROUP),Qd=yn(qd,qd.INVOCATION_SUBGROUP),Zd=yn(qd,qd.INVOCATION_LOCAL),Jd=yn(qd,qd.DRAW);class ec extends Rr{static get type(){return"InstanceNode"}constructor(e,t,s){super("void"),this.count=e,this.instanceMatrix=t,this.instanceColor=s,this.instanceMatrixNode=null,this.instanceColorNode=null,this.updateType=xr.FRAME,this.buffer=null,this.bufferColor=null}setup(e){const{count:t,instanceMatrix:s,instanceColor:r}=this;let{instanceMatrixNode:n,instanceColorNode:i}=this;if(null===n){if(t<=1e3)n=Sl(s.array,"mat4",Math.max(t,1)).element(Xd);else{const e=new A(s.array,16,1);this.buffer=e;const t=s.usage===p?Qa:Ya,r=[t(e,"vec4",16,0),t(e,"vec4",16,4),t(e,"vec4",16,8),t(e,"vec4",16,12)];n=$n(...r)}this.instanceMatrixNode=n}if(r&&null===i){const e=new R(r.array,3),t=r.usage===p?Qa:Ya;this.bufferColor=e,i=Fn(t(e,"vec3",3,0)),this.instanceColorNode=i}const o=n.mul(Qu).xyz;if(Qu.assign(o),e.hasGeometryAttribute("normal")){const e=gl(al,n);al.assign(e)}null!==this.instanceColorNode&&ii("vec3","vInstanceColor").assign(this.instanceColorNode)}update(){this.instanceMatrix.usage!==p&&null!=this.buffer&&this.instanceMatrix.version!==this.buffer.version&&(this.buffer.version=this.instanceMatrix.version),this.instanceColor&&this.instanceColor.usage!==p&&null!=this.bufferColor&&this.instanceColor.version!==this.bufferColor.version&&(this.bufferColor.version=this.instanceColor.version)}}const tc=fn(ec);class sc extends ec{static get type(){return"InstancedMeshNode"}constructor(e){const{count:t,instanceMatrix:s,instanceColor:r}=e;super(t,s,r),this.instanceMesh=e}}const rc=fn(sc);class nc extends Rr{static get type(){return"BatchNode"}constructor(e){super("void"),this.batchMesh=e,this.batchingIdNode=null}setup(e){null===this.batchingIdNode&&(null===e.getDrawIndex()?this.batchingIdNode=Xd:this.batchingIdNode=Jd);const t=bn((([e])=>{const t=bu(vu(this.batchMesh._indirectTexture),0),s=Rn(e).modInt(Rn(t)),r=Rn(e).div(Rn(t));return vu(this.batchMesh._indirectTexture,Mn(s,r)).x})).setLayout({name:"getIndirectIndex",type:"uint",inputs:[{name:"id",type:"int"}]}),s=t(Rn(this.batchingIdNode)),r=this.batchMesh._matricesTexture,n=bu(vu(r),0),i=An(s).mul(4).toInt().toVar(),o=i.modInt(n),a=i.div(Rn(n)),u=$n(vu(r,Mn(o,a)),vu(r,Mn(o.add(1),a)),vu(r,Mn(o.add(2),a)),vu(r,Mn(o.add(3),a))),l=this.batchMesh._colorsTexture;if(null!==l){const e=bn((([e])=>{const t=bu(vu(l),0).x,s=e,r=s.modInt(t),n=s.div(t);return vu(l,Mn(r,n)).rgb})).setLayout({name:"getBatchingColor",type:"vec3",inputs:[{name:"id",type:"int"}]}),t=e(s);ii("vec3","vBatchColor").assign(t)}const d=zn(u);Qu.assign(u.mul(Qu));const c=al.div(Fn(d[0].dot(d[0]),d[1].dot(d[1]),d[2].dot(d[2]))),h=d.mul(c).xyz;al.assign(h),e.hasGeometryAttribute("tangent")&&Ll.mulAssign(d)}}const ic=fn(nc),oc=new WeakMap;class ac extends Rr{static get type(){return"SkinningNode"}constructor(e,t=!1){let s,r,n;super("void"),this.skinnedMesh=e,this.useReference=t,this.updateType=xr.OBJECT,this.skinIndexNode=mu("skinIndex","uvec4"),this.skinWeightNode=mu("skinWeight","vec4"),t?(s=Bl("bindMatrix","mat4"),r=Bl("bindMatrixInverse","mat4"),n=Ul("skeleton.boneMatrices","mat4",e.skeleton.bones.length)):(s=si(e.bindMatrix,"mat4"),r=si(e.bindMatrixInverse,"mat4"),n=Sl(e.skeleton.boneMatrices,"mat4",e.skeleton.bones.length)),this.bindMatrixNode=s,this.bindMatrixInverseNode=r,this.boneMatricesNode=n,this.previousBoneMatricesNode=null}getSkinnedPosition(e=this.boneMatricesNode,t=Qu){const{skinIndexNode:s,skinWeightNode:r,bindMatrixNode:n,bindMatrixInverseNode:i}=this,o=e.element(s.x),a=e.element(s.y),u=e.element(s.z),l=e.element(s.w),d=n.mul(t),c=Oi(o.mul(r.x).mul(d),a.mul(r.y).mul(d),u.mul(r.z).mul(d),l.mul(r.w).mul(d));return i.mul(c).xyz}getSkinnedNormal(e=this.boneMatricesNode,t=al){const{skinIndexNode:s,skinWeightNode:r,bindMatrixNode:n,bindMatrixInverseNode:i}=this,o=e.element(s.x),a=e.element(s.y),u=e.element(s.z),l=e.element(s.w);let d=Oi(r.x.mul(o),r.y.mul(a),r.z.mul(u),r.w.mul(l));return d=i.mul(d).mul(n),d.transformDirection(t).xyz}getPreviousSkinnedPosition(e){const t=e.object;return null===this.previousBoneMatricesNode&&(t.skeleton.previousBoneMatrices=new Float32Array(t.skeleton.boneMatrices),this.previousBoneMatricesNode=Ul("skeleton.previousBoneMatrices","mat4",t.skeleton.bones.length)),this.getSkinnedPosition(this.previousBoneMatricesNode,Zu)}needsPreviousBoneMatrices(e){const t=e.renderer.getMRT();return t&&t.has("velocity")}setup(e){this.needsPreviousBoneMatrices(e)&&Zu.assign(this.getPreviousSkinnedPosition(e));const t=this.getSkinnedPosition();if(Qu.assign(t),e.hasGeometryAttribute("normal")){const t=this.getSkinnedNormal();al.assign(t),e.hasGeometryAttribute("tangent")&&Ll.assign(t)}}generate(e,t){if("void"!==t)return Qu.build(e,t)}update(e){const t=(this.useReference?e.object:this.skinnedMesh).skeleton;oc.get(t)!==e.frameId&&(oc.set(t,e.frameId),null!==this.previousBoneMatricesNode&&t.previousBoneMatrices.set(t.boneMatrices),t.update())}}const uc=e=>pn(new ac(e)),lc=e=>pn(new ac(e,!0));class dc extends Rr{static get type(){return"LoopNode"}constructor(e=[]){super(),this.params=e}getVarName(e){return String.fromCharCode("i".charCodeAt()+e)}getProperties(e){const t=e.getNodeProperties(this);if(void 0!==t.stackNode)return t;const s={};for(let e=0,t=this.params.length-1;e<t;e++){const t=this.params[e],r=!0!==t.isNode&&t.name||this.getVarName(e),n=!0!==t.isNode&&t.type||"int";s[r]=uu(r,n)}const r=e.addStack();return t.returnsNode=this.params[this.params.length-1](s,r,e),t.stackNode=r,e.removeStack(),t}getNodeType(e){const{returnsNode:t}=this.getProperties(e);return t?t.getNodeType(e):"void"}setup(e){this.getProperties(e)}generate(e){const t=this.getProperties(e),s=this.params,r=t.stackNode;for(let t=0,r=s.length-1;t<r;t++){const r=s[t];let n=null,i=null,o=null,a=null,u=null,l=null;r.isNode?(a="int",o=this.getVarName(t),n="0",i=r.build(e,a),u="<"):(a=r.type||"int",o=r.name||this.getVarName(t),n=r.start,i=r.end,u=r.condition,l=r.update,"number"==typeof n?n=e.generateConst(a,n):n&&n.isNode&&(n=n.build(e,a)),"number"==typeof i?i=e.generateConst(a,i):i&&i.isNode&&(i=i.build(e,a)),void 0!==n&&void 0===i?(n+=" - 1",i="0",u=">="):void 0!==i&&void 0===n&&(n="0",u="<"),void 0===u&&(u=Number(n)>Number(i)?">=":"<"));const d={start:n,end:i,condition:u},c=d.start,h=d.end;let p="",g="",m="";l||(l="int"===a||"uint"===a?u.includes("<")?"++":"--":u.includes("<")?"+= 1.":"-= 1."),p+=e.getVar(a,o)+" = "+c,g+=o+" "+u+" "+h,m+=o+" "+l;const f=`for ( ${p}; ${g}; ${m} )`;e.addFlowCode((0===t?"\n":"")+e.tab+f+" {\n\n").addFlowTab()}const n=r.build(e,"void"),i=t.returnsNode?t.returnsNode.build(e):"";e.removeFlowTab().addFlowCode("\n"+e.tab+n);for(let t=0,s=this.params.length-1;t<s;t++)e.addFlowCode((0===t?"":e.tab)+"}\n\n").removeFlowTab();return e.addFlowTab(),i}}const cc=(...e)=>pn(new dc(mn(e,"int"))).append(),hc=()=>uu("continue").append(),pc=()=>uu("break").append(),gc=(...e)=>(console.warn("TSL.LoopNode: loop() has been renamed to Loop()."),cc(...e)),mc=new WeakMap,fc=new r,yc=bn((({bufferMap:e,influence:t,stride:s,width:r,depth:n,offset:i})=>{const o=Rn(Kd).mul(s).add(i),a=o.div(r),u=o.sub(a.mul(r));return vu(e,Mn(u,a)).depth(n).mul(t)}));class bc extends Rr{static get type(){return"MorphNode"}constructor(e){super("void"),this.mesh=e,this.morphBaseInfluence=si(1),this.updateType=xr.OBJECT}setup(e){const{geometry:s}=e,r=void 0!==s.morphAttributes.position,n=s.hasAttribute("normal")&&void 0!==s.morphAttributes.normal,i=s.morphAttributes.position||s.morphAttributes.normal||s.morphAttributes.color,o=void 0!==i?i.length:0,{texture:a,stride:u,size:l}=function(e){const s=void 0!==e.morphAttributes.position,r=void 0!==e.morphAttributes.normal,n=void 0!==e.morphAttributes.color,i=e.morphAttributes.position||e.morphAttributes.normal||e.morphAttributes.color,o=void 0!==i?i.length:0;let a=mc.get(e);if(void 0===a||a.count!==o){void 0!==a&&a.texture.dispose();const u=e.morphAttributes.position||[],l=e.morphAttributes.normal||[],d=e.morphAttributes.color||[];let c=0;!0===s&&(c=1),!0===r&&(c=2),!0===n&&(c=3);let h=e.attributes.position.count*c,p=1;const g=4096;h>g&&(p=Math.ceil(h/g),h=g);const m=new Float32Array(h*p*4*o),f=new C(m,h,p,o);f.type=E,f.needsUpdate=!0;const y=4*c;for(let x=0;x<o;x++){const T=u[x],_=l[x],N=d[x],v=h*p*4*x;for(let S=0;S<T.count;S++){const A=S*y;!0===s&&(fc.fromBufferAttribute(T,S),m[v+A+0]=fc.x,m[v+A+1]=fc.y,m[v+A+2]=fc.z,m[v+A+3]=0),!0===r&&(fc.fromBufferAttribute(_,S),m[v+A+4]=fc.x,m[v+A+5]=fc.y,m[v+A+6]=fc.z,m[v+A+7]=0),!0===n&&(fc.fromBufferAttribute(N,S),m[v+A+8]=fc.x,m[v+A+9]=fc.y,m[v+A+10]=fc.z,m[v+A+11]=4===N.itemSize?fc.w:1)}}function b(){f.dispose(),mc.delete(e),e.removeEventListener("dispose",b)}a={count:o,texture:f,stride:c,size:new t(h,p)},mc.set(e,a),e.addEventListener("dispose",b)}return a}(s);!0===r&&Qu.mulAssign(this.morphBaseInfluence),!0===n&&al.mulAssign(this.morphBaseInfluence);const d=Rn(l.width);cc(o,(({i:e})=>{const t=An(0).toVar();this.mesh.count>1&&null!==this.mesh.morphTexture&&void 0!==this.mesh.morphTexture?t.assign(vu(this.mesh.morphTexture,Mn(Rn(e).add(1),Rn(Xd))).r):t.assign(Bl("morphTargetInfluences","float").element(e).toVar()),!0===r&&Qu.addAssign(yc({bufferMap:a,influence:t,stride:u,width:d,depth:e,offset:Rn(0)})),!0===n&&al.addAssign(yc({bufferMap:a,influence:t,stride:u,width:d,depth:e,offset:Rn(1)}))}))}update(){const e=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?e.value=1:e.value=1-this.mesh.morphTargetInfluences.reduce(((e,t)=>e+t),0)}}const xc=fn(bc);class Tc extends Rr{static get type(){return"LightingNode"}constructor(){super("vec3"),this.isLightingNode=!0}generate(){console.warn("Abstract function.")}}class _c extends Tc{static get type(){return"AONode"}constructor(e=null){super(),this.aoNode=e}setup(e){e.context.ambientOcclusion.mulAssign(this.aoNode)}}class Nc extends Na{static get type(){return"LightingContextNode"}constructor(e,t=null,s=null,r=null){super(e),this.lightingModel=t,this.backdropNode=s,this.backdropAlphaNode=r,this._value=null}getContext(){const{backdropNode:e,backdropAlphaNode:t}=this,s={directDiffuse:Fn().toVar("directDiffuse"),directSpecular:Fn().toVar("directSpecular"),indirectDiffuse:Fn().toVar("indirectDiffuse"),indirectSpecular:Fn().toVar("indirectSpecular")};return{radiance:Fn().toVar("radiance"),irradiance:Fn().toVar("irradiance"),iblIrradiance:Fn().toVar("iblIrradiance"),ambientOcclusion:An(1).toVar("ambientOcclusion"),reflectedLight:s,backdrop:e,backdropAlpha:t}}setup(e){return this.value=this._value||(this._value=this.getContext()),this.value.lightingModel=this.lightingModel||e.context.lightingModel,super.setup(e)}}const vc=fn(Nc);class Sc extends Tc{static get type(){return"IrradianceNode"}constructor(e){super(),this.node=e}setup(e){e.context.irradiance.addAssign(this.node)}}let Ac,Rc;class Cc extends Rr{static get type(){return"ScreenNode"}constructor(e){super(),this.scope=e,this.isViewportNode=!0}getNodeType(){return this.scope===Cc.VIEWPORT?"vec4":"vec2"}getUpdateType(){let e=xr.NONE;return this.scope!==Cc.SIZE&&this.scope!==Cc.VIEWPORT||(e=xr.RENDER),this.updateType=e,e}update({renderer:e}){const t=e.getRenderTarget();this.scope===Cc.VIEWPORT?null!==t?Rc.copy(t.viewport):(e.getViewport(Rc),Rc.multiplyScalar(e.getPixelRatio())):null!==t?(Ac.width=t.width,Ac.height=t.height):e.getDrawingBufferSize(Ac)}setup(){const e=this.scope;let s=null;return s=e===Cc.SIZE?si(Ac||(Ac=new t)):e===Cc.VIEWPORT?si(Rc||(Rc=new r)):wn(Mc.div(wc)),s}generate(e){if(this.scope===Cc.COORDINATE){let t=e.getFragCoord();if(e.isFlipY()){const s=e.getNodeProperties(wc).outputNode.build(e);t=`${e.getType("vec2")}( ${t}.x, ${s}.y - ${t}.y )`}return t}return super.generate(e)}}Cc.COORDINATE="coordinate",Cc.VIEWPORT="viewport",Cc.SIZE="size",Cc.UV="uv";const Ec=yn(Cc,Cc.UV),wc=yn(Cc,Cc.SIZE),Mc=yn(Cc,Cc.COORDINATE),Bc=yn(Cc,Cc.VIEWPORT),Uc=Bc.zw,Fc=Mc.sub(Bc.xy),Pc=Fc.div(Uc),Ic=bn((()=>(console.warn('TSL.ViewportNode: "viewportResolution" is deprecated. Use "screenSize" instead.'),wc)),"vec2").once()(),Lc=bn((()=>(console.warn('TSL.ViewportNode: "viewportTopLeft" is deprecated. Use "screenUV" instead.'),Ec)),"vec2").once()(),Vc=bn((()=>(console.warn('TSL.ViewportNode: "viewportBottomLeft" is deprecated. Use "screenUV.flipY()" instead.'),Ec.flipY())),"vec2").once()(),Dc=new t;class Oc extends _u{static get type(){return"ViewportTextureNode"}constructor(e=Ec,t=null,s=null){null===s&&((s=new w).minFilter=M),super(s,e,t),this.generateMipmaps=!1,this.isOutputTextureNode=!0,this.updateBeforeType=xr.FRAME}updateBefore(e){const t=e.renderer;t.getDrawingBufferSize(Dc);const s=this.value;s.image.width===Dc.width&&s.image.height===Dc.height||(s.image.width=Dc.width,s.image.height=Dc.height,s.needsUpdate=!0);const r=s.generateMipmaps;s.generateMipmaps=this.generateMipmaps,t.copyFramebufferToTexture(s),s.generateMipmaps=r}clone(){const e=new this.constructor(this.uvNode,this.levelNode,this.value);return e.generateMipmaps=this.generateMipmaps,e}}const Gc=fn(Oc),kc=fn(Oc,null,null,{generateMipmaps:!0});let zc=null;class $c extends Oc{static get type(){return"ViewportDepthTextureNode"}constructor(e=Ec,t=null){null===zc&&(zc=new B),super(e,t,zc)}}const Hc=fn($c);class Wc extends Rr{static get type(){return"ViewportDepthNode"}constructor(e,t=null){super("float"),this.scope=e,this.valueNode=t,this.isViewportDepthNode=!0}generate(e){const{scope:t}=this;return t===Wc.DEPTH_BASE?e.getFragDepth():super.generate(e)}setup({camera:e}){const{scope:t}=this,s=this.valueNode;let r=null;if(t===Wc.DEPTH_BASE)null!==s&&(r=Zc().assign(s));else if(t===Wc.DEPTH)r=e.isPerspectiveCamera?Kc(tl.z,Au,Ru):jc(tl.z,Au,Ru);else if(t===Wc.LINEAR_DEPTH)if(null!==s)if(e.isPerspectiveCamera){const e=Xc(s,Au,Ru);r=jc(e,Au,Ru)}else r=s;else r=jc(tl.z,Au,Ru);return r}}Wc.DEPTH_BASE="depthBase",Wc.DEPTH="depth",Wc.LINEAR_DEPTH="linearDepth";const jc=(e,t,s)=>e.add(t).div(t.sub(s)),qc=(e,t,s)=>t.sub(s).mul(e).sub(t),Kc=(e,t,s)=>t.add(e).mul(s).div(s.sub(t).mul(e)),Xc=(e,t,s)=>t.mul(s).div(s.sub(t).mul(e).sub(s)),Yc=(e,t,s)=>{t=t.max(1e-6).toVar();const r=_o(e.negate().div(t)),n=_o(s.div(t));return r.div(n)},Qc=(e,t,s)=>{const r=e.mul(To(s.div(t)));return An(Math.E).pow(r).mul(t).negate()},Zc=fn(Wc,Wc.DEPTH_BASE),Jc=yn(Wc,Wc.DEPTH),eh=fn(Wc,Wc.LINEAR_DEPTH),th=eh(Hc());Jc.assign=e=>Zc(e);const sh=fn(class extends Rr{constructor(e){super("float"),this.name=e,this.isBuiltinNode=!0}generate(){return this.name}});class rh extends Rr{static get type(){return"ClippingNode"}constructor(e=rh.DEFAULT){super(),this.scope=e}setup(e){super.setup(e);const t=e.clippingContext,{intersectionPlanes:s,unionPlanes:r}=t;return this.hardwareClipping=e.material.hardwareClipping,this.scope===rh.ALPHA_TO_COVERAGE?this.setupAlphaToCoverage(s,r):this.scope===rh.HARDWARE?this.setupHardwareClipping(r,e):this.setupDefault(s,r)}setupAlphaToCoverage(e,t){return bn((()=>{const s=An().toVar("distanceToPlane"),r=An().toVar("distanceToGradient"),n=An(1).toVar("clipOpacity"),i=t.length;if(!this.hardwareClipping&&i>0){const e=Cl(t);cc(i,(({i:t})=>{const i=e.element(t);s.assign(tl.dot(i.xyz).negate().add(i.w)),r.assign(s.fwidth().div(2)),n.mulAssign(ga(r.negate(),r,s))}))}const o=e.length;if(o>0){const t=Cl(e),i=An(1).toVar("intersectionClipOpacity");cc(o,(({i:e})=>{const n=t.element(e);s.assign(tl.dot(n.xyz).negate().add(n.w)),r.assign(s.fwidth().div(2)),i.mulAssign(ga(r.negate(),r,s).oneMinus())})),n.mulAssign(i.oneMinus())}oi.a.mulAssign(n),oi.a.equal(0).discard()}))()}setupDefault(e,t){return bn((()=>{const s=t.length;if(!this.hardwareClipping&&s>0){const e=Cl(t);cc(s,(({i:t})=>{const s=e.element(t);tl.dot(s.xyz).greaterThan(s.w).discard()}))}const r=e.length;if(r>0){const t=Cl(e),s=En(!0).toVar("clipped");cc(r,(({i:e})=>{const r=t.element(e);s.assign(tl.dot(r.xyz).greaterThan(r.w).and(s))})),s.discard()}}))()}setupHardwareClipping(e,t){const s=e.length;return t.enableHardwareClipping(s),bn((()=>{const r=Cl(e),n=sh(t.getClipDistance());cc(s,(({i:e})=>{const t=r.element(e),s=tl.dot(t.xyz).sub(t.w).negate();n.element(e).assign(s)}))}))()}}rh.ALPHA_TO_COVERAGE="alphaToCoverage",rh.DEFAULT="default",rh.HARDWARE="hardware";const nh=bn((([e])=>Co(ki(1e4,Eo(ki(17,e.x).add(ki(.1,e.y)))).mul(Oi(.1,Po(Eo(ki(13,e.y).add(e.x)))))))),ih=bn((([e])=>nh(wn(nh(e.xy),e.z)))),oh=bn((([e])=>{const t=Xo(Lo(Oo(e.xyz)),Lo(Go(e.xyz))).toVar("maxDeriv"),s=An(1).div(An(.05).mul(t)).toVar("pixScale"),r=wn(xo(So(_o(s))),xo(Ao(_o(s)))).toVar("pixScales"),n=wn(ih(So(r.x.mul(e.xyz))),ih(So(r.y.mul(e.xyz)))).toVar("alpha"),i=Co(_o(s)).toVar("lerpFactor"),o=Oi(ki(i.oneMinus(),n.x),ki(i,n.y)).toVar("x"),a=Ko(i,i.oneMinus()).toVar("a"),u=Fn(o.mul(o).div(ki(2,a).mul(Gi(1,a))),o.sub(ki(.5,a)).div(Gi(1,a)),Gi(1,Gi(1,o).mul(Gi(1,o)).div(ki(2,a).mul(Gi(1,a))))).toVar("cases"),l=o.lessThan(a.oneMinus()).select(o.lessThan(a).select(u.x,u.y),u.z);return ca(l,1e-6,1)}));class ah extends U{static get type(){return"NodeMaterial"}get type(){return this.constructor.type}set type(e){}constructor(){super(),this.isNodeMaterial=!0,this.forceSinglePass=!1,this.fog=!0,this.lights=!1,this.hardwareClipping=!1,this.lightsNode=null,this.envNode=null,this.aoNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.positionNode=null,this.geometryNode=null,this.depthNode=null,this.shadowPositionNode=null,this.receivedShadowNode=null,this.castShadowNode=null,this.outputNode=null,this.mrtNode=null,this.fragmentNode=null,this.vertexNode=null}customProgramCacheKey(){return this.type+cr(this)}build(e){this.setup(e)}setupObserver(e){return new or(e)}setup(e){e.context.setupNormal=()=>this.setupNormal(e);const t=e.renderer,s=t.getRenderTarget();let r;e.addStack(),e.stack.outputNode=this.vertexNode||this.setupPosition(e),null!==this.geometryNode&&(e.stack.outputNode=e.stack.outputNode.bypass(this.geometryNode)),e.addFlow("vertex",e.removeStack()),e.addStack();const n=this.setupClipping(e);if(!0===this.depthWrite&&(null!==s?!0===s.depthBuffer&&this.setupDepth(e):!0===t.depth&&this.setupDepth(e)),null===this.fragmentNode){this.setupDiffuseColor(e),this.setupVariants(e);const i=this.setupLighting(e);null!==n&&e.stack.add(n);const o=Vn(i,oi.a).max(0);if(r=this.setupOutput(e,o),Si.assign(r),null!==this.outputNode&&(r=this.outputNode),null!==s){const e=t.getMRT(),s=this.mrtNode;null!==e?(r=e,null!==s&&(r=e.merge(s))):null!==s&&(r=s)}}else{let t=this.fragmentNode;!0!==t.isOutputStructNode&&(t=Vn(t)),r=this.setupOutput(e,t)}e.stack.outputNode=r,e.addFlow("fragment",e.removeStack()),e.monitor=this.setupObserver(e)}setupClipping(e){if(null===e.clippingContext)return null;const{unionPlanes:t,intersectionPlanes:s}=e.clippingContext;let r=null;if(t.length>0||s.length>0){const t=e.renderer.samples;this.alphaToCoverage&&t>1?r=pn(new rh(rh.ALPHA_TO_COVERAGE)):e.stack.add(pn(new rh))}return r}setupHardwareClipping(e){if(this.hardwareClipping=!1,null===e.clippingContext)return;const t=e.clippingContext.unionPlanes.length;t>0&&t<=8&&e.isAvailable("clipDistance")&&(e.stack.add(pn(new rh(rh.HARDWARE))),this.hardwareClipping=!0)}setupDepth(e){const{renderer:t,camera:s}=e;let r=this.depthNode;if(null===r){const e=t.getMRT();e&&e.has("depth")?r=e.get("depth"):!0===t.logarithmicDepthBuffer&&(r=s.isPerspectiveCamera?Yc(tl.z,Au,Ru):jc(tl.z,Au,Ru))}null!==r&&Jc.assign(r).append()}setupPosition(e){const{object:t}=e,s=t.geometry;if(e.addStack(),(s.morphAttributes.position||s.morphAttributes.normal||s.morphAttributes.color)&&xc(t).append(),!0===t.isSkinnedMesh&&lc(t).append(),this.displacementMap){const e=Pl("displacementMap","texture"),t=Pl("displacementScale","float"),s=Pl("displacementBias","float");Qu.addAssign(al.normalize().mul(e.x.mul(t).add(s)))}t.isBatchedMesh&&ic(t).append(),t.isInstancedMesh&&t.instanceMatrix&&!0===t.instanceMatrix.isInstancedBufferAttribute&&rc(t).append(),null!==this.positionNode&&Qu.assign(this.positionNode),this.setupHardwareClipping(e);const r=jd();return e.context.vertex=e.removeStack(),e.context.mvp=r,r}setupDiffuseColor({object:e,geometry:t}){let s=this.colorNode?Vn(this.colorNode):ud;if(!0===this.vertexColors&&t.hasAttribute("color")&&(s=Vn(s.xyz.mul(mu("color","vec3")),s.a)),e.instanceColor){s=ii("vec3","vInstanceColor").mul(s)}if(e.isBatchedMesh&&e._colorsTexture){s=ii("vec3","vBatchColor").mul(s)}oi.assign(s);const r=this.opacityNode?An(this.opacityNode):cd;if(oi.a.assign(oi.a.mul(r)),null!==this.alphaTestNode||this.alphaTest>0){const e=null!==this.alphaTestNode?An(this.alphaTestNode):ad;oi.a.lessThanEqual(e).discard()}!0===this.alphaHash&&oi.a.lessThan(oh(Qu)).discard(),!1===this.transparent&&this.blending===F&&!1===this.alphaToCoverage&&oi.a.assign(1)}setupVariants(){}setupOutgoingLight(){return!0===this.lights?Fn(0):oi.rgb}setupNormal(){return this.normalNode?Fn(this.normalNode):xd}setupEnvironment(){let e=null;return this.envNode?e=this.envNode:this.envMap&&(e=this.envMap.isCubeTexture?Pl("envMap","cubeTexture"):Pl("envMap","texture")),e}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new Sc(zd)),t}setupLights(e){const t=[],s=this.setupEnvironment(e);s&&s.isLightingNode&&t.push(s);const r=this.setupLightMap(e);if(r&&r.isLightingNode&&t.push(r),null!==this.aoNode||e.material.aoMap){const e=null!==this.aoNode?this.aoNode:$d;t.push(new _c(e))}let n=this.lightsNode||e.lightsNode;return t.length>0&&(n=e.renderer.lighting.createNode([...n.getLights(),...t])),n}setupLightingModel(){}setupLighting(e){const{material:t}=e,{backdropNode:s,backdropAlphaNode:r,emissiveNode:n}=this,i=!0===this.lights||null!==this.lightsNode?this.setupLights(e):null;let o=this.setupOutgoingLight(e);if(i&&i.getScope().hasLights){const t=this.setupLightingModel(e);o=vc(i,t,s,r)}else null!==s&&(o=Fn(null!==r?da(o,s,r):s));return(n&&!0===n.isNode||t.emissive&&!0===t.emissive.isColor)&&(ai.assign(Fn(n||dd)),o=o.add(ai)),o}setupOutput(e,t){if(!0===this.fog){const s=e.fogNode;s&&(t=Vn(s.mix(t.rgb,s.colorNode),t.a))}return t}setDefaultValues(e){for(const t in e){const s=e[t];void 0===this[t]&&(this[t]=s,s&&s.clone&&(this[t]=s.clone()))}const t=Object.getOwnPropertyDescriptors(e.constructor.prototype);for(const e in t)void 0===Object.getOwnPropertyDescriptor(this.constructor.prototype,e)&&void 0!==t[e].get&&Object.defineProperty(this.constructor.prototype,e,t[e])}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{},nodes:{}});const s=U.prototype.toJSON.call(this,e),r=hr(this);s.inputNodes={};for(const{property:t,childNode:n}of r)s.inputNodes[t]=n.toJSON(e).uuid;function n(e){const t=[];for(const s in e){const r=e[s];delete r.metadata,t.push(r)}return t}if(t){const t=n(e.textures),r=n(e.images),i=n(e.nodes);t.length>0&&(s.textures=t),r.length>0&&(s.images=r),i.length>0&&(s.nodes=i)}return s}copy(e){return this.lightsNode=e.lightsNode,this.envNode=e.envNode,this.colorNode=e.colorNode,this.normalNode=e.normalNode,this.opacityNode=e.opacityNode,this.backdropNode=e.backdropNode,this.backdropAlphaNode=e.backdropAlphaNode,this.alphaTestNode=e.alphaTestNode,this.positionNode=e.positionNode,this.geometryNode=e.geometryNode,this.depthNode=e.depthNode,this.shadowPositionNode=e.shadowPositionNode,this.receivedShadowNode=e.receivedShadowNode,this.castShadowNode=e.castShadowNode,this.outputNode=e.outputNode,this.mrtNode=e.mrtNode,this.fragmentNode=e.fragmentNode,this.vertexNode=e.vertexNode,super.copy(e)}}const uh=new P;class lh extends ah{static get type(){return"InstancedPointsNodeMaterial"}constructor(e={}){super(),this.lights=!1,this.useAlphaToCoverage=!0,this.useColor=e.vertexColors,this.pointWidth=1,this.pointColorNode=null,this.pointWidthNode=null,this.setDefaultValues(uh),this.setValues(e)}setup(e){this.setupShaders(e),super.setup(e)}setupShaders({renderer:e}){const t=this.alphaToCoverage,s=this.useColor;this.vertexNode=bn((()=>{const e=mu("instancePosition").xyz,t=Vn(qu.mul(Vn(e,1))),s=Bc.z.div(Bc.w),r=Cu.mul(t),n=Yu.xy.toVar();return n.mulAssign(this.pointWidthNode?this.pointWidthNode:Gd),n.assign(n.div(Bc.z)),n.y.assign(n.y.mul(s)),n.assign(n.mul(r.w)),r.addAssign(Vn(n,0,0)),r}))(),this.fragmentNode=bn((()=>{const r=An(1).toVar(),n=la(fu().mul(2).sub(1));if(t&&e.samples>1){const e=An(n.fwidth()).toVar();r.assign(ga(e.oneMinus(),e.add(1),n).oneMinus())}else n.greaterThan(1).discard();let i;if(this.pointColorNode)i=this.pointColorNode;else if(s){i=mu("instanceColor").mul(ud)}else i=ud;return r.mulAssign(cd),Vn(i,r)}))()}get alphaToCoverage(){return this.useAlphaToCoverage}set alphaToCoverage(e){this.useAlphaToCoverage!==e&&(this.useAlphaToCoverage=e,this.needsUpdate=!0)}}const dh=new I;class ch extends ah{static get type(){return"LineBasicNodeMaterial"}constructor(e){super(),this.isLineBasicNodeMaterial=!0,this.lights=!1,this.setDefaultValues(dh),this.setValues(e)}}const hh=new L;class ph extends ah{static get type(){return"LineDashedNodeMaterial"}constructor(e){super(),this.isLineDashedNodeMaterial=!0,this.lights=!1,this.setDefaultValues(hh),this.dashOffset=0,this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setupVariants(){const e=this.offsetNode?An(this.offsetNodeNode):Od,t=this.dashScaleNode?An(this.dashScaleNode):Id,s=this.dashSizeNode?An(this.dashSizeNode):Ld,r=this.dashSizeNode?An(this.dashGapNode):Vd;Ai.assign(s),Ri.assign(r);const n=wa(mu("lineDistance").mul(t));(e?n.add(e):n).mod(Ai.add(Ri)).greaterThan(Ai).discard()}}const gh=new L;class mh extends ah{static get type(){return"Line2NodeMaterial"}constructor(e={}){super(),this.lights=!1,this.setDefaultValues(gh),this.useAlphaToCoverage=!0,this.useColor=e.vertexColors,this.useDash=e.dashed,this.useWorldUnits=!1,this.dashOffset=0,this.lineWidth=1,this.lineColorNode=null,this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setup(e){this.setupShaders(e),super.setup(e)}setupShaders({renderer:e}){const t=this.alphaToCoverage,s=this.useColor,r=this.dashed,n=this.worldUnits,i=bn((({start:e,end:t})=>{const s=Cu.element(2).element(2),r=Cu.element(3).element(2).mul(-.5).div(s).sub(e.z).div(t.z.sub(e.z));return Vn(da(e.xyz,t.xyz,r),t.w)})).setLayout({name:"trimSegment",type:"vec4",inputs:[{name:"start",type:"vec4"},{name:"end",type:"vec4"}]});this.vertexNode=bn((()=>{const e=mu("instanceStart"),t=mu("instanceEnd"),s=Vn(qu.mul(Vn(e,1))).toVar("start"),o=Vn(qu.mul(Vn(t,1))).toVar("end");if(r){const e=this.dashScaleNode?An(this.dashScaleNode):Id,t=this.offsetNode?An(this.offsetNodeNode):Od,s=mu("instanceDistanceStart"),r=mu("instanceDistanceEnd");let n=Yu.y.lessThan(.5).select(e.mul(s),e.mul(r));n=n.add(t),ii("float","lineDistance").assign(n)}n&&(ii("vec3","worldStart").assign(s.xyz),ii("vec3","worldEnd").assign(o.xyz));const a=Bc.z.div(Bc.w),u=Cu.element(2).element(3).equal(-1);Nn(u,(()=>{Nn(s.z.lessThan(0).and(o.z.greaterThan(0)),(()=>{o.assign(i({start:s,end:o}))})).ElseIf(o.z.lessThan(0).and(s.z.greaterThanEqual(0)),(()=>{s.assign(i({start:o,end:s}))}))}));const l=Cu.mul(s),d=Cu.mul(o),c=l.xyz.div(l.w),h=d.xyz.div(d.w),p=h.xy.sub(c.xy).toVar();p.x.assign(p.x.mul(a)),p.assign(p.normalize());const g=Vn().toVar();if(n){const e=o.xyz.sub(s.xyz).normalize(),t=da(s.xyz,o.xyz,.5).normalize(),n=e.cross(t).normalize(),i=e.cross(n),a=ii("vec4","worldPos");a.assign(Yu.y.lessThan(.5).select(s,o));const u=Dd.mul(.5);a.addAssign(Vn(Yu.x.lessThan(0).select(n.mul(u),n.mul(u).negate()),0)),r||(a.addAssign(Vn(Yu.y.lessThan(.5).select(e.mul(u).negate(),e.mul(u)),0)),a.addAssign(Vn(i.mul(u),0)),Nn(Yu.y.greaterThan(1).or(Yu.y.lessThan(0)),(()=>{a.subAssign(Vn(i.mul(2).mul(u),0))}))),g.assign(Cu.mul(a));const l=Fn().toVar();l.assign(Yu.y.lessThan(.5).select(c,h)),g.z.assign(l.z.mul(g.w))}else{const e=wn(p.y,p.x.negate()).toVar("offset");p.x.assign(p.x.div(a)),e.x.assign(e.x.div(a)),e.assign(Yu.x.lessThan(0).select(e.negate(),e)),Nn(Yu.y.lessThan(0),(()=>{e.assign(e.sub(p))})).ElseIf(Yu.y.greaterThan(1),(()=>{e.assign(e.add(p))})),e.assign(e.mul(Dd)),e.assign(e.div(Bc.w)),g.assign(Yu.y.lessThan(.5).select(l,d)),e.assign(e.mul(g.w)),g.assign(g.add(Vn(e,0,0)))}return g}))();const o=bn((({p1:e,p2:t,p3:s,p4:r})=>{const n=e.sub(s),i=r.sub(s),o=t.sub(e),a=n.dot(i),u=i.dot(o),l=n.dot(o),d=i.dot(i),c=o.dot(o).mul(d).sub(u.mul(u)),h=a.mul(u).sub(l.mul(d)).div(c).clamp(),p=a.add(u.mul(h)).div(d).clamp();return wn(h,p)}));this.fragmentNode=bn((()=>{const i=fu();if(r){const e=this.dashSizeNode?An(this.dashSizeNode):Ld,t=this.dashSizeNode?An(this.dashGapNode):Vd;Ai.assign(e),Ri.assign(t);const s=ii("float","lineDistance");i.y.lessThan(-1).or(i.y.greaterThan(1)).discard(),s.mod(Ai.add(Ri)).greaterThan(Ai).discard()}const a=An(1).toVar("alpha");if(n){const s=ii("vec3","worldStart"),n=ii("vec3","worldEnd"),i=ii("vec4","worldPos").xyz.normalize().mul(1e5),u=n.sub(s),l=o({p1:s,p2:n,p3:Fn(0,0,0),p4:i}),d=s.add(u.mul(l.x)),c=i.mul(l.y),h=d.sub(c).length().div(Dd);if(!r)if(t&&e.samples>1){const e=h.fwidth();a.assign(ga(e.negate().add(.5),e.add(.5),h).oneMinus())}else h.greaterThan(.5).discard()}else if(t&&e.samples>1){const e=i.x,t=i.y.greaterThan(0).select(i.y.sub(1),i.y.add(1)),s=e.mul(e).add(t.mul(t)),r=An(s.fwidth()).toVar("dlen");Nn(i.y.abs().greaterThan(1),(()=>{a.assign(ga(r.oneMinus(),r.add(1),s).oneMinus())}))}else Nn(i.y.abs().greaterThan(1),(()=>{const e=i.x,t=i.y.greaterThan(0).select(i.y.sub(1),i.y.add(1));e.mul(e).add(t.mul(t)).greaterThan(1).discard()}));let u;if(this.lineColorNode)u=this.lineColorNode;else if(s){const e=mu("instanceColorStart"),t=mu("instanceColorEnd");u=Yu.y.lessThan(.5).select(e,t).mul(ud)}else u=ud;return Vn(u,a)}))()}get worldUnits(){return this.useWorldUnits}set worldUnits(e){this.useWorldUnits!==e&&(this.useWorldUnits=e,this.needsUpdate=!0)}get dashed(){return this.useDash}set dashed(e){this.useDash!==e&&(this.useDash=e,this.needsUpdate=!0)}get alphaToCoverage(){return this.useAlphaToCoverage}set alphaToCoverage(e){this.useAlphaToCoverage!==e&&(this.useAlphaToCoverage=e,this.needsUpdate=!0)}}const fh=e=>pn(e).mul(.5).add(.5),yh=e=>pn(e).mul(2).sub(1),bh=new V;class xh extends ah{static get type(){return"MeshNormalNodeMaterial"}constructor(e){super(),this.lights=!1,this.isMeshNormalNodeMaterial=!0,this.setDefaultValues(bh),this.setValues(e)}setupDiffuseColor(){const e=this.opacityNode?An(this.opacityNode):cd;oi.assign(Vn(fh(cl),e))}}class Th extends wr{static get type(){return"EquirectUVNode"}constructor(e=el){super("vec2"),this.dirNode=e}setup(){const e=this.dirNode,t=e.z.atan2(e.x).mul(1/(2*Math.PI)).add(.5),s=e.y.clamp(-1,1).asin().mul(1/Math.PI).add(.5);return wn(t,s)}}const _h=fn(Th);class Nh extends D{constructor(e=1,t={}){super(e,t),this.isCubeRenderTarget=!0}fromEquirectangularTexture(e,t){const s=t.minFilter,r=t.generateMipmaps;t.generateMipmaps=!0,this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n=new O(5,5,5),i=_h(el),o=new ah;o.colorNode=Nu(t,i,0),o.side=x,o.blending=G;const a=new k(n,o),u=new z;u.add(a),t.minFilter===M&&(t.minFilter=$);const l=new H(1,10,this),d=e.getMRT();return e.setMRT(null),l.update(e,u),e.setMRT(d),t.minFilter=s,t.currentGenerateMipmaps=r,a.geometry.dispose(),a.material.dispose(),this}}const vh=new WeakMap;class Sh extends wr{static get type(){return"CubeMapNode"}constructor(e){super("vec3"),this.envNode=e,this._cubeTexture=null,this._cubeTextureNode=Nl();const t=new W;t.isRenderTargetTexture=!0,this._defaultTexture=t,this.updateBeforeType=xr.RENDER}updateBefore(e){const{renderer:t,material:s}=e,r=this.envNode;if(r.isTextureNode||r.isMaterialReferenceNode){const e=r.isTextureNode?r.value:s[r.property];if(e&&e.isTexture){const s=e.mapping;if(s===j||s===q){if(vh.has(e)){const t=vh.get(e);Rh(t,e.mapping),this._cubeTexture=t}else{const s=e.image;if(function(e){return null!=e&&e.height>0}(s)){const r=new Nh(s.height);r.fromEquirectangularTexture(t,e),Rh(r.texture,e.mapping),this._cubeTexture=r.texture,vh.set(e,r.texture),e.addEventListener("dispose",Ah)}else this._cubeTexture=this._defaultTexture}this._cubeTextureNode.value=this._cubeTexture}else this._cubeTextureNode=this.envNode}}}setup(e){return this.updateBefore(e),this._cubeTextureNode}}function Ah(e){const t=e.target;t.removeEventListener("dispose",Ah);const s=vh.get(t);void 0!==s&&(vh.delete(t),s.dispose())}function Rh(e,t){t===j?e.mapping=T:t===q&&(e.mapping=_)}const Ch=fn(Sh);class Eh extends Tc{static get type(){return"BasicEnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){e.context.environment=Ch(this.envNode)}}class wh extends Tc{static get type(){return"BasicLightMapNode"}constructor(e=null){super(),this.lightMapNode=e}setup(e){const t=An(1/Math.PI);e.context.irradianceLightMap=this.lightMapNode.mul(t)}}class Mh{start(){}finish(){}direct(){}directRectArea(){}indirect(){}ambientOcclusion(){}}class Bh extends Mh{constructor(){super()}indirect(e,t,s){const r=e.ambientOcclusion,n=e.reflectedLight,i=s.context.irradianceLightMap;n.indirectDiffuse.assign(Vn(0)),i?n.indirectDiffuse.addAssign(i):n.indirectDiffuse.addAssign(Vn(1,1,1,0)),n.indirectDiffuse.mulAssign(r),n.indirectDiffuse.mulAssign(oi.rgb)}finish(e,t,s){const r=s.material,n=e.outgoingLight,i=s.context.environment;if(i)switch(r.combine){case Y:n.rgb.assign(da(n.rgb,n.rgb.mul(i.rgb),md.mul(fd)));break;case X:n.rgb.assign(da(n.rgb,i.rgb,md.mul(fd)));break;case K:n.rgb.addAssign(i.rgb.mul(md.mul(fd)));break;default:console.warn("THREE.BasicLightingModel: Unsupported .combine value:",r.combine)}}}const Uh=new Q;class Fh extends ah{static get type(){return"MeshBasicNodeMaterial"}constructor(e){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!0,this.setDefaultValues(Uh),this.setValues(e)}setupNormal(){return ll}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Eh(t):null}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new wh(zd)),t}setupOutgoingLight(){return oi.rgb}setupLightingModel(){return new Bh}}const Ph=bn((({f0:e,f90:t,dotVH:s})=>{const r=s.mul(-5.55473).sub(6.98316).mul(s).exp2();return e.mul(r.oneMinus()).add(t.mul(r))})),Ih=bn((e=>e.diffuseColor.mul(1/Math.PI))),Lh=bn((({dotNH:e})=>vi.mul(An(.5)).add(1).mul(An(1/Math.PI)).mul(e.pow(vi)))),Vh=bn((({lightDirection:e})=>{const t=e.add(sl).normalize(),s=cl.dot(t).clamp(),r=sl.dot(t).clamp(),n=Ph({f0:_i,f90:1,dotVH:r}),i=An(.25),o=Lh({dotNH:s});return n.mul(i).mul(o)}));class Dh extends Bh{constructor(e=!0){super(),this.specular=e}direct({lightDirection:e,lightColor:t,reflectedLight:s}){const r=cl.dot(e).clamp().mul(t);s.directDiffuse.addAssign(r.mul(Ih({diffuseColor:oi.rgb}))),!0===this.specular&&s.directSpecular.addAssign(r.mul(Vh({lightDirection:e})).mul(md))}indirect({ambientOcclusion:e,irradiance:t,reflectedLight:s}){s.indirectDiffuse.addAssign(t.mul(Ih({diffuseColor:oi}))),s.indirectDiffuse.mulAssign(e)}}const Oh=new Z;class Gh extends ah{static get type(){return"MeshLambertNodeMaterial"}constructor(e){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(Oh),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Eh(t):null}setupLightingModel(){return new Dh(!1)}}const kh=new J;class zh extends ah{static get type(){return"MeshPhongNodeMaterial"}constructor(e){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(kh),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new Eh(t):null}setupLightingModel(){return new Dh}setupVariants(){const e=(this.shininessNode?An(this.shininessNode):ld).max(1e-4);vi.assign(e);const t=this.specularNode||hd;_i.assign(t)}copy(e){return this.shininessNode=e.shininessNode,this.specularNode=e.specularNode,super.copy(e)}}const $h=bn((e=>{if(!1===e.geometry.hasAttribute("normal"))return An(0);const t=ll.dFdx().abs().max(ll.dFdy().abs());return t.x.max(t.y).max(t.z)})),Hh=bn((e=>{const{roughness:t}=e,s=$h();let r=t.max(.0525);return r=r.add(s),r=r.min(1),r})),Wh=bn((({alpha:e,dotNL:t,dotNV:s})=>{const r=e.pow2(),n=t.mul(r.add(r.oneMinus().mul(s.pow2())).sqrt()),i=s.mul(r.add(r.oneMinus().mul(t.pow2())).sqrt());return zi(.5,n.add(i).max(uo))})).setLayout({name:"V_GGX_SmithCorrelated",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNL",type:"float"},{name:"dotNV",type:"float"}]}),jh=bn((({alphaT:e,alphaB:t,dotTV:s,dotBV:r,dotTL:n,dotBL:i,dotNV:o,dotNL:a})=>{const u=a.mul(Fn(e.mul(s),t.mul(r),o).length()),l=o.mul(Fn(e.mul(n),t.mul(i),a).length());return zi(.5,u.add(l)).saturate()})).setLayout({name:"V_GGX_SmithCorrelated_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotTV",type:"float",qualifier:"in"},{name:"dotBV",type:"float",qualifier:"in"},{name:"dotTL",type:"float",qualifier:"in"},{name:"dotBL",type:"float",qualifier:"in"},{name:"dotNV",type:"float",qualifier:"in"},{name:"dotNL",type:"float",qualifier:"in"}]}),qh=bn((({alpha:e,dotNH:t})=>{const s=e.pow2(),r=t.pow2().mul(s.oneMinus()).oneMinus();return s.div(r.pow2()).mul(1/Math.PI)})).setLayout({name:"D_GGX",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNH",type:"float"}]}),Kh=An(1/Math.PI),Xh=bn((({alphaT:e,alphaB:t,dotNH:s,dotTH:r,dotBH:n})=>{const i=e.mul(t),o=Fn(t.mul(r),e.mul(n),i.mul(s)),a=o.dot(o),u=i.div(a);return Kh.mul(i.mul(u.pow2()))})).setLayout({name:"D_GGX_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotNH",type:"float",qualifier:"in"},{name:"dotTH",type:"float",qualifier:"in"},{name:"dotBH",type:"float",qualifier:"in"}]}),Yh=bn((e=>{const{lightDirection:t,f0:s,f90:r,roughness:n,f:i,USE_IRIDESCENCE:o,USE_ANISOTROPY:a}=e,u=e.normalView||cl,l=n.pow2(),d=t.add(sl).normalize(),c=u.dot(t).clamp(),h=u.dot(sl).clamp(),p=u.dot(d).clamp(),g=sl.dot(d).clamp();let m,f,y=Ph({f0:s,f90:r,dotVH:g});if(dn(o)&&(y=gi.mix(y,i)),dn(a)){const e=xi.dot(t),s=xi.dot(sl),r=xi.dot(d),n=Ti.dot(t),i=Ti.dot(sl),o=Ti.dot(d);m=jh({alphaT:yi,alphaB:l,dotTV:s,dotBV:i,dotTL:e,dotBL:n,dotNV:h,dotNL:c}),f=Xh({alphaT:yi,alphaB:l,dotNH:p,dotTH:r,dotBH:o})}else m=Wh({alpha:l,dotNL:c,dotNV:h}),f=qh({alpha:l,dotNH:p});return y.mul(m).mul(f)})),Qh=bn((({roughness:e,dotNV:t})=>{const s=Vn(-1,-.0275,-.572,.022),r=Vn(1,.0425,1.04,-.04),n=e.mul(s).add(r),i=n.x.mul(n.x).min(t.mul(-9.28).exp2()).mul(n.x).add(n.y);return wn(-1.04,1.04).mul(i).add(n.zw)})).setLayout({name:"DFGApprox",type:"vec2",inputs:[{name:"roughness",type:"float"},{name:"dotNV",type:"vec3"}]}),Zh=bn((e=>{const{dotNV:t,specularColor:s,specularF90:r,roughness:n}=e,i=Qh({dotNV:t,roughness:n});return s.mul(i.x).add(r.mul(i.y))})),Jh=bn((({f:e,f90:t,dotVH:s})=>{const r=s.oneMinus().saturate(),n=r.mul(r),i=r.mul(n,n).clamp(0,.9999);return e.sub(Fn(t).mul(i)).div(i.oneMinus())})).setLayout({name:"Schlick_to_F0",type:"vec3",inputs:[{name:"f",type:"vec3"},{name:"f90",type:"float"},{name:"dotVH",type:"float"}]}),ep=bn((({roughness:e,dotNH:t})=>{const s=e.pow2(),r=An(1).div(s),n=t.pow2().oneMinus().max(.0078125);return An(2).add(r).mul(n.pow(r.mul(.5))).div(2*Math.PI)})).setLayout({name:"D_Charlie",type:"float",inputs:[{name:"roughness",type:"float"},{name:"dotNH",type:"float"}]}),tp=bn((({dotNV:e,dotNL:t})=>An(1).div(An(4).mul(t.add(e).sub(t.mul(e)))))).setLayout({name:"V_Neubelt",type:"float",inputs:[{name:"dotNV",type:"float"},{name:"dotNL",type:"float"}]}),sp=bn((({lightDirection:e})=>{const t=e.add(sl).normalize(),s=cl.dot(e).clamp(),r=cl.dot(sl).clamp(),n=cl.dot(t).clamp(),i=ep({roughness:pi,dotNH:n}),o=tp({dotNV:r,dotNL:s});return hi.mul(i).mul(o)})),rp=bn((({N:e,V:t,roughness:s})=>{const r=e.dot(t).saturate(),n=wn(s,r.oneMinus().sqrt());return n.assign(n.mul(.984375).add(.0078125)),n})).setLayout({name:"LTC_Uv",type:"vec2",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"roughness",type:"float"}]}),np=bn((({f:e})=>{const t=e.length();return Xo(t.mul(t).add(e.z).div(t.add(1)),0)})).setLayout({name:"LTC_ClippedSphereFormFactor",type:"float",inputs:[{name:"f",type:"vec3"}]}),ip=bn((({v1:e,v2:t})=>{const s=e.dot(t),r=s.abs().toVar(),n=r.mul(.0145206).add(.4965155).mul(r).add(.8543985).toVar(),i=r.add(4.1616724).mul(r).add(3.417594).toVar(),o=n.div(i),a=s.greaterThan(0).select(o,Xo(s.mul(s).oneMinus(),1e-7).inverseSqrt().mul(.5).sub(o));return e.cross(t).mul(a)})).setLayout({name:"LTC_EdgeVectorFormFactor",type:"vec3",inputs:[{name:"v1",type:"vec3"},{name:"v2",type:"vec3"}]}),op=bn((({N:e,V:t,P:s,mInv:r,p0:n,p1:i,p2:o,p3:a})=>{const u=i.sub(n).toVar(),l=a.sub(n).toVar(),d=u.cross(l),c=Fn().toVar();return Nn(d.dot(s.sub(n)).greaterThanEqual(0),(()=>{const u=t.sub(e.mul(t.dot(e))).normalize(),l=e.cross(u).negate(),d=r.mul(zn(u,l,e).transpose()).toVar(),h=d.mul(n.sub(s)).normalize().toVar(),p=d.mul(i.sub(s)).normalize().toVar(),g=d.mul(o.sub(s)).normalize().toVar(),m=d.mul(a.sub(s)).normalize().toVar(),f=Fn(0).toVar();f.addAssign(ip({v1:h,v2:p})),f.addAssign(ip({v1:p,v2:g})),f.addAssign(ip({v1:g,v2:m})),f.addAssign(ip({v1:m,v2:h})),c.assign(Fn(np({f:f})))})),c})).setLayout({name:"LTC_Evaluate",type:"vec3",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"P",type:"vec3"},{name:"mInv",type:"mat3"},{name:"p0",type:"vec3"},{name:"p1",type:"vec3"},{name:"p2",type:"vec3"},{name:"p3",type:"vec3"}]}),ap=1/6,up=e=>ki(ap,ki(e,ki(e,e.negate().add(3)).sub(3)).add(1)),lp=e=>ki(ap,ki(e,ki(e,ki(3,e).sub(6))).add(4)),dp=e=>ki(ap,ki(e,ki(e,ki(-3,e).add(3)).add(3)).add(1)),cp=e=>ki(ap,ra(e,3)),hp=e=>up(e).add(lp(e)),pp=e=>dp(e).add(cp(e)),gp=e=>Oi(-1,lp(e).div(up(e).add(lp(e)))),mp=e=>Oi(1,cp(e).div(dp(e).add(cp(e)))),fp=(e,t,s)=>{const r=e.uvNode,n=ki(r,t.zw).add(.5),i=So(n),o=Co(n),a=hp(o.x),u=pp(o.x),l=gp(o.x),d=mp(o.x),c=gp(o.y),h=mp(o.y),p=wn(i.x.add(l),i.y.add(c)).sub(.5).mul(t.xy),g=wn(i.x.add(d),i.y.add(c)).sub(.5).mul(t.xy),m=wn(i.x.add(l),i.y.add(h)).sub(.5).mul(t.xy),f=wn(i.x.add(d),i.y.add(h)).sub(.5).mul(t.xy),y=hp(o.y).mul(Oi(a.mul(e.uv(p).level(s)),u.mul(e.uv(g).level(s)))),b=pp(o.y).mul(Oi(a.mul(e.uv(m).level(s)),u.mul(e.uv(f).level(s))));return y.add(b)},yp=bn((([e,t=An(3)])=>{const s=wn(e.size(Rn(t))),r=wn(e.size(Rn(t.add(1)))),n=zi(1,s),i=zi(1,r),o=fp(e,Vn(n,s),So(t)),a=fp(e,Vn(i,r),Ao(t));return Co(t).mix(o,a)})),bp=bn((([e,t,s,r,n])=>{const i=Fn(pa(t.negate(),Ro(e),zi(1,r))),o=Fn(Lo(n[0].xyz),Lo(n[1].xyz),Lo(n[2].xyz));return Ro(i).mul(s.mul(o))})).setLayout({name:"getVolumeTransmissionRay",type:"vec3",inputs:[{name:"n",type:"vec3"},{name:"v",type:"vec3"},{name:"thickness",type:"float"},{name:"ior",type:"float"},{name:"modelMatrix",type:"mat4"}]}),xp=bn((([e,t])=>e.mul(ca(t.mul(2).sub(2),0,1)))).setLayout({name:"applyIorToRoughness",type:"float",inputs:[{name:"roughness",type:"float"},{name:"ior",type:"float"}]}),Tp=kc(),_p=kc(),Np=bn((([e,t,s],{material:r})=>{const n=(r.side==x?Tp:_p).uv(e),i=_o(wc.x).mul(xp(t,s));return yp(n,i)})),vp=bn((([e,t,s])=>(Nn(s.notEqual(0),(()=>{const r=To(t).negate().div(s);return bo(r.negate().mul(e))})),Fn(1)))).setLayout({name:"volumeAttenuation",type:"vec3",inputs:[{name:"transmissionDistance",type:"float"},{name:"attenuationColor",type:"vec3"},{name:"attenuationDistance",type:"float"}]}),Sp=bn((([e,t,s,r,n,i,o,a,u,l,d,c,h,p,g])=>{let m,f;if(g){m=Vn().toVar(),f=Fn().toVar();const n=d.sub(1).mul(g.mul(.025)),i=Fn(d.sub(n),d,d.add(n));cc({start:0,end:3},(({i:n})=>{const d=i.element(n),g=bp(e,t,c,d,a),y=o.add(g),b=l.mul(u.mul(Vn(y,1))),x=wn(b.xy.div(b.w)).toVar();x.addAssign(1),x.divAssign(2),x.assign(wn(x.x,x.y.oneMinus()));const T=Np(x,s,d);m.element(n).assign(T.element(n)),m.a.addAssign(T.a),f.element(n).assign(r.element(n).mul(vp(Lo(g),h,p).element(n)))})),m.a.divAssign(3)}else{const n=bp(e,t,c,d,a),i=o.add(n),g=l.mul(u.mul(Vn(i,1))),y=wn(g.xy.div(g.w)).toVar();y.addAssign(1),y.divAssign(2),y.assign(wn(y.x,y.y.oneMinus())),m=Np(y,s,d),f=r.mul(vp(Lo(n),h,p))}const y=f.rgb.mul(m.rgb),b=e.dot(t).clamp(),x=Fn(Zh({dotNV:b,specularColor:n,specularF90:i,roughness:s})),T=f.r.add(f.g,f.b).div(3);return Vn(x.oneMinus().mul(y),m.a.oneMinus().mul(T).oneMinus())})),Ap=zn(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),Rp=(e,t)=>e.sub(t).div(e.add(t)).pow2(),Cp=bn((({outsideIOR:e,eta2:t,cosTheta1:s,thinFilmThickness:r,baseF0:n})=>{const i=da(e,t,ga(0,.03,r)),o=e.div(i).pow2().mul(s.pow2().oneMinus()).oneMinus();Nn(o.lessThan(0),(()=>Fn(1)));const a=o.sqrt(),u=Rp(i,e),l=Ph({f0:u,f90:1,dotVH:s}),d=l.oneMinus(),c=i.lessThan(e).select(Math.PI,0),h=An(Math.PI).sub(c),p=(e=>{const t=e.sqrt();return Fn(1).add(t).div(Fn(1).sub(t))})(n.clamp(0,.9999)),g=Rp(p,i.toVec3()),m=Ph({f0:g,f90:1,dotVH:a}),f=Fn(p.x.lessThan(i).select(Math.PI,0),p.y.lessThan(i).select(Math.PI,0),p.z.lessThan(i).select(Math.PI,0)),y=i.mul(r,a,2),b=Fn(h).add(f),x=l.mul(m).clamp(1e-5,.9999),T=x.sqrt(),_=d.pow2().mul(m).div(Fn(1).sub(x)),N=l.add(_).toVar(),v=_.sub(d).toVar();return cc({start:1,end:2,condition:"<=",name:"m"},(({m:e})=>{v.mulAssign(T);const t=((e,t)=>{const s=e.mul(2*Math.PI*1e-9),r=Fn(54856e-17,44201e-17,52481e-17),n=Fn(1681e3,1795300,2208400),i=Fn(43278e5,93046e5,66121e5),o=An(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(s.mul(2239900).add(t.x).cos()).mul(s.pow2().mul(-45282e5).exp());let a=r.mul(i.mul(2*Math.PI).sqrt()).mul(n.mul(s).add(t).cos()).mul(s.pow2().negate().mul(i).exp());return a=Fn(a.x.add(o),a.y,a.z).div(1.0685e-7),Ap.mul(a)})(An(e).mul(y),An(e).mul(b)).mul(2);N.addAssign(v.mul(t))})),N.max(Fn(0))})).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),Ep=bn((({normal:e,viewDir:t,roughness:s})=>{const r=e.dot(t).saturate(),n=s.pow2(),i=Ta(s.lessThan(.25),An(-339.2).mul(n).add(An(161.4).mul(s)).sub(25.9),An(-8.48).mul(n).add(An(14.3).mul(s)).sub(9.95)),o=Ta(s.lessThan(.25),An(44).mul(n).sub(An(23.7).mul(s)).add(3.26),An(1.97).mul(n).sub(An(3.27).mul(s)).add(.72));return Ta(s.lessThan(.25),0,An(.1).mul(s).sub(.025)).add(i.mul(r).add(o).exp()).mul(1/Math.PI).saturate()})),wp=Fn(.04),Mp=An(1);class Bp extends Mh{constructor(e=!1,t=!1,s=!1,r=!1,n=!1,i=!1){super(),this.clearcoat=e,this.sheen=t,this.iridescence=s,this.anisotropy=r,this.transmission=n,this.dispersion=i,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(e){if(!0===this.clearcoat&&(this.clearcoatRadiance=Fn().toVar("clearcoatRadiance"),this.clearcoatSpecularDirect=Fn().toVar("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=Fn().toVar("clearcoatSpecularIndirect")),!0===this.sheen&&(this.sheenSpecularDirect=Fn().toVar("sheenSpecularDirect"),this.sheenSpecularIndirect=Fn().toVar("sheenSpecularIndirect")),!0===this.iridescence){const e=cl.dot(sl).clamp();this.iridescenceFresnel=Cp({outsideIOR:An(1),eta2:mi,cosTheta1:e,thinFilmThickness:fi,baseF0:_i}),this.iridescenceF0=Jh({f:this.iridescenceFresnel,f90:1,dotVH:e})}if(!0===this.transmission){const t=Ju,s=Uu.sub(Ju).normalize(),r=hl;e.backdrop=Sp(r,s,ui,oi,_i,Ni,t,ku,wu,Cu,Ei,Mi,Ui,Bi,this.dispersion?Fi:null),e.backdropAlpha=wi,oi.a.mulAssign(da(1,e.backdrop.a,wi))}}computeMultiscattering(e,t,s){const r=cl.dot(sl).clamp(),n=Qh({roughness:ui,dotNV:r}),i=(this.iridescenceF0?gi.mix(_i,this.iridescenceF0):_i).mul(n.x).add(s.mul(n.y)),o=n.x.add(n.y).oneMinus(),a=_i.add(_i.oneMinus().mul(.047619)),u=i.mul(a).div(o.mul(a).oneMinus());e.addAssign(i),t.addAssign(u.mul(o))}direct({lightDirection:e,lightColor:t,reflectedLight:s}){const r=cl.dot(e).clamp().mul(t);if(!0===this.sheen&&this.sheenSpecularDirect.addAssign(r.mul(sp({lightDirection:e}))),!0===this.clearcoat){const s=pl.dot(e).clamp().mul(t);this.clearcoatSpecularDirect.addAssign(s.mul(Yh({lightDirection:e,f0:wp,f90:Mp,roughness:ci,normalView:pl})))}s.directDiffuse.addAssign(r.mul(Ih({diffuseColor:oi.rgb}))),s.directSpecular.addAssign(r.mul(Yh({lightDirection:e,f0:_i,f90:1,roughness:ui,iridescence:this.iridescence,f:this.iridescenceFresnel,USE_IRIDESCENCE:this.iridescence,USE_ANISOTROPY:this.anisotropy})))}directRectArea({lightColor:e,lightPosition:t,halfWidth:s,halfHeight:r,reflectedLight:n,ltc_1:i,ltc_2:o}){const a=t.add(s).sub(r),u=t.sub(s).sub(r),l=t.sub(s).add(r),d=t.add(s).add(r),c=cl,h=sl,p=tl.toVar(),g=rp({N:c,V:h,roughness:ui}),m=i.uv(g).toVar(),f=o.uv(g).toVar(),y=zn(Fn(m.x,0,m.y),Fn(0,1,0),Fn(m.z,0,m.w)).toVar(),b=_i.mul(f.x).add(_i.oneMinus().mul(f.y)).toVar();n.directSpecular.addAssign(e.mul(b).mul(op({N:c,V:h,P:p,mInv:y,p0:a,p1:u,p2:l,p3:d}))),n.directDiffuse.addAssign(e.mul(oi).mul(op({N:c,V:h,P:p,mInv:zn(1,0,0,0,1,0,0,0,1),p0:a,p1:u,p2:l,p3:d})))}indirect(e,t,s){this.indirectDiffuse(e,t,s),this.indirectSpecular(e,t,s),this.ambientOcclusion(e,t,s)}indirectDiffuse({irradiance:e,reflectedLight:t}){t.indirectDiffuse.addAssign(e.mul(Ih({diffuseColor:oi})))}indirectSpecular({radiance:e,iblIrradiance:t,reflectedLight:s}){if(!0===this.sheen&&this.sheenSpecularIndirect.addAssign(t.mul(hi,Ep({normal:cl,viewDir:sl,roughness:pi}))),!0===this.clearcoat){const e=pl.dot(sl).clamp(),t=Zh({dotNV:e,specularColor:wp,specularF90:Mp,roughness:ci});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(t))}const r=Fn().toVar("singleScattering"),n=Fn().toVar("multiScattering"),i=t.mul(1/Math.PI);this.computeMultiscattering(r,n,Ni);const o=r.add(n),a=oi.mul(o.r.max(o.g).max(o.b).oneMinus());s.indirectSpecular.addAssign(e.mul(r)),s.indirectSpecular.addAssign(n.mul(i)),s.indirectDiffuse.addAssign(a.mul(i))}ambientOcclusion({ambientOcclusion:e,reflectedLight:t}){const s=cl.dot(sl).clamp().add(e),r=ui.mul(-16).oneMinus().negate().exp2(),n=e.sub(s.pow(r).oneMinus()).clamp();!0===this.clearcoat&&this.clearcoatSpecularIndirect.mulAssign(e),!0===this.sheen&&this.sheenSpecularIndirect.mulAssign(e),t.indirectDiffuse.mulAssign(e),t.indirectSpecular.mulAssign(n)}finish(e){const{outgoingLight:t}=e;if(!0===this.clearcoat){const e=pl.dot(sl).clamp(),s=Ph({dotVH:e,f0:wp,f90:Mp}),r=t.mul(di.mul(s).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul(di));t.assign(r)}if(!0===this.sheen){const e=hi.r.max(hi.g).max(hi.b).mul(.157).oneMinus(),s=t.mul(e).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);t.assign(s)}}}const Up=An(1),Fp=An(-2),Pp=An(.8),Ip=An(-1),Lp=An(.4),Vp=An(2),Dp=An(.305),Op=An(3),Gp=An(.21),kp=An(4),zp=An(4),$p=An(16),Hp=bn((([e])=>{const t=Fn(Po(e)).toVar(),s=An(-1).toVar();return Nn(t.x.greaterThan(t.z),(()=>{Nn(t.x.greaterThan(t.y),(()=>{s.assign(Ta(e.x.greaterThan(0),0,3))})).Else((()=>{s.assign(Ta(e.y.greaterThan(0),1,4))}))})).Else((()=>{Nn(t.z.greaterThan(t.y),(()=>{s.assign(Ta(e.z.greaterThan(0),2,5))})).Else((()=>{s.assign(Ta(e.y.greaterThan(0),1,4))}))})),s})).setLayout({name:"getFace",type:"float",inputs:[{name:"direction",type:"vec3"}]}),Wp=bn((([e,t])=>{const s=wn().toVar();return Nn(t.equal(0),(()=>{s.assign(wn(e.z,e.y).div(Po(e.x)))})).ElseIf(t.equal(1),(()=>{s.assign(wn(e.x.negate(),e.z.negate()).div(Po(e.y)))})).ElseIf(t.equal(2),(()=>{s.assign(wn(e.x.negate(),e.y).div(Po(e.z)))})).ElseIf(t.equal(3),(()=>{s.assign(wn(e.z.negate(),e.y).div(Po(e.x)))})).ElseIf(t.equal(4),(()=>{s.assign(wn(e.x.negate(),e.z).div(Po(e.y)))})).Else((()=>{s.assign(wn(e.x,e.y).div(Po(e.z)))})),ki(.5,s.add(1))})).setLayout({name:"getUV",type:"vec2",inputs:[{name:"direction",type:"vec3"},{name:"face",type:"float"}]}),jp=bn((([e])=>{const t=An(0).toVar();return Nn(e.greaterThanEqual(Pp),(()=>{t.assign(Up.sub(e).mul(Ip.sub(Fp)).div(Up.sub(Pp)).add(Fp))})).ElseIf(e.greaterThanEqual(Lp),(()=>{t.assign(Pp.sub(e).mul(Vp.sub(Ip)).div(Pp.sub(Lp)).add(Ip))})).ElseIf(e.greaterThanEqual(Dp),(()=>{t.assign(Lp.sub(e).mul(Op.sub(Vp)).div(Lp.sub(Dp)).add(Vp))})).ElseIf(e.greaterThanEqual(Gp),(()=>{t.assign(Dp.sub(e).mul(kp.sub(Op)).div(Dp.sub(Gp)).add(Op))})).Else((()=>{t.assign(An(-2).mul(_o(ki(1.16,e))))})),t})).setLayout({name:"roughnessToMip",type:"float",inputs:[{name:"roughness",type:"float"}]}),qp=bn((([e,t])=>{const s=e.toVar();s.assign(ki(2,s).sub(1));const r=Fn(s,1).toVar();return Nn(t.equal(0),(()=>{r.assign(r.zyx)})).ElseIf(t.equal(1),(()=>{r.assign(r.xzy),r.xz.mulAssign(-1)})).ElseIf(t.equal(2),(()=>{r.x.mulAssign(-1)})).ElseIf(t.equal(3),(()=>{r.assign(r.zyx),r.xz.mulAssign(-1)})).ElseIf(t.equal(4),(()=>{r.assign(r.xzy),r.xy.mulAssign(-1)})).ElseIf(t.equal(5),(()=>{r.z.mulAssign(-1)})),r})).setLayout({name:"getDirection",type:"vec3",inputs:[{name:"uv",type:"vec2"},{name:"face",type:"float"}]}),Kp=bn((([e,t,s,r,n,i])=>{const o=An(s),a=Fn(t),u=ca(jp(o),Fp,i),l=Co(u),d=So(u),c=Fn(Xp(e,a,d,r,n,i)).toVar();return Nn(l.notEqual(0),(()=>{const t=Fn(Xp(e,a,d.add(1),r,n,i)).toVar();c.assign(da(c,t,l))})),c})),Xp=bn((([e,t,s,r,n,i])=>{const o=An(s).toVar(),a=Fn(t),u=An(Hp(a)).toVar(),l=An(Xo(zp.sub(o),0)).toVar();o.assign(Xo(o,zp));const d=An(xo(o)).toVar(),c=wn(Wp(a,u).mul(d.sub(2)).add(1)).toVar();return Nn(u.greaterThan(2),(()=>{c.y.addAssign(d),u.subAssign(3)})),c.x.addAssign(u.mul(d)),c.x.addAssign(l.mul(ki(3,$p))),c.y.addAssign(ki(4,xo(i).sub(d))),c.x.mulAssign(r),c.y.mulAssign(n),e.uv(c).grad(wn(),wn())})),Yp=bn((({envMap:e,mipInt:t,outputDirection:s,theta:r,axis:n,CUBEUV_TEXEL_WIDTH:i,CUBEUV_TEXEL_HEIGHT:o,CUBEUV_MAX_MIP:a})=>{const u=wo(r),l=s.mul(u).add(n.cross(s).mul(Eo(r))).add(n.mul(n.dot(s).mul(u.oneMinus())));return Xp(e,l,t,i,o,a)})),Qp=bn((({n:e,latitudinal:t,poleAxis:s,outputDirection:r,weights:n,samples:i,dTheta:o,mipInt:a,envMap:u,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:c})=>{const h=Fn(Ta(t,s,sa(s,r))).toVar();Nn(po(h.equals(Fn(0))),(()=>{h.assign(Fn(r.z,0,r.x.negate()))})),h.assign(Ro(h));const p=Fn().toVar();return p.addAssign(n.element(Rn(0)).mul(Yp({theta:0,axis:h,outputDirection:r,mipInt:a,envMap:u,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:c}))),cc({start:Rn(1),end:e},(({i:e})=>{Nn(e.greaterThanEqual(i),(()=>{pc()}));const t=An(o.mul(An(e))).toVar();p.addAssign(n.element(e).mul(Yp({theta:t.mul(-1),axis:h,outputDirection:r,mipInt:a,envMap:u,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:c}))),p.addAssign(n.element(e).mul(Yp({theta:t,axis:h,outputDirection:r,mipInt:a,envMap:u,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:c})))})),Vn(p,1)}));let Zp=null;const Jp=new WeakMap;function eg(e){let t=Jp.get(e);if((void 0!==t?t.pmremVersion:-1)!==e.pmremVersion){const s=e.image;if(e.isCubeTexture){if(!function(e){if(null==e)return!1;let t=0;const s=6;for(let r=0;r<s;r++)void 0!==e[r]&&t++;return t===s}(s))return null;t=Zp.fromCubemap(e,t)}else{if(!function(e){return null!=e&&e.height>0}(s))return null;t=Zp.fromEquirectangular(e,t)}t.pmremVersion=e.pmremVersion,Jp.set(e,t)}return t.texture}class tg extends wr{static get type(){return"PMREMNode"}constructor(e,t=null,s=null){super("vec3"),this._value=e,this._pmrem=null,this.uvNode=t,this.levelNode=s,this._generator=null;const r=new ee;r.isRenderTargetTexture=!0,this._texture=Nu(r),this._width=si(0),this._height=si(0),this._maxMip=si(0),this.updateBeforeType=xr.RENDER}set value(e){this._value=e,this._pmrem=null}get value(){return this._value}updateFromTexture(e){const t=function(e){const t=Math.log2(e)-2,s=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:s,maxMip:t}}(e.image.height);this._texture.value=e,this._width.value=t.texelWidth,this._height.value=t.texelHeight,this._maxMip.value=t.maxMip}updateBefore(){let e=this._pmrem;const t=e?e.pmremVersion:-1,s=this._value;t!==s.pmremVersion&&(e=!0===s.isPMREMTexture?s:eg(s),null!==e&&(this._pmrem=e,this.updateFromTexture(e)))}setup(e){null===Zp&&(Zp=e.createPMREMGenerator()),this.updateBefore(e);let t=this.uvNode;null===t&&e.context.getUV&&(t=e.context.getUV(this));const s=this.value;e.renderer.coordinateSystem===b&&!0!==s.isPMREMTexture&&!0===s.isRenderTargetTexture&&(t=Fn(t.x.negate(),t.yz));let r=this.levelNode;return null===r&&e.context.getTextureLevel&&(r=e.context.getTextureLevel(this)),Kp(this._texture,t,r,this._width,this._height,this._maxMip)}}const sg=fn(tg),rg=new WeakMap;class ng extends Tc{static get type(){return"EnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){const{material:t}=e;let s=this.envNode;if(s.isTextureNode||s.isMaterialReferenceNode){const e=s.isTextureNode?s.value:t[s.property];let r=rg.get(e);void 0===r&&(r=sg(e),rg.set(e,r)),s=r}const r=t.envMap?Bl("envMapIntensity","float",e.material):Bl("environmentIntensity","float",e.scene),n=!0===t.useAnisotropy||t.anisotropy>0?Ql:cl,i=s.context(ig(ui,n)).mul(r),o=s.context(og(hl)).mul(Math.PI).mul(r),a=tu(i),u=tu(o);e.context.radiance.addAssign(a),e.context.iblIrradiance.addAssign(u);const l=e.context.lightingModel.clearcoatRadiance;if(l){const e=s.context(ig(ci,pl)).mul(r),t=tu(e);l.addAssign(t)}}}const ig=(e,t)=>{let s=null;return{getUV:()=>(null===s&&(s=sl.negate().reflect(t),s=e.mul(e).mix(s,t).normalize(),s=s.transformDirection(wu)),s),getTextureLevel:()=>e}},og=e=>({getUV:()=>e,getTextureLevel:()=>An(1)}),ag=new te;class ug extends ah{static get type(){return"MeshStandardNodeMaterial"}constructor(e){super(),this.isMeshStandardNodeMaterial=!0,this.lights=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues(ag),this.setValues(e)}setupEnvironment(e){let t=super.setupEnvironment(e);return null===t&&e.environmentNode&&(t=e.environmentNode),t?new ng(t):null}setupLightingModel(){return new Bp}setupSpecular(){const e=da(Fn(.04),oi.rgb,li);_i.assign(e),Ni.assign(1)}setupVariants(){const e=this.metalnessNode?An(this.metalnessNode):bd;li.assign(e);let t=this.roughnessNode?An(this.roughnessNode):yd;t=Hh({roughness:t}),ui.assign(t),this.setupSpecular(),oi.assign(Vn(oi.rgb.mul(e.oneMinus()),oi.a))}copy(e){return this.emissiveNode=e.emissiveNode,this.metalnessNode=e.metalnessNode,this.roughnessNode=e.roughnessNode,super.copy(e)}}const lg=new se;class dg extends ug{static get type(){return"MeshPhysicalNodeMaterial"}constructor(e){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.iorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.dispersionNode=null,this.anisotropyNode=null,this.setDefaultValues(lg),this.setValues(e)}get useClearcoat(){return this.clearcoat>0||null!==this.clearcoatNode}get useIridescence(){return this.iridescence>0||null!==this.iridescenceNode}get useSheen(){return this.sheen>0||null!==this.sheenNode}get useAnisotropy(){return this.anisotropy>0||null!==this.anisotropyNode}get useTransmission(){return this.transmission>0||null!==this.transmissionNode}get useDispersion(){return this.dispersion>0||null!==this.dispersionNode}setupSpecular(){const e=this.iorNode?An(this.iorNode):Ud;Ei.assign(e),_i.assign(da(Ko(na(Ei.sub(1).div(Ei.add(1))).mul(gd),Fn(1)).mul(pd),oi.rgb,li)),Ni.assign(da(pd,1,li))}setupLightingModel(){return new Bp(this.useClearcoat,this.useSheen,this.useIridescence,this.useAnisotropy,this.useTransmission,this.useDispersion)}setupVariants(e){if(super.setupVariants(e),this.useClearcoat){const e=this.clearcoatNode?An(this.clearcoatNode):Td,t=this.clearcoatRoughnessNode?An(this.clearcoatRoughnessNode):_d;di.assign(e),ci.assign(Hh({roughness:t}))}if(this.useSheen){const e=this.sheenNode?Fn(this.sheenNode):Sd,t=this.sheenRoughnessNode?An(this.sheenRoughnessNode):Ad;hi.assign(e),pi.assign(t)}if(this.useIridescence){const e=this.iridescenceNode?An(this.iridescenceNode):Cd,t=this.iridescenceIORNode?An(this.iridescenceIORNode):Ed,s=this.iridescenceThicknessNode?An(this.iridescenceThicknessNode):wd;gi.assign(e),mi.assign(t),fi.assign(s)}if(this.useAnisotropy){const e=(this.anisotropyNode?wn(this.anisotropyNode):Rd).toVar();bi.assign(e.length()),Nn(bi.equal(0),(()=>{e.assign(wn(1,0))})).Else((()=>{e.divAssign(wn(bi)),bi.assign(bi.saturate())})),yi.assign(bi.pow2().mix(ui.pow2(),1)),xi.assign(Kl[0].mul(e.x).add(Kl[1].mul(e.y))),Ti.assign(Kl[1].mul(e.x).sub(Kl[0].mul(e.y)))}if(this.useTransmission){const e=this.transmissionNode?An(this.transmissionNode):Md,t=this.thicknessNode?An(this.thicknessNode):Bd,s=this.attenuationDistanceNode?An(this.attenuationDistanceNode):Fd,r=this.attenuationColorNode?Fn(this.attenuationColorNode):Pd;if(wi.assign(e),Mi.assign(t),Bi.assign(s),Ui.assign(r),this.useDispersion){const e=this.dispersionNode?An(this.dispersionNode):kd;Fi.assign(e)}}}setupClearcoatNormal(){return this.clearcoatNormalNode?Fn(this.clearcoatNormalNode):Nd}setup(e){e.context.setupClearcoatNormal=()=>this.setupClearcoatNormal(e),super.setup(e)}copy(e){return this.clearcoatNode=e.clearcoatNode,this.clearcoatRoughnessNode=e.clearcoatRoughnessNode,this.clearcoatNormalNode=e.clearcoatNormalNode,this.sheenNode=e.sheenNode,this.sheenRoughnessNode=e.sheenRoughnessNode,this.iridescenceNode=e.iridescenceNode,this.iridescenceIORNode=e.iridescenceIORNode,this.iridescenceThicknessNode=e.iridescenceThicknessNode,this.specularIntensityNode=e.specularIntensityNode,this.specularColorNode=e.specularColorNode,this.transmissionNode=e.transmissionNode,this.thicknessNode=e.thicknessNode,this.attenuationDistanceNode=e.attenuationDistanceNode,this.attenuationColorNode=e.attenuationColorNode,this.dispersionNode=e.dispersionNode,this.anisotropyNode=e.anisotropyNode,super.copy(e)}}class cg extends Bp{constructor(e,t,s,r){super(e,t,s),this.useSSS=r}direct({lightDirection:e,lightColor:t,reflectedLight:s},r,n){if(!0===this.useSSS){const r=n.material,{thicknessColorNode:i,thicknessDistortionNode:o,thicknessAmbientNode:a,thicknessAttenuationNode:u,thicknessPowerNode:l,thicknessScaleNode:d}=r,c=e.add(cl.mul(o)).normalize(),h=An(sl.dot(c.negate()).saturate().pow(l).mul(d)),p=Fn(h.add(a).mul(i));s.directDiffuse.addAssign(p.mul(u.mul(t)))}super.direct({lightDirection:e,lightColor:t,reflectedLight:s},r,n)}}class hg extends dg{static get type(){return"MeshSSSNodeMaterial"}constructor(e){super(e),this.thicknessColorNode=null,this.thicknessDistortionNode=An(.1),this.thicknessAmbientNode=An(0),this.thicknessAttenuationNode=An(.1),this.thicknessPowerNode=An(2),this.thicknessScaleNode=An(10)}get useSSS(){return null!==this.thicknessColorNode}setupLightingModel(){return new cg(this.useClearcoat,this.useSheen,this.useIridescence,this.useSSS)}copy(e){return this.thicknessColorNode=e.thicknessColorNode,this.thicknessDistortionNode=e.thicknessDistortionNode,this.thicknessAmbientNode=e.thicknessAmbientNode,this.thicknessAttenuationNode=e.thicknessAttenuationNode,this.thicknessPowerNode=e.thicknessPowerNode,this.thicknessScaleNode=e.thicknessScaleNode,super.copy(e)}}const pg=bn((({normal:e,lightDirection:t,builder:s})=>{const r=e.dot(t),n=wn(r.mul(.5).add(.5),0);if(s.material.gradientMap){const e=Pl("gradientMap","texture").context({getUV:()=>n});return Fn(e.r)}{const e=n.fwidth().mul(.5);return da(Fn(.7),Fn(1),ga(An(.7).sub(e.x),An(.7).add(e.x),n.x))}}));class gg extends Mh{direct({lightDirection:e,lightColor:t,reflectedLight:s},r,n){const i=pg({normal:ol,lightDirection:e,builder:n}).mul(t);s.directDiffuse.addAssign(i.mul(Ih({diffuseColor:oi.rgb})))}indirect({ambientOcclusion:e,irradiance:t,reflectedLight:s}){s.indirectDiffuse.addAssign(t.mul(Ih({diffuseColor:oi}))),s.indirectDiffuse.mulAssign(e)}}const mg=new re;class fg extends ah{static get type(){return"MeshToonNodeMaterial"}constructor(e){super(),this.isMeshToonNodeMaterial=!0,this.lights=!0,this.setDefaultValues(mg),this.setValues(e)}setupLightingModel(){return new gg}}class yg extends wr{static get type(){return"MatcapUVNode"}constructor(){super("vec2")}setup(){const e=Fn(sl.z,0,sl.x.negate()).normalize(),t=sl.cross(e);return wn(e.dot(cl),t.dot(cl)).mul(.495).add(.5)}}const bg=yn(yg),xg=new ne;class Tg extends ah{static get type(){return"MeshMatcapNodeMaterial"}constructor(e){super(),this.lights=!1,this.isMeshMatcapNodeMaterial=!0,this.setDefaultValues(xg),this.setValues(e)}setupVariants(e){const t=bg;let s;s=e.material.matcap?Pl("matcap","texture").context({getUV:()=>t}):Fn(da(.2,.8,t.y)),oi.rgb.mulAssign(s.rgb)}}const _g=new P;class Ng extends ah{static get type(){return"PointsNodeMaterial"}constructor(e){super(),this.isPointsNodeMaterial=!0,this.lights=!1,this.transparent=!0,this.sizeNode=null,this.setDefaultValues(_g),this.setValues(e)}copy(e){return this.sizeNode=e.sizeNode,super.copy(e)}}class vg extends wr{static get type(){return"RotateNode"}constructor(e,t){super(),this.positionNode=e,this.rotationNode=t}getNodeType(e){return this.positionNode.getNodeType(e)}setup(e){const{rotationNode:t,positionNode:s}=this;if("vec2"===this.getNodeType(e)){const e=t.cos(),r=t.sin();return kn(e,r,r.negate(),e).mul(s)}{const e=t,r=$n(Vn(1,0,0,0),Vn(0,wo(e.x),Eo(e.x).negate(),0),Vn(0,Eo(e.x),wo(e.x),0),Vn(0,0,0,1)),n=$n(Vn(wo(e.y),0,Eo(e.y),0),Vn(0,1,0,0),Vn(Eo(e.y).negate(),0,wo(e.y),0),Vn(0,0,0,1)),i=$n(Vn(wo(e.z),Eo(e.z).negate(),0,0),Vn(Eo(e.z),wo(e.z),0,0),Vn(0,0,1,0),Vn(0,0,0,1));return r.mul(n).mul(i).mul(Vn(s,1)).xyz}}}const Sg=fn(vg),Ag=new ie;class Rg extends ah{static get type(){return"SpriteNodeMaterial"}constructor(e){super(),this.isSpriteNodeMaterial=!0,this.lights=!1,this._useSizeAttenuation=!0,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.setDefaultValues(Ag),this.setValues(e)}setupPosition({object:e,camera:t,context:s}){const r=this.sizeAttenuation,{positionNode:n,rotationNode:i,scaleNode:o}=this,a=Qu;let u=qu.mul(Fn(n||0)),l=wn(ku[0].xyz.length(),ku[1].xyz.length());if(null!==o&&(l=l.mul(o)),!r)if(t.isPerspectiveCamera)l=l.mul(u.z.negate());else{const e=An(2).div(Cu.element(1).element(1));l=l.mul(e.mul(2))}let d=a.xy;if(e.center&&!0===e.center.isVector2){const e=((e,t,s)=>pn(new ka(e,t,s)))("center","vec2");d=d.sub(e.sub(.5))}d=d.mul(l);const c=An(i||vd),h=Sg(d,c);u=Vn(u.xy.add(h),u.zw);const p=Cu.mul(u);return s.vertex=a,p}copy(e){return this.positionNode=e.positionNode,this.rotationNode=e.rotationNode,this.scaleNode=e.scaleNode,super.copy(e)}get sizeAttenuation(){return this._useSizeAttenuation}set sizeAttenuation(e){this._useSizeAttenuation!==e&&(this._useSizeAttenuation=e,this.needsUpdate=!0)}}class Cg extends Mh{constructor(){super(),this.shadowNode=An(1).toVar("shadowMask")}direct({shadowMask:e}){this.shadowNode.mulAssign(e)}finish(e){oi.a.mulAssign(this.shadowNode.oneMinus()),e.outgoingLight.rgb.assign(oi.rgb)}}const Eg=new oe;class wg extends ah{static get type(){return"ShadowNodeMaterial"}constructor(e){super(),this.isShadowNodeMaterial=!0,this.lights=!0,this.setDefaultValues(Eg),this.setValues(e)}setupLightingModel(){return new Cg}}const Mg=bn((({texture:e,uv:t})=>{const s=1e-4,r=Fn().toVar();return Nn(t.x.lessThan(s),(()=>{r.assign(Fn(1,0,0))})).ElseIf(t.y.lessThan(s),(()=>{r.assign(Fn(0,1,0))})).ElseIf(t.z.lessThan(s),(()=>{r.assign(Fn(0,0,1))})).ElseIf(t.x.greaterThan(.9999),(()=>{r.assign(Fn(-1,0,0))})).ElseIf(t.y.greaterThan(.9999),(()=>{r.assign(Fn(0,-1,0))})).ElseIf(t.z.greaterThan(.9999),(()=>{r.assign(Fn(0,0,-1))})).Else((()=>{const s=.01,n=e.uv(t.add(Fn(-.01,0,0))).r.sub(e.uv(t.add(Fn(s,0,0))).r),i=e.uv(t.add(Fn(0,-.01,0))).r.sub(e.uv(t.add(Fn(0,s,0))).r),o=e.uv(t.add(Fn(0,0,-.01))).r.sub(e.uv(t.add(Fn(0,0,s))).r);r.assign(Fn(n,i,o))})),r.normalize()}));class Bg extends _u{static get type(){return"Texture3DNode"}constructor(e,t=null,s=null){super(e,t,s),this.isTexture3DNode=!0}getInputType(){return"texture3D"}getDefaultUV(){return Fn(.5,.5,.5)}setUpdateMatrix(){}setupUV(e,t){return t}generateUV(e,t){return t.build(e,"vec3")}normal(e){return Mg({texture:this,uv:e})}}const Ug=fn(Bg);class Fg extends ah{static get type(){return"VolumeNodeMaterial"}constructor(e={}){super(),this.lights=!1,this.isVolumeNodeMaterial=!0,this.testNode=null,this.setValues(e)}setup(e){const t=Ug(this.map,null,0),s=bn((({orig:e,dir:t})=>{const s=Fn(-.5),r=Fn(.5),n=t.reciprocal(),i=s.sub(e).mul(n),o=r.sub(e).mul(n),a=Ko(i,o),u=Xo(i,o),l=Xo(a.x,Xo(a.y,a.z)),d=Ko(u.x,Ko(u.y,u.z));return wn(l,d)}));this.fragmentNode=bn((()=>{const e=wa(Fn(ju.mul(Vn(Uu,1)))),r=wa(Yu.sub(e)).normalize(),n=wn(s({orig:e,dir:r})).toVar();n.x.greaterThan(n.y).discard(),n.assign(wn(Xo(n.x,0),n.y));const i=Fn(e.add(n.x.mul(r))).toVar(),o=Fn(r.abs().reciprocal()).toVar(),a=An(Ko(o.x,Ko(o.y,o.z))).toVar("delta");a.divAssign(Pl("steps","float"));const u=Vn(Pl("base","color"),0).toVar();return cc({type:"float",start:n.x,end:n.y,update:"+= delta"},(()=>{const e=ni("float","d").assign(t.uv(i.add(.5)).r);null!==this.testNode?this.testNode({map:t,mapValue:e,probe:i,finalColor:u}).append():(u.a.assign(1),pc()),i.addAssign(r.mul(a))})),u.a.equal(0).discard(),Vn(u)}))(),super.setup(e)}}class Pg{constructor(e,t){this.nodes=e,this.info=t,this._context=self,this._animationLoop=null,this._requestId=null}start(){const e=(t,s)=>{this._requestId=this._context.requestAnimationFrame(e),!0===this.info.autoReset&&this.info.reset(),this.nodes.nodeFrame.update(),this.info.frame=this.nodes.nodeFrame.frameId,null!==this._animationLoop&&this._animationLoop(t,s)};e()}stop(){this._context.cancelAnimationFrame(this._requestId),this._requestId=null}setAnimationLoop(e){this._animationLoop=e}setContext(e){this._context=e}dispose(){this.stop()}}class Ig{constructor(){this.weakMap=new WeakMap}get(e){let t=this.weakMap;for(let s=0;s<e.length;s++)if(t=t.get(e[s]),void 0===t)return;return t.get(e[e.length-1])}set(e,t){let s=this.weakMap;for(let t=0;t<e.length;t++){const r=e[t];!1===s.has(r)&&s.set(r,new WeakMap),s=s.get(r)}return s.set(e[e.length-1],t)}delete(e){let t=this.weakMap;for(let s=0;s<e.length;s++)if(t=t.get(e[s]),void 0===t)return!1;return t.delete(e[e.length-1])}}let Lg=0;class Vg{constructor(e,t,s,r,n,i,o,a,u,l){this._nodes=e,this._geometries=t,this.id=Lg++,this.renderer=s,this.object=r,this.material=n,this.scene=i,this.camera=o,this.lightsNode=a,this.context=u,this.geometry=r.geometry,this.version=n.version,this.drawRange=null,this.attributes=null,this.pipeline=null,this.vertexBuffers=null,this.drawParams=null,this.bundle=null,this.clippingContext=l,this.clippingContextCacheKey=null!==l?l.cacheKey:"",this.initialNodesCacheKey=this.getDynamicCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this._monitor=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.material.addEventListener("dispose",this.onMaterialDispose)}updateClipping(e){this.clippingContext=e}get clippingNeedsUpdate(){return null!==this.clippingContext&&this.clippingContext.cacheKey!==this.clippingContextCacheKey&&(this.clippingContextCacheKey=this.clippingContext.cacheKey,!0)}get hardwareClippingPlanes(){return!0===this.material.hardwareClipping?this.clippingContext.unionClippingCount:0}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getMonitor(){return this._monitor||(this._monitor=this.getNodeBuilderState().monitor)}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getIndex(){return this._geometries.getIndex(this)}getIndirect(){return this._geometries.getIndirect(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}setGeometry(e){this.geometry=e,this.attributes=null}getAttributes(){if(null!==this.attributes)return this.attributes;const e=this.getNodeBuilderState().nodeAttributes,t=this.geometry,s=[],r=new Set;for(const n of e){const e=n.node&&n.node.attribute?n.node.attribute:t.getAttribute(n.name);if(void 0===e)continue;s.push(e);const i=e.isInterleavedBufferAttribute?e.data:e;r.add(i)}return this.attributes=s,this.vertexBuffers=Array.from(r.values()),s}getVertexBuffers(){return null===this.vertexBuffers&&this.getAttributes(),this.vertexBuffers}getDrawParameters(){const{object:e,material:t,geometry:s,group:r,drawRange:n}=this,i=this.drawParams||(this.drawParams={vertexCount:0,firstVertex:0,instanceCount:0,firstInstance:0}),o=this.getIndex(),a=null!==o,u=s.isInstancedBufferGeometry?s.instanceCount:e.count>1?e.count:1;if(0===u)return null;if(i.instanceCount=u,!0===e.isBatchedMesh)return i;let l=1;!0!==t.wireframe||e.isPoints||e.isLineSegments||e.isLine||e.isLineLoop||(l=2);let d=n.start*l,c=(n.start+n.count)*l;null!==r&&(d=Math.max(d,r.start*l),c=Math.min(c,(r.start+r.count)*l));const h=s.attributes.position;let p=1/0;a?p=o.count:null!=h&&(p=h.count),d=Math.max(d,0),c=Math.min(c,p);const g=c-d;return g<0||g===1/0?null:(i.vertexCount=g,i.firstVertex=d,i)}getGeometryCacheKey(){const{geometry:e}=this;let t="";for(const s of Object.keys(e.attributes).sort()){const r=e.attributes[s];t+=s+",",r.data&&(t+=r.data.stride+","),r.offset&&(t+=r.offset+","),r.itemSize&&(t+=r.itemSize+","),r.normalized&&(t+="n,")}return e.index&&(t+="index,"),t}getMaterialCacheKey(){const{object:e,material:t}=this;let s=t.customProgramCacheKey();for(const e of function(e){const t=Object.keys(e);let s=Object.getPrototypeOf(e);for(;s;){const e=Object.getOwnPropertyDescriptors(s);for(const s in e)if(void 0!==e[s]){const r=e[s];r&&"function"==typeof r.get&&t.push(s)}s=Object.getPrototypeOf(s)}return t}(t)){if(/^(is[A-Z]|_)|^(visible|version|uuid|name|opacity|userData)$/.test(e))continue;const r=t[e];let n;if(null!==r){const e=typeof r;"number"===e?n=0!==r?"1":"0":"object"===e?(n="{",r.isTexture&&(n+=r.mapping),n+="}"):n=String(r)}else n=String(r);s+=n+","}return s+=this.clippingContextCacheKey+",",e.geometry&&(s+=this.getGeometryCacheKey()),e.skeleton&&(s+=e.skeleton.bones.length+","),e.morphTargetInfluences&&(s+=e.morphTargetInfluences.length+","),e.isBatchedMesh&&(s+=e._matricesTexture.uuid+",",null!==e._colorsTexture&&(s+=e._colorsTexture.uuid+",")),e.count>1&&(s+=e.uuid+","),s+=e.receiveShadow+",",ur(s)}get needsGeometryUpdate(){return this.geometry.id!==this.object.geometry.id}get needsUpdate(){return this.initialNodesCacheKey!==this.getDynamicCacheKey()||this.clippingNeedsUpdate}getDynamicCacheKey(){let e=this._nodes.getCacheKey(this.scene,this.lightsNode);return this.object.receiveShadow&&(e+=1),e}getCacheKey(){return this.getMaterialCacheKey()+this.getDynamicCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.onDispose()}}const Dg=[];class Og{constructor(e,t,s,r,n,i){this.renderer=e,this.nodes=t,this.geometries=s,this.pipelines=r,this.bindings=n,this.info=i,this.chainMaps={}}get(e,t,s,r,n,i,o,a){const u=this.getChainMap(a);Dg[0]=e,Dg[1]=t,Dg[2]=i,Dg[3]=n;let l=u.get(Dg);return void 0===l?(l=this.createRenderObject(this.nodes,this.geometries,this.renderer,e,t,s,r,n,i,o,a),u.set(Dg,l)):(l.updateClipping(o),l.needsGeometryUpdate&&l.setGeometry(e.geometry),(l.version!==t.version||l.needsUpdate)&&(l.initialCacheKey!==l.getCacheKey()?(l.dispose(),l=this.get(e,t,s,r,n,i,o,a)):l.version=t.version)),l}getChainMap(e="default"){return this.chainMaps[e]||(this.chainMaps[e]=new Ig)}dispose(){this.chainMaps={}}createRenderObject(e,t,s,r,n,i,o,a,u,l,d){const c=this.getChainMap(d),h=new Vg(e,t,s,r,n,i,o,a,u,l);return h.onDispose=()=>{this.pipelines.delete(h),this.bindings.delete(h),this.nodes.delete(h),c.delete(h.getChainArray())},h}}class Gg{constructor(){this.data=new WeakMap}get(e){let t=this.data.get(e);return void 0===t&&(t={},this.data.set(e,t)),t}delete(e){let t;return this.data.has(e)&&(t=this.data.get(e),this.data.delete(e)),t}has(e){return this.data.has(e)}dispose(){this.data=new WeakMap}}const kg=1,zg=2,$g=3,Hg=4,Wg=16;class jg extends Gg{constructor(e){super(),this.backend=e}delete(e){const t=super.delete(e);return void 0!==t&&this.backend.destroyAttribute(e),t}update(e,t){const s=this.get(e);if(void 0===s.version)t===kg?this.backend.createAttribute(e):t===zg?this.backend.createIndexAttribute(e):t===$g?this.backend.createStorageAttribute(e):t===Hg&&this.backend.createIndirectStorageAttribute(e),s.version=this._getBufferAttribute(e).version;else{const t=this._getBufferAttribute(e);(s.version<t.version||t.usage===p)&&(this.backend.updateAttribute(e),s.version=t.version)}}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}function qg(e){return null!==e.index?e.index.version:e.attributes.position.version}function Kg(e){const t=[],s=e.index,r=e.attributes.position;if(null!==s){const e=s.array;for(let s=0,r=e.length;s<r;s+=3){const r=e[s+0],n=e[s+1],i=e[s+2];t.push(r,n,n,i,i,r)}}else{for(let e=0,s=r.array.length/3-1;e<s;e+=3){const s=e+0,r=e+1,n=e+2;t.push(s,r,r,n,n,s)}}const n=new(function(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}(t)?ae:ue)(t,1);return n.version=qg(e),n}class Xg extends Gg{constructor(e,t){super(),this.attributes=e,this.info=t,this.wireframes=new WeakMap,this.attributeCall=new WeakMap}has(e){const t=e.geometry;return super.has(t)&&!0===this.get(t).initialized}updateForRender(e){!1===this.has(e)&&this.initGeometry(e),this.updateAttributes(e)}initGeometry(e){const t=e.geometry;this.get(t).initialized=!0,this.info.memory.geometries++;const s=()=>{this.info.memory.geometries--;const r=t.index,n=e.getAttributes();null!==r&&this.attributes.delete(r);for(const e of n)this.attributes.delete(e);const i=this.wireframes.get(t);void 0!==i&&this.attributes.delete(i),t.removeEventListener("dispose",s)};t.addEventListener("dispose",s)}updateAttributes(e){const t=e.getAttributes();for(const e of t)e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute?this.updateAttribute(e,$g):this.updateAttribute(e,kg);const s=this.getIndex(e);null!==s&&this.updateAttribute(s,zg);const r=e.geometry.indirect;null!==r&&this.updateAttribute(r,Hg)}updateAttribute(e,t){const s=this.info.render.calls;e.isInterleavedBufferAttribute?void 0===this.attributeCall.get(e)?(this.attributes.update(e,t),this.attributeCall.set(e,s)):this.attributeCall.get(e.data)!==s&&(this.attributes.update(e,t),this.attributeCall.set(e.data,s),this.attributeCall.set(e,s)):this.attributeCall.get(e)!==s&&(this.attributes.update(e,t),this.attributeCall.set(e,s))}getIndirect(e){return e.geometry.indirect}getIndex(e){const{geometry:t,material:s}=e;let r=t.index;if(!0===s.wireframe){const e=this.wireframes;let s=e.get(t);void 0===s?(s=Kg(t),e.set(t,s)):s.version!==qg(t)&&(this.attributes.delete(s),s=Kg(t),e.set(t,s)),r=s}return r}}class Yg{constructor(){this.autoReset=!0,this.frame=0,this.calls=0,this.render={calls:0,frameCalls:0,drawCalls:0,triangles:0,points:0,lines:0,timestamp:0,previousFrameCalls:0,timestampCalls:0},this.compute={calls:0,frameCalls:0,timestamp:0,previousFrameCalls:0,timestampCalls:0},this.memory={geometries:0,textures:0}}update(e,t,s){this.render.drawCalls++,e.isMesh||e.isSprite?this.render.triangles+=s*(t/3):e.isPoints?this.render.points+=s*t:e.isLineSegments?this.render.lines+=s*(t/2):e.isLine?this.render.lines+=s*(t-1):console.error("THREE.WebGPUInfo: Unknown object type.")}updateTimestamp(e,t){0===this[e].timestampCalls&&(this[e].timestamp=0),this[e].timestamp+=t,this[e].timestampCalls++,this[e].timestampCalls>=this[e].previousFrameCalls&&(this[e].timestampCalls=0)}reset(){const e=this.render.frameCalls;this.render.previousFrameCalls=e;const t=this.compute.frameCalls;this.compute.previousFrameCalls=t,this.render.drawCalls=0,this.render.frameCalls=0,this.compute.frameCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.calls=0,this.render.calls=0,this.compute.calls=0,this.render.timestamp=0,this.compute.timestamp=0,this.memory.geometries=0,this.memory.textures=0}}class Qg{constructor(e){this.cacheKey=e,this.usedTimes=0}}class Zg extends Qg{constructor(e,t,s){super(e),this.vertexProgram=t,this.fragmentProgram=s}}class Jg extends Qg{constructor(e,t){super(e),this.computeProgram=t,this.isComputePipeline=!0}}let em=0;class tm{constructor(e,t,s=null,r=null){this.id=em++,this.code=e,this.stage=t,this.transforms=s,this.attributes=r,this.usedTimes=0}}class sm extends Gg{constructor(e,t){super(),this.backend=e,this.nodes=t,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(e,t){const{backend:s}=this,r=this.get(e);if(this._needsComputeUpdate(e)){const n=r.pipeline;n&&(n.usedTimes--,n.computeProgram.usedTimes--);const i=this.nodes.getForCompute(e);let o=this.programs.compute.get(i.computeShader);void 0===o&&(n&&0===n.computeProgram.usedTimes&&this._releaseProgram(n.computeProgram),o=new tm(i.computeShader,"compute",i.transforms,i.nodeAttributes),this.programs.compute.set(i.computeShader,o),s.createProgram(o));const a=this._getComputeCacheKey(e,o);let u=this.caches.get(a);void 0===u&&(n&&0===n.usedTimes&&this._releasePipeline(n),u=this._getComputePipeline(e,o,a,t)),u.usedTimes++,o.usedTimes++,r.version=e.version,r.pipeline=u}return r.pipeline}getForRender(e,t=null){const{backend:s}=this,r=this.get(e);if(this._needsRenderUpdate(e)){const n=r.pipeline;n&&(n.usedTimes--,n.vertexProgram.usedTimes--,n.fragmentProgram.usedTimes--);const i=e.getNodeBuilderState();let o=this.programs.vertex.get(i.vertexShader);void 0===o&&(n&&0===n.vertexProgram.usedTimes&&this._releaseProgram(n.vertexProgram),o=new tm(i.vertexShader,"vertex"),this.programs.vertex.set(i.vertexShader,o),s.createProgram(o));let a=this.programs.fragment.get(i.fragmentShader);void 0===a&&(n&&0===n.fragmentProgram.usedTimes&&this._releaseProgram(n.fragmentProgram),a=new tm(i.fragmentShader,"fragment"),this.programs.fragment.set(i.fragmentShader,a),s.createProgram(a));const u=this._getRenderCacheKey(e,o,a);let l=this.caches.get(u);void 0===l?(n&&0===n.usedTimes&&this._releasePipeline(n),l=this._getRenderPipeline(e,o,a,u,t)):e.pipeline=l,l.usedTimes++,o.usedTimes++,a.usedTimes++,r.pipeline=l}return r.pipeline}delete(e){const t=this.get(e).pipeline;return t&&(t.usedTimes--,0===t.usedTimes&&this._releasePipeline(t),t.isComputePipeline?(t.computeProgram.usedTimes--,0===t.computeProgram.usedTimes&&this._releaseProgram(t.computeProgram)):(t.fragmentProgram.usedTimes--,t.vertexProgram.usedTimes--,0===t.vertexProgram.usedTimes&&this._releaseProgram(t.vertexProgram),0===t.fragmentProgram.usedTimes&&this._releaseProgram(t.fragmentProgram))),super.delete(e)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(e){this.getForRender(e)}_getComputePipeline(e,t,s,r){s=s||this._getComputeCacheKey(e,t);let n=this.caches.get(s);return void 0===n&&(n=new Jg(s,t),this.caches.set(s,n),this.backend.createComputePipeline(n,r)),n}_getRenderPipeline(e,t,s,r,n){r=r||this._getRenderCacheKey(e,t,s);let i=this.caches.get(r);return void 0===i&&(i=new Zg(r,t,s),this.caches.set(r,i),e.pipeline=i,this.backend.createRenderPipeline(e,n)),i}_getComputeCacheKey(e,t){return e.id+","+t.id}_getRenderCacheKey(e,t,s){return t.id+","+s.id+","+this.backend.getRenderCacheKey(e)}_releasePipeline(e){this.caches.delete(e.cacheKey)}_releaseProgram(e){const t=e.code,s=e.stage;this.programs[s].delete(t)}_needsComputeUpdate(e){const t=this.get(e);return void 0===t.pipeline||t.version!==e.version}_needsRenderUpdate(e){return void 0===this.get(e).pipeline||this.backend.needsRenderUpdate(e)}}class rm extends Gg{constructor(e,t,s,r,n,i){super(),this.backend=e,this.textures=s,this.pipelines=n,this.attributes=r,this.nodes=t,this.info=i,this.pipelines.bindings=this}getForRender(e){const t=e.getBindings();for(const e of t){const s=this.get(e);void 0===s.bindGroup&&(this._init(e),this.backend.createBindings(e,t,0),s.bindGroup=e)}return t}getForCompute(e){const t=this.nodes.getForCompute(e).bindings;for(const e of t){const s=this.get(e);void 0===s.bindGroup&&(this._init(e),this.backend.createBindings(e,t,0),s.bindGroup=e)}return t}updateForCompute(e){this._updateBindings(this.getForCompute(e))}updateForRender(e){this._updateBindings(this.getForRender(e))}_updateBindings(e){for(const t of e)this._update(t,e)}_init(e){for(const t of e.bindings)if(t.isSampledTexture)this.textures.updateTexture(t.texture);else if(t.isStorageBuffer){const e=t.attribute,s=e.isIndirectStorageBufferAttribute?Hg:$g;this.attributes.update(e,s)}}_update(e,t){const{backend:s}=this;let r=!1,n=!0,i=0,o=0;for(const t of e.bindings){if(t.isNodeUniformsGroup){if(!this.nodes.updateGroup(t))continue}if(t.isUniformBuffer){t.update()&&s.updateBinding(t)}else if(t.isSampler)t.update();else if(t.isSampledTexture){const e=this.textures.get(t.texture);t.needsBindingsUpdate(e.generation)&&(r=!0);const a=t.update(),u=t.texture;a&&this.textures.updateTexture(u);const l=s.get(u);if(void 0!==l.externalTexture||e.isDefaultTexture?n=!1:(i=10*i+u.id,o+=u.version),!0===s.isWebGPUBackend&&void 0===l.texture&&void 0===l.externalTexture&&(console.error("Bindings._update: binding should be available:",t,a,u,t.textureNode.value,r),this.textures.updateTexture(u),r=!0),!0===u.isStorageTexture){const e=this.get(u);!0===t.store?e.needsMipmap=!0:this.textures.needsMipmaps(u)&&!0===e.needsMipmap&&(this.backend.generateMipmaps(u),e.needsMipmap=!1)}}}!0===r&&this.backend.updateBindings(e,t,n?i:0,o)}}function nm(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function im(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function om(e){return(e.transmission>0||e.transmissionNode)&&e.side===le&&!1===e.forceSinglePass}class am{constructor(e,t,s){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparentDoublePass=[],this.transparent=[],this.bundles=[],this.lightsNode=e.getNode(t,s),this.lightsArray=[],this.scene=t,this.camera=s,this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparentDoublePass.length=0,this.transparent.length=0,this.bundles.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(e,t,s,r,n,i,o){let a=this.renderItems[this.renderItemsIndex];return void 0===a?(a={id:e.id,object:e,geometry:t,material:s,groupOrder:r,renderOrder:e.renderOrder,z:n,group:i,clippingContext:o},this.renderItems[this.renderItemsIndex]=a):(a.id=e.id,a.object=e,a.geometry=t,a.material=s,a.groupOrder=r,a.renderOrder=e.renderOrder,a.z=n,a.group=i,a.clippingContext=o),this.renderItemsIndex++,a}push(e,t,s,r,n,i,o){const a=this.getNextRenderItem(e,t,s,r,n,i,o);!0===e.occlusionTest&&this.occlusionQueryCount++,!0===s.transparent||s.transmission>0?(om(s)&&this.transparentDoublePass.push(a),this.transparent.push(a)):this.opaque.push(a)}unshift(e,t,s,r,n,i,o){const a=this.getNextRenderItem(e,t,s,r,n,i,o);!0===s.transparent||s.transmission>0?(om(s)&&this.transparentDoublePass.unshift(a),this.transparent.unshift(a)):this.opaque.unshift(a)}pushBundle(e){this.bundles.push(e)}pushLight(e){this.lightsArray.push(e)}sort(e,t){this.opaque.length>1&&this.opaque.sort(e||nm),this.transparentDoublePass.length>1&&this.transparentDoublePass.sort(t||im),this.transparent.length>1&&this.transparent.sort(t||im)}finish(){this.lightsNode.setLights(this.lightsArray);for(let e=this.renderItemsIndex,t=this.renderItems.length;e<t;e++){const t=this.renderItems[e];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.groupOrder=null,t.renderOrder=null,t.z=null,t.group=null,t.clippingContext=null}}}class um{constructor(e){this.lighting=e,this.lists=new Ig}get(e,t){const s=this.lists,r=[e,t];let n=s.get(r);return void 0===n&&(n=new am(this.lighting,e,t),s.set(r,n)),n}dispose(){this.lists=new Ig}}let lm=0;class dm{constructor(){this.id=lm++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!1,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new r,this.scissor=!1,this.scissorValue=new r,this.textures=null,this.depthTexture=null,this.activeCubeFace=0,this.sampleCount=1,this.width=0,this.height=0,this.isRenderContext=!0}getCacheKey(){return cm(this)}}function cm(e){const{textures:t,activeCubeFace:s}=e,r=[s];for(const e of t)r.push(e.id);return lr(r)}class hm{constructor(){this.chainMaps={}}get(e,t,s=null){const r=[e,t];let n;if(null===s)n="default";else{const e=s.texture.format;n=`${s.textures.length}:${e}:${s.samples}:${s.depthBuffer}:${s.stencilBuffer}`}const i=this.getChainMap(n);let o=i.get(r);return void 0===o&&(o=new dm,i.set(r,o)),null!==s&&(o.sampleCount=0===s.samples?1:s.samples),o}getChainMap(e){return this.chainMaps[e]||(this.chainMaps[e]=new Ig)}dispose(){this.chainMaps={}}}const pm=new s;class gm extends Gg{constructor(e,t,s){super(),this.renderer=e,this.backend=t,this.info=s}updateRenderTarget(e,t=0){const s=this.get(e),r=0===e.samples?1:e.samples,n=s.depthTextureMips||(s.depthTextureMips={}),i=e.textures,o=this.getSize(i[0]),a=o.width>>t,u=o.height>>t;let l=e.depthTexture||n[t];const d=!0===e.depthBuffer||!0===e.stencilBuffer;let c=!1;void 0===l&&d&&(l=new B,l.format=e.stencilBuffer?de:ce,l.type=e.stencilBuffer?he:f,l.image.width=a,l.image.height=u,n[t]=l),s.width===o.width&&o.height===s.height||(c=!0,l&&(l.needsUpdate=!0,l.image.width=a,l.image.height=u)),s.width=o.width,s.height=o.height,s.textures=i,s.depthTexture=l||null,s.depth=e.depthBuffer,s.stencil=e.stencilBuffer,s.renderTarget=e,s.sampleCount!==r&&(c=!0,l&&(l.needsUpdate=!0),s.sampleCount=r);const h={sampleCount:r};for(let e=0;e<i.length;e++){const t=i[e];c&&(t.needsUpdate=!0),this.updateTexture(t,h)}if(l&&this.updateTexture(l,h),!0!==s.initialized){s.initialized=!0;const t=()=>{e.removeEventListener("dispose",t);for(let e=0;e<i.length;e++)this._destroyTexture(i[e]);l&&this._destroyTexture(l),this.delete(e)};e.addEventListener("dispose",t)}}updateTexture(e,t={}){const s=this.get(e);if(!0===s.initialized&&s.version===e.version)return;const r=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,n=this.backend;if(r&&!0===s.initialized&&(n.destroySampler(e),n.destroyTexture(e)),e.isFramebufferTexture){const t=this.renderer.getRenderTarget();e.type=t?t.texture.type:pe}const{width:i,height:o,depth:a}=this.getSize(e);if(t.width=i,t.height=o,t.depth=a,t.needsMipmaps=this.needsMipmaps(e),t.levels=t.needsMipmaps?this.getMipLevels(e,i,o):1,r||!0===e.isStorageTexture)n.createSampler(e),n.createTexture(e,t),s.generation=e.version;else{if(!0!==s.initialized&&n.createSampler(e),e.version>0){const r=e.image;if(void 0===r)console.warn("THREE.Renderer: Texture marked for update but image is undefined.");else if(!1===r.complete)console.warn("THREE.Renderer: Texture marked for update but image is incomplete.");else{if(e.images){const s=[];for(const t of e.images)s.push(t);t.images=s}else t.image=r;void 0!==s.isDefaultTexture&&!0!==s.isDefaultTexture||(n.createTexture(e,t),s.isDefaultTexture=!1,s.generation=e.version),!0===e.source.dataReady&&n.updateTexture(e,t),t.needsMipmaps&&0===e.mipmaps.length&&n.generateMipmaps(e)}}else n.createDefaultTexture(e),s.isDefaultTexture=!0,s.generation=e.version}if(!0!==s.initialized){s.initialized=!0,s.generation=e.version,this.info.memory.textures++;const t=()=>{e.removeEventListener("dispose",t),this._destroyTexture(e),this.info.memory.textures--};e.addEventListener("dispose",t)}s.version=e.version}getSize(e,t=pm){let s=e.images?e.images[0]:e.image;return s?(void 0!==s.image&&(s=s.image),t.width=s.width||1,t.height=s.height||1,t.depth=e.isCubeTexture?6:s.depth||1):t.width=t.height=t.depth=1,t}getMipLevels(e,t,s){let r;return r=e.isCompressedTexture?e.mipmaps?e.mipmaps.length:1:Math.floor(Math.log2(Math.max(t,s)))+1,r}needsMipmaps(e){return this.isEnvironmentTexture(e)||!0===e.isCompressedTexture||e.generateMipmaps}isEnvironmentTexture(e){const t=e.mapping;return t===j||t===q||t===T||t===_}_destroyTexture(e){this.backend.destroySampler(e),this.backend.destroyTexture(e),this.delete(e)}}class mm extends e{constructor(e,t,s,r=1){super(e,t,s),this.a=r}set(e,t,s,r=1){return this.a=r,super.set(e,t,s)}copy(e){return void 0!==e.a&&(this.a=e.a),super.copy(e)}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}}class fm extends ri{static get type(){return"ParameterNode"}constructor(e,t=null){super(e,t),this.isParameterNode=!0}getHash(){return this.uuid}generate(){return this.name}}const ym=(e,t)=>pn(new fm(e,t));class bm extends Rr{static get type(){return"StackNode"}constructor(e=null){super(),this.nodes=[],this.outputNode=null,this.parent=e,this._currentCond=null,this.isStackNode=!0}getNodeType(e){return this.outputNode?this.outputNode.getNodeType(e):"void"}add(e){return this.nodes.push(e),this}If(e,t){const s=new hn(t);return this._currentCond=Ta(e,s),this.add(this._currentCond)}ElseIf(e,t){const s=new hn(t),r=Ta(e,s);return this._currentCond.elseNode=r,this._currentCond=r,this}Else(e){return this._currentCond.elseNode=new hn(e),this}build(e,...t){const s=_n();Tn(this);for(const t of this.nodes)t.build(e,"void");return Tn(s),this.outputNode?this.outputNode.build(e,...t):super.build(e,...t)}else(...e){return console.warn("TSL.StackNode: .else() has been renamed to .Else()."),this.Else(...e)}elseif(...e){return console.warn("TSL.StackNode: .elseif() has been renamed to .ElseIf()."),this.ElseIf(...e)}}const xm=fn(bm);class Tm extends Rr{static get type(){return"StructTypeNode"}constructor(e){super(),this.types=e,this.isStructTypeNode=!0}getMemberTypes(){return this.types}}class _m extends Rr{static get type(){return"OutputStructNode"}constructor(...e){super(),this.members=e,this.isOutputStructNode=!0}setup(e){super.setup(e);const t=this.members,s=[];for(let r=0;r<t.length;r++)s.push(t[r].getNodeType(e));this.nodeType=e.getStructTypeFromNode(new Tm(s)).name}generate(e,t){const s=e.getOutputStructName(),r=this.members,n=""!==s?s+".":"";for(let s=0;s<r.length;s++){const i=r[s].build(e,t);e.addLineFlowCode(`${n}m${s} = ${i}`,this)}return s}}const Nm=fn(_m);function vm(e,t){for(let s=0;s<e.length;s++)if(e[s].name===t)return s;return-1}class Sm extends _m{static get type(){return"MRTNode"}constructor(e){super(),this.outputNodes=e,this.isMRTNode=!0}has(e){return void 0!==this.outputNodes[e]}get(e){return this.outputNodes[e]}merge(e){const t={...this.outputNodes,...e.outputNodes};return Am(t)}setup(e){const t=this.outputNodes,s=[],r=e.renderer.getRenderTarget().textures;for(const e in t){s[vm(r,e)]=Vn(t[e])}return this.members=s,super.setup(e)}}const Am=fn(Sm),Rm=bn((([e])=>{const t=e.toUint().mul(747796405).add(2891336453),s=t.shiftRight(t.shiftRight(28).add(4)).bitXor(t).mul(277803737);return s.shiftRight(22).bitXor(s).toFloat().mul(1/2**32)})),Cm=(e,t)=>ra(ki(4,e.mul(Gi(1,e))),t),Em=(e,t)=>e.lessThan(.5)?Cm(e.mul(2),t).div(2):Gi(1,Cm(ki(Gi(1,e),2),t).div(2)),wm=(e,t,s)=>ra(zi(ra(e,t),Oi(ra(e,t),ra(Gi(1,e),s))),1/t),Mm=(e,t)=>Eo(co.mul(t.mul(e).sub(1))).div(co.mul(t.mul(e).sub(1))),Bm=bn((([e])=>e.fract().sub(.5).abs())).setLayout({name:"tri",type:"float",inputs:[{name:"x",type:"float"}]}),Um=bn((([e])=>Fn(Bm(e.z.add(Bm(e.y.mul(1)))),Bm(e.z.add(Bm(e.x.mul(1)))),Bm(e.y.add(Bm(e.x.mul(1))))))).setLayout({name:"tri3",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),Fm=bn((([e,t,s])=>{const r=Fn(e).toVar(),n=An(1.4).toVar(),i=An(0).toVar(),o=Fn(r).toVar();return cc({start:An(0),end:An(3),type:"float",condition:"<="},(()=>{const e=Fn(Um(o.mul(2))).toVar();r.addAssign(e.add(s.mul(An(.1).mul(t)))),o.mulAssign(1.8),n.mulAssign(1.5),r.mulAssign(1.2);const a=An(Bm(r.z.add(Bm(r.x.add(Bm(r.y)))))).toVar();i.addAssign(a.div(n)),o.addAssign(.14)})),i})).setLayout({name:"triNoise3D",type:"float",inputs:[{name:"p",type:"vec3"},{name:"spd",type:"float"},{name:"time",type:"float"}]});class Pm extends Rr{static get type(){return"FunctionOverloadingNode"}constructor(e=[],...t){super(),this.functionNodes=e,this.parametersNodes=t,this._candidateFnCall=null,this.global=!0}getNodeType(){return this.functionNodes[0].shaderNode.layout.type}setup(e){const t=this.parametersNodes;let s=this._candidateFnCall;if(null===s){let r=null,n=-1;for(const s of this.functionNodes){const i=s.shaderNode.layout;if(null===i)throw new Error("FunctionOverloadingNode: FunctionNode must be a layout.");const o=i.inputs;if(t.length===o.length){let i=0;for(let s=0;s<t.length;s++){const r=t[s],n=o[s];r.getNodeType(e)===n.type?i++:i=0}i>n&&(r=s,n=i)}}this._candidateFnCall=s=r(...t)}return s}}const Im=fn(Pm),Lm=e=>(...t)=>Im(e,...t),Vm=si(0).setGroup(Jn).onRenderUpdate((e=>e.time)),Dm=si(0).setGroup(Jn).onRenderUpdate((e=>e.deltaTime)),Om=si(0,"uint").setGroup(Jn).onRenderUpdate((e=>e.frameId)),Gm=(e=1)=>(console.warn('TSL: timerLocal() is deprecated. Use "time" instead.'),Vm.mul(e)),km=(e=1)=>(console.warn('TSL: timerGlobal() is deprecated. Use "time" instead.'),Vm.mul(e)),zm=(e=1)=>(console.warn('TSL: timerDelta() is deprecated. Use "deltaTime" instead.'),Dm.mul(e)),$m=(e=Vm)=>e.add(.75).mul(2*Math.PI).sin().mul(.5).add(.5),Hm=(e=Vm)=>e.fract().round(),Wm=(e=Vm)=>e.add(.5).fract().mul(2).sub(1).abs(),jm=(e=Vm)=>e.fract(),qm=bn((([e,t,s=wn(.5)])=>Sg(e.sub(s),t).add(s))),Km=bn((([e,t,s=wn(.5)])=>{const r=e.sub(s),n=r.dot(r),i=n.mul(n).mul(t);return e.add(r.mul(i))})),Xm=bn((({position:e=null,horizontal:t=!0,vertical:s=!1})=>{let r;null!==e?(r=ku.toVar(),r[3][0]=e.x,r[3][1]=e.y,r[3][2]=e.z):r=ku;const n=wu.mul(r);return dn(t)&&(n[0][0]=ku[0].length(),n[0][1]=0,n[0][2]=0),dn(s)&&(n[1][0]=0,n[1][1]=ku[1].length(),n[1][2]=0),n[2][0]=0,n[2][1]=0,n[2][2]=1,Cu.mul(n).mul(Qu)})),Ym=bn((([e=null])=>{const t=eh();return eh(Hc(e)).sub(t).lessThan(0).select(Ec,e)}));class Qm extends Rr{static get type(){return"SpriteSheetUVNode"}constructor(e,t=fu(),s=An(0)){super("vec2"),this.countNode=e,this.uvNode=t,this.frameNode=s}setup(){const{frameNode:e,uvNode:t,countNode:s}=this,{width:r,height:n}=s,i=e.mod(r.mul(n)).floor(),o=i.mod(r),a=n.sub(i.add(1).div(r).ceil()),u=s.reciprocal(),l=wn(o,a);return t.add(l).mul(u)}}const Zm=fn(Qm);class Jm extends Rr{static get type(){return"TriplanarTexturesNode"}constructor(e,t=null,s=null,r=An(1),n=Qu,i=al){super("vec4"),this.textureXNode=e,this.textureYNode=t,this.textureZNode=s,this.scaleNode=r,this.positionNode=n,this.normalNode=i}setup(){const{textureXNode:e,textureYNode:t,textureZNode:s,scaleNode:r,positionNode:n,normalNode:i}=this;let o=i.abs().normalize();o=o.div(o.dot(Fn(1)));const a=n.yz.mul(r),u=n.zx.mul(r),l=n.xy.mul(r),d=e.value,c=null!==t?t.value:d,h=null!==s?s.value:d,p=Nu(d,a).mul(o.x),g=Nu(c,u).mul(o.y),m=Nu(h,l).mul(o.z);return Oi(p,g,m)}}const ef=fn(Jm),tf=(...e)=>ef(...e),sf=new me,rf=new s,nf=new s,of=new s,af=new i,uf=new s(0,0,-1),lf=new r,df=new s,cf=new s,hf=new r,pf=new t,gf=new ge,mf=Ec.flipX();gf.depthTexture=new B(1,1);let ff=!1;class yf extends _u{static get type(){return"ReflectorNode"}constructor(e={}){super(e.defaultTexture||gf.texture,mf),this._reflectorBaseNode=e.reflector||new bf(this,e),this._depthNode=null,this.setUpdateMatrix(!1)}get reflector(){return this._reflectorBaseNode}get target(){return this._reflectorBaseNode.target}getDepthNode(){if(null===this._depthNode){if(!0!==this._reflectorBaseNode.depth)throw new Error("THREE.ReflectorNode: Depth node can only be requested when the reflector is created with { depth: true }. ");this._depthNode=pn(new yf({defaultTexture:gf.depthTexture,reflector:this._reflectorBaseNode}))}return this._depthNode}setup(e){return e.object.isQuadMesh||this._reflectorBaseNode.build(e),super.setup(e)}clone(){const e=new this.constructor(this.reflectorNode);return e._reflectorBaseNode=this._reflectorBaseNode,e}}class bf extends Rr{static get type(){return"ReflectorBaseNode"}constructor(e,t={}){super();const{target:s=new fe,resolution:r=1,generateMipmaps:n=!1,bounces:i=!0,depth:o=!1}=t;this.textureNode=e,this.target=s,this.resolution=r,this.generateMipmaps=n,this.bounces=i,this.depth=o,this.updateBeforeType=i?xr.RENDER:xr.FRAME,this.virtualCameras=new WeakMap,this.renderTargets=new WeakMap}_updateResolution(e,t){const s=this.resolution;t.getDrawingBufferSize(pf),e.setSize(Math.round(pf.width*s),Math.round(pf.height*s))}setup(e){return this._updateResolution(gf,e.renderer),super.setup(e)}getVirtualCamera(e){let t=this.virtualCameras.get(e);return void 0===t&&(t=e.clone(),this.virtualCameras.set(e,t)),t}getRenderTarget(e){let t=this.renderTargets.get(e);return void 0===t&&(t=new ge(0,0,{type:ye}),!0===this.generateMipmaps&&(t.texture.minFilter=be,t.texture.generateMipmaps=!0),!0===this.depth&&(t.depthTexture=new B),this.renderTargets.set(e,t)),t}updateBefore(e){if(!1===this.bounces&&ff)return;ff=!0;const{scene:t,camera:s,renderer:r,material:n}=e,{target:i}=this,o=this.getVirtualCamera(s),a=this.getRenderTarget(o);if(r.getDrawingBufferSize(pf),this._updateResolution(a,r),nf.setFromMatrixPosition(i.matrixWorld),of.setFromMatrixPosition(s.matrixWorld),af.extractRotation(i.matrixWorld),rf.set(0,0,1),rf.applyMatrix4(af),df.subVectors(nf,of),df.dot(rf)>0)return;df.reflect(rf).negate(),df.add(nf),af.extractRotation(s.matrixWorld),uf.set(0,0,-1),uf.applyMatrix4(af),uf.add(of),cf.subVectors(nf,uf),cf.reflect(rf).negate(),cf.add(nf),o.coordinateSystem=s.coordinateSystem,o.position.copy(df),o.up.set(0,1,0),o.up.applyMatrix4(af),o.up.reflect(rf),o.lookAt(cf),o.near=s.near,o.far=s.far,o.updateMatrixWorld(),o.projectionMatrix.copy(s.projectionMatrix),sf.setFromNormalAndCoplanarPoint(rf,nf),sf.applyMatrix4(o.matrixWorldInverse),lf.set(sf.normal.x,sf.normal.y,sf.normal.z,sf.constant);const u=o.projectionMatrix;hf.x=(Math.sign(lf.x)+u.elements[8])/u.elements[0],hf.y=(Math.sign(lf.y)+u.elements[9])/u.elements[5],hf.z=-1,hf.w=(1+u.elements[10])/u.elements[14],lf.multiplyScalar(1/lf.dot(hf));u.elements[2]=lf.x,u.elements[6]=lf.y,u.elements[10]=r.coordinateSystem===N?lf.z-0:lf.z+1-0,u.elements[14]=lf.w,this.textureNode.value=a.texture,!0===this.depth&&(this.textureNode.getDepthNode().value=a.depthTexture),n.visible=!1;const l=r.getRenderTarget(),d=r.getMRT();r.setMRT(null),r.setRenderTarget(a),r.render(t,o),r.setMRT(d),r.setRenderTarget(l),n.visible=!0,ff=!1}}const xf=e=>pn(new yf(e)),Tf=new xe(-1,1,1,-1,0,1);class _f extends Te{constructor(e=!1){super();const t=!1===e?[0,-1,0,1,2,1]:[0,2,0,0,2,0];this.setAttribute("position",new _e([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new _e(t,2))}}const Nf=new _f;class vf extends k{constructor(e=null){super(Nf,e),this.camera=Tf,this.isQuadMesh=!0}renderAsync(e){return e.renderAsync(this,Tf)}render(e){e.render(this,Tf)}}const Sf=new t;class Af extends _u{static get type(){return"RTTNode"}constructor(e,t=null,s=null,r={type:ye}){const n=new ge(t,s,r);super(n.texture,fu()),this.node=e,this.width=t,this.height=s,this.renderTarget=n,this.textureNeedsUpdate=!0,this.autoUpdate=!0,this.updateMap=new WeakMap,this._rttNode=null,this._quadMesh=new vf(new ah),this.updateBeforeType=xr.RENDER}get autoSize(){return null===this.width}setup(e){return this._rttNode=this.node.context(e.getSharedContext()),this._quadMesh.material.name="RTT",this._quadMesh.material.needsUpdate=!0,super.setup(e)}setSize(e,t){this.width=e,this.height=t;const s=e*this.pixelRatio,r=t*this.pixelRatio;this.renderTarget.setSize(s,r),this.textureNeedsUpdate=!0}setPixelRatio(e){this.pixelRatio=e,this.setSize(this.width,this.height)}updateBefore({renderer:e}){if(!1===this.textureNeedsUpdate&&!1===this.autoUpdate)return;if(this.textureNeedsUpdate=!1,!0===this.autoSize){this.pixelRatio=e.getPixelRatio();const t=e.getSize(Sf);this.setSize(t.width,t.height)}this._quadMesh.material.fragmentNode=this._rttNode;const t=e.getRenderTarget();e.setRenderTarget(this.renderTarget),this._quadMesh.render(e),e.setRenderTarget(t)}clone(){const e=new _u(this.value,this.uvNode,this.levelNode);return e.sampler=this.sampler,e.referenceNode=this,e}}const Rf=(e,...t)=>pn(new Af(pn(e),...t)),Cf=(e,...t)=>e.isTextureNode?e:Rf(e,...t),Ef=bn((([e,t,s],r)=>{let n;r.renderer.coordinateSystem===N?(e=wn(e.x,e.y.oneMinus()).mul(2).sub(1),n=Vn(Fn(e,t),1)):n=Vn(Fn(e.x,e.y.oneMinus(),t).mul(2).sub(1),1);const i=Vn(s.mul(n));return i.xyz.div(i.w)})),wf=bn((([e,t])=>{const s=t.mul(Vn(e,1)),r=s.xy.div(s.w).mul(.5).add(.5).toVar();return wn(r.x,r.y.oneMinus())})),Mf=bn((([e,t,s])=>{const r=bu(vu(t)),n=Mn(e.mul(r)).toVar(),i=vu(t,n).toVar(),o=vu(t,n.sub(Mn(2,0))).toVar(),a=vu(t,n.sub(Mn(1,0))).toVar(),u=vu(t,n.add(Mn(1,0))).toVar(),l=vu(t,n.add(Mn(2,0))).toVar(),d=vu(t,n.add(Mn(0,2))).toVar(),c=vu(t,n.add(Mn(0,1))).toVar(),h=vu(t,n.sub(Mn(0,1))).toVar(),p=vu(t,n.sub(Mn(0,2))).toVar(),g=Po(Gi(An(2).mul(a).sub(o),i)).toVar(),m=Po(Gi(An(2).mul(u).sub(l),i)).toVar(),f=Po(Gi(An(2).mul(c).sub(d),i)).toVar(),y=Po(Gi(An(2).mul(h).sub(p),i)).toVar(),b=Ef(e,i,s).toVar(),x=g.lessThan(m).select(b.sub(Ef(e.sub(wn(An(1).div(r.x),0)),a,s)),b.negate().add(Ef(e.add(wn(An(1).div(r.x),0)),u,s))),T=f.lessThan(y).select(b.sub(Ef(e.add(wn(0,An(1).div(r.y))),c,s)),b.negate().add(Ef(e.sub(wn(0,An(1).div(r.y))),h,s)));return Ro(sa(x,T))}));class Bf extends gu{static get type(){return"VertexColorNode"}constructor(e=0){super(null,"vec4"),this.isVertexColorNode=!0,this.index=e}getAttributeName(){const e=this.index;return"color"+(e>0?e:"")}generate(e){const t=this.getAttributeName(e);let s;return s=!0===e.hasGeometryAttribute(t)?super.generate(e):e.generateConst(this.nodeType,new r(1,1,1,1)),s}serialize(e){super.serialize(e),e.index=this.index}deserialize(e){super.deserialize(e),this.index=e.index}}const Uf=(...e)=>pn(new Bf(...e));class Ff extends Rr{static get type(){return"PointUVNode"}constructor(){super("vec2"),this.isPointUVNode=!0}generate(){return"vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y )"}}const Pf=yn(Ff),If=new ve,Lf=new i;class Vf extends Rr{static get type(){return"SceneNode"}constructor(e=Vf.BACKGROUND_BLURRINESS,t=null){super(),this.scope=e,this.scene=t}setup(e){const t=this.scope,s=null!==this.scene?this.scene:e.scene;let r;return t===Vf.BACKGROUND_BLURRINESS?r=Bl("backgroundBlurriness","float",s):t===Vf.BACKGROUND_INTENSITY?r=Bl("backgroundIntensity","float",s):t===Vf.BACKGROUND_ROTATION?r=si("mat4").label("backgroundRotation").setGroup(Jn).onRenderUpdate((()=>{const e=s.background;return null!==e&&e.isTexture&&e.mapping!==Ne?(If.copy(s.backgroundRotation),If.x*=-1,If.y*=-1,If.z*=-1,Lf.makeRotationFromEuler(If)):Lf.identity(),Lf})):console.error("THREE.SceneNode: Unknown scope:",t),r}}Vf.BACKGROUND_BLURRINESS="backgroundBlurriness",Vf.BACKGROUND_INTENSITY="backgroundIntensity",Vf.BACKGROUND_ROTATION="backgroundRotation";const Df=yn(Vf,Vf.BACKGROUND_BLURRINESS),Of=yn(Vf,Vf.BACKGROUND_INTENSITY),Gf=yn(Vf,Vf.BACKGROUND_ROTATION);class kf extends Cr{static get type(){return"StorageArrayElementNode"}constructor(e,t){super(e,t),this.isStorageArrayElementNode=!0}set storageBufferNode(e){this.node=e}get storageBufferNode(){return this.node}setup(e){return!1===e.isAvailable("storageBuffer")&&!0===this.node.bufferObject&&e.setupPBO(this.node),super.setup(e)}generate(e,t){let s;const r=e.context.assign;if(s=!1===e.isAvailable("storageBuffer")?!0===this.node.bufferObject&&!0!==r?e.generatePBO(this):this.node.build(e):super.generate(e),!0!==r){const r=this.getNodeType(e);s=e.format(s,r,t)}return s}}const zf=fn(kf),$f="point-list",Hf="line-list",Wf="line-strip",jf="triangle-list",qf="triangle-strip",Kf="never",Xf="less",Yf="equal",Qf="less-equal",Zf="greater",Jf="not-equal",ey="greater-equal",ty="always",sy="store",ry="load",ny="clear",iy="ccw",oy="none",ay="front",uy="back",ly="uint16",dy="uint32",cy={R8Unorm:"r8unorm",R8Snorm:"r8snorm",R8Uint:"r8uint",R8Sint:"r8sint",R16Uint:"r16uint",R16Sint:"r16sint",R16Float:"r16float",RG8Unorm:"rg8unorm",RG8Snorm:"rg8snorm",RG8Uint:"rg8uint",RG8Sint:"rg8sint",R32Uint:"r32uint",R32Sint:"r32sint",R32Float:"r32float",RG16Uint:"rg16uint",RG16Sint:"rg16sint",RG16Float:"rg16float",RGBA8Unorm:"rgba8unorm",RGBA8UnormSRGB:"rgba8unorm-srgb",RGBA8Snorm:"rgba8snorm",RGBA8Uint:"rgba8uint",RGBA8Sint:"rgba8sint",BGRA8Unorm:"bgra8unorm",BGRA8UnormSRGB:"bgra8unorm-srgb",RGB9E5UFloat:"rgb9e5ufloat",RGB10A2Unorm:"rgb10a2unorm",RG11B10uFloat:"rgb10a2unorm",RG32Uint:"rg32uint",RG32Sint:"rg32sint",RG32Float:"rg32float",RGBA16Uint:"rgba16uint",RGBA16Sint:"rgba16sint",RGBA16Float:"rgba16float",RGBA32Uint:"rgba32uint",RGBA32Sint:"rgba32sint",RGBA32Float:"rgba32float",Stencil8:"stencil8",Depth16Unorm:"depth16unorm",Depth24Plus:"depth24plus",Depth24PlusStencil8:"depth24plus-stencil8",Depth32Float:"depth32float",Depth32FloatStencil8:"depth32float-stencil8",BC1RGBAUnorm:"bc1-rgba-unorm",BC1RGBAUnormSRGB:"bc1-rgba-unorm-srgb",BC2RGBAUnorm:"bc2-rgba-unorm",BC2RGBAUnormSRGB:"bc2-rgba-unorm-srgb",BC3RGBAUnorm:"bc3-rgba-unorm",BC3RGBAUnormSRGB:"bc3-rgba-unorm-srgb",BC4RUnorm:"bc4-r-unorm",BC4RSnorm:"bc4-r-snorm",BC5RGUnorm:"bc5-rg-unorm",BC5RGSnorm:"bc5-rg-snorm",BC6HRGBUFloat:"bc6h-rgb-ufloat",BC6HRGBFloat:"bc6h-rgb-float",BC7RGBAUnorm:"bc7-rgba-unorm",BC7RGBAUnormSRGB:"bc7-rgba-srgb",ETC2RGB8Unorm:"etc2-rgb8unorm",ETC2RGB8UnormSRGB:"etc2-rgb8unorm-srgb",ETC2RGB8A1Unorm:"etc2-rgb8a1unorm",ETC2RGB8A1UnormSRGB:"etc2-rgb8a1unorm-srgb",ETC2RGBA8Unorm:"etc2-rgba8unorm",ETC2RGBA8UnormSRGB:"etc2-rgba8unorm-srgb",EACR11Unorm:"eac-r11unorm",EACR11Snorm:"eac-r11snorm",EACRG11Unorm:"eac-rg11unorm",EACRG11Snorm:"eac-rg11snorm",ASTC4x4Unorm:"astc-4x4-unorm",ASTC4x4UnormSRGB:"astc-4x4-unorm-srgb",ASTC5x4Unorm:"astc-5x4-unorm",ASTC5x4UnormSRGB:"astc-5x4-unorm-srgb",ASTC5x5Unorm:"astc-5x5-unorm",ASTC5x5UnormSRGB:"astc-5x5-unorm-srgb",ASTC6x5Unorm:"astc-6x5-unorm",ASTC6x5UnormSRGB:"astc-6x5-unorm-srgb",ASTC6x6Unorm:"astc-6x6-unorm",ASTC6x6UnormSRGB:"astc-6x6-unorm-srgb",ASTC8x5Unorm:"astc-8x5-unorm",ASTC8x5UnormSRGB:"astc-8x5-unorm-srgb",ASTC8x6Unorm:"astc-8x6-unorm",ASTC8x6UnormSRGB:"astc-8x6-unorm-srgb",ASTC8x8Unorm:"astc-8x8-unorm",ASTC8x8UnormSRGB:"astc-8x8-unorm-srgb",ASTC10x5Unorm:"astc-10x5-unorm",ASTC10x5UnormSRGB:"astc-10x5-unorm-srgb",ASTC10x6Unorm:"astc-10x6-unorm",ASTC10x6UnormSRGB:"astc-10x6-unorm-srgb",ASTC10x8Unorm:"astc-10x8-unorm",ASTC10x8UnormSRGB:"astc-10x8-unorm-srgb",ASTC10x10Unorm:"astc-10x10-unorm",ASTC10x10UnormSRGB:"astc-10x10-unorm-srgb",ASTC12x10Unorm:"astc-12x10-unorm",ASTC12x10UnormSRGB:"astc-12x10-unorm-srgb",ASTC12x12Unorm:"astc-12x12-unorm",ASTC12x12UnormSRGB:"astc-12x12-unorm-srgb"},hy="clamp-to-edge",py="repeat",gy="mirror-repeat",my="linear",fy="nearest",yy="zero",by="one",xy="src",Ty="one-minus-src",_y="src-alpha",Ny="one-minus-src-alpha",vy="dst",Sy="one-minus-dst",Ay="dst-alpha",Ry="one-minus-dst-alpha",Cy="src-alpha-saturated",Ey="constant",wy="one-minus-constant",My="add",By="subtract",Uy="reverse-subtract",Fy="min",Py="max",Iy=0,Ly=15,Vy="keep",Dy="zero",Oy="replace",Gy="invert",ky="increment-clamp",zy="decrement-clamp",$y="increment-wrap",Hy="decrement-wrap",Wy="storage",jy="read-only-storage",qy="write-only",Ky="read-only",Xy="float",Yy="unfilterable-float",Qy="depth",Zy="sint",Jy="uint",eb="2d",tb="3d",sb="2d",rb="2d-array",nb="cube",ib="3d",ob="all",ab="vertex",ub="instance",lb={DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable",ClipDistances:"clip-distances",DualSourceBlending:"dual-source-blending",Subgroups:"subgroups"};class db extends vl{static get type(){return"StorageBufferNode"}constructor(e,t,s=0){super(e,t,s),this.isStorageBufferNode=!0,this.access=Wy,this.isAtomic=!1,this.bufferObject=!1,this.bufferCount=s,this._attribute=null,this._varying=null,this.global=!0,!0!==e.isStorageBufferAttribute&&!0!==e.isStorageInstancedBufferAttribute&&(e.isInstancedBufferAttribute?e.isStorageInstancedBufferAttribute=!0:e.isStorageBufferAttribute=!0)}getHash(e){if(0===this.bufferCount){let t=e.globalCache.getData(this.value);return void 0===t&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getInputType(){return this.value.isIndirectStorageBufferAttribute?"indirectStorageBuffer":"storageBuffer"}element(e){return zf(this,e)}setBufferObject(e){return this.bufferObject=e,this}setAccess(e){return this.access=e,this}toReadOnly(){return this.setAccess(jy)}setAtomic(e){return this.isAtomic=e,this}toAtomic(){return this.setAtomic(!0)}getAttributeData(){return null===this._attribute&&(this._attribute=Ka(this.value),this._varying=wa(this._attribute)),{attribute:this._attribute,varying:this._varying}}getNodeType(e){if(e.isAvailable("storageBuffer")||e.isAvailable("indirectStorageBuffer"))return super.getNodeType(e);const{attribute:t}=this.getAttributeData();return t.getNodeType(e)}generate(e){if(e.isAvailable("storageBuffer")||e.isAvailable("indirectStorageBuffer"))return super.generate(e);const{attribute:t,varying:s}=this.getAttributeData(),r=s.build(e);return e.registerTransform(r,t),r}}const cb=(e,t,s)=>pn(new db(e,t,s)),hb=(e,t,s)=>pn(new db(e,t,s).setBufferObject(!0));class pb extends _u{static get type(){return"StorageTextureNode"}constructor(e,t,s=null){super(e,t),this.storeNode=s,this.isStorageTextureNode=!0,this.access=qy}getInputType(){return"storageTexture"}setup(e){super.setup(e);e.getNodeProperties(this).storeNode=this.storeNode}setAccess(e){return this.access=e,this}generate(e,t){let s;return s=null!==this.storeNode?this.generateStore(e):super.generate(e,t),s}toReadOnly(){return this.setAccess(Ky)}toWriteOnly(){return this.setAccess(qy)}generateStore(e){const t=e.getNodeProperties(this),{uvNode:s,storeNode:r}=t,n=super.generate(e,"property"),i=s.build(e,"uvec2"),o=r.build(e,"vec4"),a=e.generateTextureStore(e,n,i,o);e.addLineFlowCode(a,this)}}const gb=fn(pb),mb=(e,t,s)=>{const r=gb(e,t,s);return null!==s&&r.append(),r};class fb extends Ml{static get type(){return"UserDataNode"}constructor(e,t,s=null){super(e,t,s),this.userData=s}updateReference(e){return this.reference=null!==this.userData?this.userData:e.object.userData,this.reference}}const yb=(e,t,s)=>pn(new fb(e,t,s)),bb=new WeakMap;class xb extends wr{static get type(){return"VelocityNode"}constructor(){super("vec2"),this.projectionMatrix=null,this.updateType=xr.OBJECT,this.updateAfterType=xr.OBJECT,this.previousModelWorldMatrix=si(new i),this.previousProjectionMatrix=si(new i).setGroup(Jn),this.previousCameraViewMatrix=si(new i)}setProjectionMatrix(e){this.projectionMatrix=e}update({frameId:e,camera:t,object:s}){const r=_b(s);this.previousModelWorldMatrix.value.copy(r);const n=Tb(t);n.frameId!==e&&(n.frameId=e,void 0===n.previousProjectionMatrix?(n.previousProjectionMatrix=new i,n.previousCameraViewMatrix=new i,n.currentProjectionMatrix=new i,n.currentCameraViewMatrix=new i,n.previousProjectionMatrix.copy(this.projectionMatrix||t.projectionMatrix),n.previousCameraViewMatrix.copy(t.matrixWorldInverse)):(n.previousProjectionMatrix.copy(n.currentProjectionMatrix),n.previousCameraViewMatrix.copy(n.currentCameraViewMatrix)),n.currentProjectionMatrix.copy(this.projectionMatrix||t.projectionMatrix),n.currentCameraViewMatrix.copy(t.matrixWorldInverse),this.previousProjectionMatrix.value.copy(n.previousProjectionMatrix),this.previousCameraViewMatrix.value.copy(n.previousCameraViewMatrix))}updateAfter({object:e}){_b(e).copy(e.matrixWorld)}setup(){const e=null===this.projectionMatrix?Cu:si(this.projectionMatrix),t=this.previousCameraViewMatrix.mul(this.previousModelWorldMatrix),s=e.mul(qu).mul(Qu),r=this.previousProjectionMatrix.mul(t).mul(Zu),n=s.xy.div(s.w),i=r.xy.div(r.w);return Gi(n,i)}}function Tb(e){let t=bb.get(e);return void 0===t&&(t={},bb.set(e,t)),t}function _b(e,t=0){const s=Tb(e);let r=s[t];return void 0===r&&(s[t]=r=new i),r}const Nb=yn(xb),vb=bn((([e,t])=>Ko(1,e.oneMinus().div(t)).oneMinus())).setLayout({name:"blendBurn",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),Sb=bn((([e,t])=>Ko(e.div(t.oneMinus()),1))).setLayout({name:"blendDodge",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),Ab=bn((([e,t])=>e.oneMinus().mul(t.oneMinus()).oneMinus())).setLayout({name:"blendScreen",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),Rb=bn((([e,t])=>da(e.mul(2).mul(t),e.oneMinus().mul(2).mul(t.oneMinus()).oneMinus(),Qo(.5,e)))).setLayout({name:"blendOverlay",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),Cb=bn((([e,t])=>{const s=t.a.add(e.a.mul(t.a.oneMinus()));return Vn(t.rgb.mul(t.a).add(e.rgb.mul(e.a).mul(t.a.oneMinus())).div(s),s)})).setLayout({name:"blendColor",type:"vec4",inputs:[{name:"base",type:"vec4"},{name:"blend",type:"vec4"}]}),Eb=(...e)=>(console.warn('THREE.TSL: "burn" has been renamed. Use "blendBurn" instead.'),vb(e)),wb=(...e)=>(console.warn('THREE.TSL: "dodge" has been renamed. Use "blendDodge" instead.'),Sb(e)),Mb=(...e)=>(console.warn('THREE.TSL: "screen" has been renamed. Use "blendScreen" instead.'),Ab(e)),Bb=(...e)=>(console.warn('THREE.TSL: "overlay" has been renamed. Use "blendOverlay" instead.'),Rb(e)),Ub=bn((([e])=>Lb(e.rgb))),Fb=bn((([e,t=An(1)])=>t.mix(Lb(e.rgb),e.rgb))),Pb=bn((([e,t=An(1)])=>{const s=Oi(e.r,e.g,e.b).div(3),r=e.r.max(e.g.max(e.b)),n=r.sub(s).mul(t).mul(-3);return da(e.rgb,r,n)})),Ib=bn((([e,t=An(1)])=>{const s=Fn(.57735,.57735,.57735),r=t.cos();return Fn(e.rgb.mul(r).add(s.cross(e.rgb).mul(t.sin()).add(s.mul(ta(s,e.rgb).mul(r.oneMinus())))))})),Lb=(e,t=Fn(u.getLuminanceCoefficients(new s)))=>ta(e,t),Vb=(e,t)=>da(Fn(0),e,Lb(e).sub(t).max(0)),Db=bn((([e,t=Fn(1),r=Fn(0),n=Fn(1),i=An(1),o=Fn(u.getLuminanceCoefficients(new s,Se))])=>{const a=e.rgb.dot(Fn(o)),l=Xo(e.rgb.mul(t).add(r),0).toVar(),d=l.pow(n).toVar();return Nn(l.r.greaterThan(0),(()=>{l.r.assign(d.r)})),Nn(l.g.greaterThan(0),(()=>{l.g.assign(d.g)})),Nn(l.b.greaterThan(0),(()=>{l.b.assign(d.b)})),l.assign(a.add(l.sub(a).mul(i))),Vn(l.rgb,e.a)}));class Ob extends wr{static get type(){return"PosterizeNode"}constructor(e,t){super(),this.sourceNode=e,this.stepsNode=t}setup(){const{sourceNode:e,stepsNode:t}=this;return e.mul(t).floor().div(t)}}const Gb=fn(Ob);let kb=null;class zb extends Oc{static get type(){return"ViewportSharedTextureNode"}constructor(e=Ec,t=null){null===kb&&(kb=new w),super(e,t,kb)}updateReference(){return this}}const $b=fn(zb),Hb=new t;class Wb extends _u{static get type(){return"PassTextureNode"}constructor(e,t){super(t),this.passNode=e,this.setUpdateMatrix(!1)}setup(e){return e.object.isQuadMesh&&this.passNode.build(e),super.setup(e)}clone(){return new this.constructor(this.passNode,this.value)}}class jb extends Wb{static get type(){return"PassMultipleTextureNode"}constructor(e,t,s=!1){super(e,null),this.textureName=t,this.previousTexture=s}updateTexture(){this.value=this.previousTexture?this.passNode.getPreviousTexture(this.textureName):this.passNode.getTexture(this.textureName)}setup(e){return this.updateTexture(),super.setup(e)}clone(){return new this.constructor(this.passNode,this.textureName,this.previousTexture)}}class qb extends wr{static get type(){return"PassNode"}constructor(e,t,s,r={}){super("vec4"),this.scope=e,this.scene=t,this.camera=s,this.options=r,this._pixelRatio=1,this._width=1,this._height=1;const n=new B;n.isRenderTargetTexture=!0,n.name="depth";const i=new ge(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:ye,...r});i.texture.name="output",i.depthTexture=n,this.renderTarget=i,this.updateBeforeType=xr.FRAME,this._textures={output:i.texture,depth:n},this._textureNodes={},this._linearDepthNodes={},this._viewZNodes={},this._previousTextures={},this._previousTextureNodes={},this._cameraNear=si(0),this._cameraFar=si(0),this._mrt=null,this.isPassNode=!0}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}isGlobal(){return!0}getTexture(e){let t=this._textures[e];if(void 0===t){t=this.renderTarget.texture.clone(),t.isRenderTargetTexture=!0,t.name=e,this._textures[e]=t,this.renderTarget.textures.push(t)}return t}getPreviousTexture(e){let t=this._previousTextures[e];return void 0===t&&(t=this.getTexture(e).clone(),t.isRenderTargetTexture=!0,this._previousTextures[e]=t),t}toggleTexture(e){const t=this._previousTextures[e];if(void 0!==t){const s=this._textures[e],r=this.renderTarget.textures.indexOf(s);this.renderTarget.textures[r]=t,this._textures[e]=t,this._previousTextures[e]=s,this._textureNodes[e].updateTexture(),this._previousTextureNodes[e].updateTexture()}}getTextureNode(e="output"){let t=this._textureNodes[e];return void 0===t&&(t=pn(new jb(this,e)),t.updateTexture(),this._textureNodes[e]=t),t}getPreviousTextureNode(e="output"){let t=this._previousTextureNodes[e];return void 0===t&&(void 0===this._textureNodes[e]&&this.getTextureNode(e),t=pn(new jb(this,e,!0)),t.updateTexture(),this._previousTextureNodes[e]=t),t}getViewZNode(e="depth"){let t=this._viewZNodes[e];if(void 0===t){const s=this._cameraNear,r=this._cameraFar;this._viewZNodes[e]=t=Xc(this.getTextureNode(e),s,r)}return t}getLinearDepthNode(e="depth"){let t=this._linearDepthNodes[e];if(void 0===t){const s=this._cameraNear,r=this._cameraFar,n=this.getViewZNode(e);this._linearDepthNodes[e]=t=jc(n,s,r)}return t}setup({renderer:e}){return this.renderTarget.samples=void 0===this.options.samples?e.samples:this.options.samples,!0===e.backend.isWebGLBackend&&(this.renderTarget.samples=0),this.renderTarget.depthTexture.isMultisampleRenderTargetTexture=this.renderTarget.samples>1,this.scope===qb.COLOR?this.getTextureNode():this.getLinearDepthNode()}updateBefore(e){const{renderer:t}=e,{scene:s,camera:r}=this;this._pixelRatio=t.getPixelRatio();const n=t.getSize(Hb);this.setSize(n.width,n.height);const i=t.getRenderTarget(),o=t.getMRT();this._cameraNear.value=r.near,this._cameraFar.value=r.far;for(const e in this._previousTextures)this.toggleTexture(e);t.setRenderTarget(this.renderTarget),t.setMRT(this._mrt),t.render(s,r),t.setRenderTarget(i),t.setMRT(o)}setSize(e,t){this._width=e,this._height=t;const s=this._width*this._pixelRatio,r=this._height*this._pixelRatio;this.renderTarget.setSize(s,r)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}}qb.COLOR="color",qb.DEPTH="depth";const Kb=(e,t,s)=>pn(new qb(qb.COLOR,e,t,s)),Xb=(e,t)=>pn(new Wb(e,t)),Yb=(e,t)=>pn(new qb(qb.DEPTH,e,t));class Qb extends qb{static get type(){return"ToonOutlinePassNode"}constructor(e,t,s,r,n){super(qb.COLOR,e,t),this.colorNode=s,this.thicknessNode=r,this.alphaNode=n,this._materialCache=new WeakMap}updateBefore(e){const{renderer:t}=e,s=t.getRenderObjectFunction();t.setRenderObjectFunction(((e,s,r,n,i,o,a,u)=>{if((i.isMeshToonMaterial||i.isMeshToonNodeMaterial)&&!1===i.wireframe){const l=this._getOutlineMaterial(i);t.renderObject(e,s,r,n,l,o,a,u)}t.renderObject(e,s,r,n,i,o,a,u)})),super.updateBefore(e),t.setRenderObjectFunction(s)}_createMaterial(){const e=new ah;e.isMeshToonOutlineMaterial=!0,e.name="Toon_Outline",e.side=x;const t=al.negate(),s=Cu.mul(qu),r=An(1),n=s.mul(Vn(Qu,1)),i=s.mul(Vn(Qu.add(t),1)),o=Ro(n.sub(i));return e.vertexNode=n.add(o.mul(this.thicknessNode).mul(n.w).mul(r)),e.colorNode=Vn(this.colorNode,this.alphaNode),e}_getOutlineMaterial(e){let t=this._materialCache.get(e);return void 0===t&&(t=this._createMaterial(),this._materialCache.set(e,t)),t}}const Zb=(t,s,r=new e(0,0,0),n=.003,i=1)=>pn(new Qb(t,s,pn(r),pn(n),pn(i))),Jb=bn((([e,t])=>e.mul(t).clamp())).setLayout({name:"linearToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),ex=bn((([e,t])=>(e=e.mul(t)).div(e.add(1)).clamp())).setLayout({name:"reinhardToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),tx=bn((([e,t])=>{const s=(e=(e=e.mul(t)).sub(.004).max(0)).mul(e.mul(6.2).add(.5)),r=e.mul(e.mul(6.2).add(1.7)).add(.06);return s.div(r).pow(2.2)})).setLayout({name:"cineonToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),sx=bn((([e])=>{const t=e.mul(e.add(.0245786)).sub(90537e-9),s=e.mul(e.add(.432951).mul(.983729)).add(.238081);return t.div(s)})),rx=bn((([e,t])=>{const s=zn(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),r=zn(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return e=e.mul(t).div(.6),e=s.mul(e),e=sx(e),(e=r.mul(e)).clamp()})).setLayout({name:"acesFilmicToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),nx=zn(Fn(1.6605,-.1246,-.0182),Fn(-.5876,1.1329,-.1006),Fn(-.0728,-.0083,1.1187)),ix=zn(Fn(.6274,.0691,.0164),Fn(.3293,.9195,.088),Fn(.0433,.0113,.8956)),ox=bn((([e])=>{const t=Fn(e).toVar(),s=Fn(t.mul(t)).toVar(),r=Fn(s.mul(s)).toVar();return An(15.5).mul(r.mul(s)).sub(ki(40.14,r.mul(t))).add(ki(31.96,r).sub(ki(6.868,s.mul(t))).add(ki(.4298,s).add(ki(.1191,t).sub(.00232))))})),ax=bn((([e,t])=>{const s=Fn(e).toVar(),r=zn(Fn(.856627153315983,.137318972929847,.11189821299995),Fn(.0951212405381588,.761241990602591,.0767994186031903),Fn(.0482516061458583,.101439036467562,.811302368396859)),n=zn(Fn(1.1271005818144368,-.1413297634984383,-.14132976349843826),Fn(-.11060664309660323,1.157823702216272,-.11060664309660294),Fn(-.016493938717834573,-.016493938717834257,1.2519364065950405)),i=An(-12.47393),o=An(4.026069);return s.mulAssign(t),s.assign(ix.mul(s)),s.assign(r.mul(s)),s.assign(Xo(s,1e-10)),s.assign(_o(s)),s.assign(s.sub(i).div(o.sub(i))),s.assign(ca(s,0,1)),s.assign(ox(s)),s.assign(n.mul(s)),s.assign(ra(Xo(Fn(0),s),Fn(2.2))),s.assign(nx.mul(s)),s.assign(ca(s,0,1)),s})).setLayout({name:"agxToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),ux=bn((([e,t])=>{const s=An(.76),r=An(.15);e=e.mul(t);const n=Ko(e.r,Ko(e.g,e.b)),i=Ta(n.lessThan(.08),n.sub(ki(6.25,n.mul(n))),.04);e.subAssign(i);const o=Xo(e.r,Xo(e.g,e.b));Nn(o.lessThan(s),(()=>e));const a=Gi(1,s),u=Gi(1,a.mul(a).div(o.add(a.sub(s))));e.mulAssign(u.div(o));const l=Gi(1,zi(1,r.mul(o.sub(u)).add(1)));return da(e,Fn(u),l)})).setLayout({name:"neutralToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});class lx extends Rr{static get type(){return"CodeNode"}constructor(e="",t=[],s=""){super("code"),this.isCodeNode=!0,this.code=e,this.language=s,this.includes=t}isGlobal(){return!0}setIncludes(e){return this.includes=e,this}getIncludes(){return this.includes}generate(e){const t=this.getIncludes(e);for(const s of t)s.build(e);const s=e.getCodeFromNode(this,this.getNodeType(e));return s.code=this.code,s.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}}const dx=fn(lx),cx=(e,t)=>dx(e,t,"js"),hx=(e,t)=>dx(e,t,"wgsl"),px=(e,t)=>dx(e,t,"glsl");class gx extends lx{static get type(){return"FunctionNode"}constructor(e="",t=[],s=""){super(e,t,s)}getNodeType(e){return this.getNodeFunction(e).type}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){const t=e.getDataFromNode(this);let s=t.nodeFunction;return void 0===s&&(s=e.parser.parseFunction(this.code),t.nodeFunction=s),s}generate(e,t){super.generate(e);const s=this.getNodeFunction(e),r=s.name,n=s.type,i=e.getCodeFromNode(this,n);""!==r&&(i.name=r);const o=e.getPropertyName(i),a=this.getNodeFunction(e).getCode(o);return i.code=a+"\n","property"===t?o:e.format(`${o}()`,n,t)}}const mx=(e,t=[],s="")=>{for(let e=0;e<t.length;e++){const s=t[e];"function"==typeof s&&(t[e]=s.functionNode)}const r=pn(new gx(e,t,s)),n=(...e)=>r.call(...e);return n.functionNode=r,n},fx=(e,t)=>mx(e,t,"glsl"),yx=(e,t)=>mx(e,t,"wgsl");class bx extends Rr{static get type(){return"ScriptableValueNode"}constructor(e=null){super(),this._value=e,this._cache=null,this.inputType=null,this.outpuType=null,this.events=new o,this.isScriptableValueNode=!0}get isScriptableOutputNode(){return null!==this.outputType}set value(e){this._value!==e&&(this._cache&&"URL"===this.inputType&&this.value.value instanceof ArrayBuffer&&(URL.revokeObjectURL(this._cache),this._cache=null),this._value=e,this.events.dispatchEvent({type:"change"}),this.refresh())}get value(){return this._value}refresh(){this.events.dispatchEvent({type:"refresh"})}getValue(){const e=this.value;if(e&&null===this._cache&&"URL"===this.inputType&&e.value instanceof ArrayBuffer)this._cache=URL.createObjectURL(new Blob([e.value]));else if(e&&null!==e.value&&void 0!==e.value&&(("URL"===this.inputType||"String"===this.inputType)&&"string"==typeof e.value||"Number"===this.inputType&&"number"==typeof e.value||"Vector2"===this.inputType&&e.value.isVector2||"Vector3"===this.inputType&&e.value.isVector3||"Vector4"===this.inputType&&e.value.isVector4||"Color"===this.inputType&&e.value.isColor||"Matrix3"===this.inputType&&e.value.isMatrix3||"Matrix4"===this.inputType&&e.value.isMatrix4))return e.value;return this._cache||e}getNodeType(e){return this.value&&this.value.isNode?this.value.getNodeType(e):"float"}setup(){return this.value&&this.value.isNode?this.value:An()}serialize(e){super.serialize(e),null!==this.value?"ArrayBuffer"===this.inputType?e.value=mr(this.value):e.value=this.value?this.value.toJSON(e.meta).uuid:null:e.value=null,e.inputType=this.inputType,e.outputType=this.outputType}deserialize(e){super.deserialize(e);let t=null;null!==e.value&&(t="ArrayBuffer"===e.inputType?fr(e.value):"Texture"===e.inputType?e.meta.textures[e.value]:e.meta.nodes[e.value]||null),this.value=t,this.inputType=e.inputType,this.outputType=e.outputType}}const xx=fn(bx);class Tx extends Map{get(e,t=null,...s){if(this.has(e))return super.get(e);if(null!==t){const r=t(...s);return this.set(e,r),r}}}class _x{constructor(e){this.scriptableNode=e}get parameters(){return this.scriptableNode.parameters}get layout(){return this.scriptableNode.getLayout()}getInputLayout(e){return this.scriptableNode.getInputLayout(e)}get(e){const t=this.parameters[e];return t?t.getValue():null}}const Nx=new Tx;class vx extends Rr{static get type(){return"ScriptableNode"}constructor(e=null,t={}){super(),this.codeNode=e,this.parameters=t,this._local=new Tx,this._output=xx(),this._outputs={},this._source=this.source,this._method=null,this._object=null,this._value=null,this._needsOutputUpdate=!0,this.onRefresh=this.onRefresh.bind(this),this.isScriptableNode=!0}get source(){return this.codeNode?this.codeNode.code:""}setLocal(e,t){return this._local.set(e,t)}getLocal(e){return this._local.get(e)}onRefresh(){this._refresh()}getInputLayout(e){for(const t of this.getLayout())if(t.inputType&&(t.id===e||t.name===e))return t}getOutputLayout(e){for(const t of this.getLayout())if(t.outputType&&(t.id===e||t.name===e))return t}setOutput(e,t){const s=this._outputs;return void 0===s[e]?s[e]=xx(t):s[e].value=t,this}getOutput(e){return this._outputs[e]}getParameter(e){return this.parameters[e]}setParameter(e,t){const s=this.parameters;return t&&t.isScriptableNode?(this.deleteParameter(e),s[e]=t,s[e].getDefaultOutput().events.addEventListener("refresh",this.onRefresh)):t&&t.isScriptableValueNode?(this.deleteParameter(e),s[e]=t,s[e].events.addEventListener("refresh",this.onRefresh)):void 0===s[e]?(s[e]=xx(t),s[e].events.addEventListener("refresh",this.onRefresh)):s[e].value=t,this}getValue(){return this.getDefaultOutput().getValue()}deleteParameter(e){let t=this.parameters[e];return t&&(t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.removeEventListener("refresh",this.onRefresh)),this}clearParameters(){for(const e of Object.keys(this.parameters))this.deleteParameter(e);return this.needsUpdate=!0,this}call(e,...t){const s=this.getObject()[e];if("function"==typeof s)return s(...t)}async callAsync(e,...t){const s=this.getObject()[e];if("function"==typeof s)return"AsyncFunction"===s.constructor.name?await s(...t):s(...t)}getNodeType(e){return this.getDefaultOutputNode().getNodeType(e)}refresh(e=null){null!==e?this.getOutput(e).refresh():this._refresh()}getObject(){if(this.needsUpdate&&this.dispose(),null!==this._object)return this._object;const e=new _x(this),t=Nx.get("THREE"),s=Nx.get("TSL"),r=this.getMethod(this.codeNode),n=[e,this._local,Nx,()=>this.refresh(),(e,t)=>this.setOutput(e,t),t,s];this._object=r(...n);const i=this._object.layout;if(i&&(!1===i.cache&&this._local.clear(),this._output.outputType=i.outputType||null,Array.isArray(i.elements)))for(const e of i.elements){const t=e.id||e.name;e.inputType&&(void 0===this.getParameter(t)&&this.setParameter(t,null),this.getParameter(t).inputType=e.inputType),e.outputType&&(void 0===this.getOutput(t)&&this.setOutput(t,null),this.getOutput(t).outputType=e.outputType)}return this._object}deserialize(e){super.deserialize(e);for(const e in this.parameters){let t=this.parameters[e];t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.addEventListener("refresh",this.onRefresh)}}getLayout(){return this.getObject().layout}getDefaultOutputNode(){const e=this.getDefaultOutput().value;return e&&e.isNode?e:An()}getDefaultOutput(){return this._exec()._output}getMethod(){if(this.needsUpdate&&this.dispose(),null!==this._method)return this._method;const e=["layout","init","main","dispose"].join(", "),t="\nreturn { ...output, "+e+" };",s="var "+e+"; var output = {};\n"+this.codeNode.code+t;return this._method=new Function(...["parameters","local","global","refresh","setOutput","THREE","TSL"],s),this._method}dispose(){null!==this._method&&(this._object&&"function"==typeof this._object.dispose&&this._object.dispose(),this._method=null,this._object=null,this._source=null,this._value=null,this._needsOutputUpdate=!0,this._output.value=null,this._outputs={})}setup(){return this.getDefaultOutputNode()}getCacheKey(e){const t=[ur(this.source),this.getDefaultOutputNode().getCacheKey(e)];for(const s in this.parameters)t.push(this.parameters[s].getCacheKey(e));return lr(t)}set needsUpdate(e){!0===e&&this.dispose()}get needsUpdate(){return this.source!==this._source}_exec(){return null===this.codeNode||(!0===this._needsOutputUpdate&&(this._value=this.call("main"),this._needsOutputUpdate=!1),this._output.value=this._value),this}_refresh(){this.needsUpdate=!0,this._exec(),this._output.refresh()}}const Sx=fn(vx);class Ax extends Rr{static get type(){return"FogNode"}constructor(e,t){super("float"),this.isFogNode=!0,this.colorNode=e,this.factorNode=t}getViewZNode(e){let t;const s=e.context.getViewZ;return void 0!==s&&(t=s(this)),(t||tl.z).negate()}setup(){return this.factorNode}}const Rx=fn(Ax);class Cx extends Ax{static get type(){return"FogRangeNode"}constructor(e,t,s){super(e),this.isFogRangeNode=!0,this.nearNode=t,this.farNode=s}setup(e){const t=this.getViewZNode(e);return ga(this.nearNode,this.farNode,t)}}const Ex=fn(Cx);class wx extends Ax{static get type(){return"FogExp2Node"}constructor(e,t){super(e),this.isFogExp2Node=!0,this.densityNode=t}setup(e){const t=this.getViewZNode(e),s=this.densityNode;return s.mul(s,t,t).negate().exp().oneMinus()}}const Mx=fn(wx);let Bx=null,Ux=null;class Fx extends Rr{static get type(){return"RangeNode"}constructor(e=An(),t=An()){super(),this.minNode=e,this.maxNode=t}getVectorLength(e){const t=e.getTypeLength(pr(this.minNode.value)),s=e.getTypeLength(pr(this.maxNode.value));return t>s?t:s}getNodeType(e){return e.object.count>1?e.getTypeFromLength(this.getVectorLength(e)):"float"}setup(e){const t=e.object;let s=null;if(t.count>1){const n=this.minNode.value,i=this.maxNode.value,o=e.getTypeLength(pr(n)),u=e.getTypeLength(pr(i));Bx=Bx||new r,Ux=Ux||new r,Bx.setScalar(0),Ux.setScalar(0),1===o?Bx.setScalar(n):n.isColor?Bx.set(n.r,n.g,n.b):Bx.set(n.x,n.y,n.z||0,n.w||0),1===u?Ux.setScalar(i):i.isColor?Ux.set(i.r,i.g,i.b):Ux.set(i.x,i.y,i.z||0,i.w||0);const l=4,d=l*t.count,c=new Float32Array(d);for(let e=0;e<d;e++){const t=e%l,s=Bx.getComponent(t),r=Ux.getComponent(t);c[e]=a.lerp(s,r,Math.random())}const h=this.getNodeType(e);if(t.count<=4096)s=Sl(c,"vec4",t.count).element(Xd).convert(h);else{const t=new R(c,4);e.geometry.setAttribute("__range"+this.id,t),s=Ya(t).convert(h)}}else s=An(0);return s}}const Px=fn(Fx);class Ix extends Rr{static get type(){return"ComputeBuiltinNode"}constructor(e,t){super(t),this._builtinName=e}getHash(e){return this.getBuiltinName(e)}getNodeType(){return this.nodeType}setBuiltinName(e){return this._builtinName=e,this}getBuiltinName(){return this._builtinName}hasBuiltin(e){e.hasBuiltin(this._builtinName)}generate(e,t){const s=this.getBuiltinName(e),r=this.getNodeType(e);return"compute"===e.shaderStage?e.format(s,r,t):(console.warn(`ComputeBuiltinNode: Compute built-in value ${s} can not be accessed in the ${e.shaderStage} stage`),e.generateConst(r))}serialize(e){super.serialize(e),e.global=this.global,e._builtinName=this._builtinName}deserialize(e){super.deserialize(e),this.global=e.global,this._builtinName=e._builtinName}}const Lx=(e,t)=>pn(new Ix(e,t)),Vx=Lx("numWorkgroups","uvec3"),Dx=Lx("workgroupId","uvec3"),Ox=Lx("localId","uvec3"),Gx=Lx("subgroupSize","uint");const kx=fn(class extends Rr{constructor(e){super(),this.scope=e}generate(e){const{scope:t}=this,{renderer:s}=e;!0===s.backend.isWebGLBackend?e.addFlowCode(`\t// ${t}Barrier \n`):e.addLineFlowCode(`${t}Barrier()`,this)}}),zx=()=>kx("workgroup").append(),$x=()=>kx("storage").append(),Hx=()=>kx("texture").append();class Wx extends Cr{constructor(e,t){super(e,t),this.isWorkgroupInfoElementNode=!0}generate(e,t){let s;const r=e.context.assign;if(s=super.generate(e),!0!==r){const r=this.getNodeType(e);s=e.format(s,r,t)}return s}}class jx extends Rr{constructor(e,t,s=0){super(t),this.bufferType=t,this.bufferCount=s,this.isWorkgroupInfoNode=!0,this.scope=e}label(e){return this.name=e,this}getHash(){return this.uuid}setScope(e){return this.scope=e,this}getInputType(){return`${this.scope}Array`}element(e){return pn(new Wx(this,e))}generate(e){return e.getScopedArray(this.name||`${this.scope}Array_${this.id}`,this.scope.toLowerCase(),this.bufferType,this.bufferCount)}}const qx=(e,t)=>pn(new jx("Workgroup",e,t));class Kx extends wr{static get type(){return"AtomicFunctionNode"}constructor(e,t,s,r=null){super("uint"),this.method=e,this.pointerNode=t,this.valueNode=s,this.storeNode=r}getInputType(e){return this.pointerNode.getNodeType(e)}getNodeType(e){return this.getInputType(e)}generate(e){const t=this.method,s=this.getNodeType(e),r=this.getInputType(e),n=this.pointerNode,i=this.valueNode,o=[];o.push(`&${n.build(e,r)}`),o.push(i.build(e,r));const a=`${e.getMethod(t,s)}( ${o.join(", ")} )`;if(null!==this.storeNode){const t=this.storeNode.build(e,r);e.addLineFlowCode(`${t} = ${a}`,this)}else e.addLineFlowCode(a,this)}}Kx.ATOMIC_LOAD="atomicLoad",Kx.ATOMIC_STORE="atomicStore",Kx.ATOMIC_ADD="atomicAdd",Kx.ATOMIC_SUB="atomicSub",Kx.ATOMIC_MAX="atomicMax",Kx.ATOMIC_MIN="atomicMin",Kx.ATOMIC_AND="atomicAnd",Kx.ATOMIC_OR="atomicOr",Kx.ATOMIC_XOR="atomicXor";const Xx=fn(Kx),Yx=(e,t,s,r)=>{const n=Xx(e,t,s,r);return n.append(),n},Qx=(e,t,s=null)=>Yx(Kx.ATOMIC_STORE,e,t,s),Zx=(e,t,s=null)=>Yx(Kx.ATOMIC_ADD,e,t,s),Jx=(e,t,s=null)=>Yx(Kx.ATOMIC_SUB,e,t,s),eT=(e,t,s=null)=>Yx(Kx.ATOMIC_MAX,e,t,s),tT=(e,t,s=null)=>Yx(Kx.ATOMIC_MIN,e,t,s),sT=(e,t,s=null)=>Yx(Kx.ATOMIC_AND,e,t,s),rT=(e,t,s=null)=>Yx(Kx.ATOMIC_OR,e,t,s),nT=(e,t,s=null)=>Yx(Kx.ATOMIC_XOR,e,t,s);let iT;function oT(e){iT=iT||new WeakMap;let t=iT.get(e);return void 0===t&&iT.set(e,t={}),t}function aT(e){const t=oT(e);return t.position||(t.position=si(new s).setGroup(Jn).onRenderUpdate(((t,s)=>s.value.setFromMatrixPosition(e.matrixWorld))))}function uT(e){const t=oT(e);return t.targetPosition||(t.targetPosition=si(new s).setGroup(Jn).onRenderUpdate(((t,s)=>s.value.setFromMatrixPosition(e.target.matrixWorld))))}function lT(e){const t=oT(e);return t.viewPosition||(t.viewPosition=si(new s).setGroup(Jn).onRenderUpdate((({camera:t},r)=>{r.value=r.value||new s,r.value.setFromMatrixPosition(e.matrixWorld),r.value.applyMatrix4(t.matrixWorldInverse)})))}const dT=e=>wu.transformDirection(aT(e).sub(uT(e))),cT=(e,t)=>{for(const s of t)if(s.isAnalyticLightNode&&s.light.id===e)return s;return null},hT=new WeakMap;class pT extends Rr{static get type(){return"LightsNode"}constructor(){super("vec3"),this.totalDiffuseNode=Fn().toVar("totalDiffuse"),this.totalSpecularNode=Fn().toVar("totalSpecular"),this.outgoingLightNode=Fn().toVar("outgoingLight"),this._lights=[],this._lightNodes=null,this._lightNodesHash=null,this.global=!0}getHash(e){if(null===this._lightNodesHash){null===this._lightNodes&&this.setupLightsNode(e);const t=[];for(const e of this._lightNodes)t.push(e.getSelf().getHash());this._lightNodesHash="lights-"+t.join(",")}return this._lightNodesHash}analyze(e){const t=e.getDataFromNode(this);for(const s of t.nodes)s.build(e)}setupLightsNode(e){const t=[],s=this._lightNodes,r=(e=>e.sort(((e,t)=>e.id-t.id)))(this._lights),n=e.renderer.library;for(const e of r)if(e.isNode)t.push(pn(e));else{let r=null;if(null!==s&&(r=cT(e.id,s)),null===r){const s=n.getLightNodeClass(e.constructor);if(null===s){console.warn(`LightsNode.setupNodeLights: Light node not found for ${e.constructor.name}`);continue}let r=null;hT.has(e)?r=hT.get(e):(r=pn(new s(e)),hT.set(e,r)),t.push(r)}}this._lightNodes=t}setupLights(e,t){for(const s of t)s.build(e)}setup(e){null===this._lightNodes&&this.setupLightsNode(e);const t=e.context,s=t.lightingModel;let r=this.outgoingLightNode;if(s){const{_lightNodes:n,totalDiffuseNode:i,totalSpecularNode:o}=this;t.outgoingLight=r;const a=e.addStack();e.getDataFromNode(this).nodes=a.nodes,s.start(t,a,e),this.setupLights(e,n),s.indirect(t,a,e);const{backdrop:u,backdropAlpha:l}=t,{directDiffuse:d,directSpecular:c,indirectDiffuse:h,indirectSpecular:p}=t.reflectedLight;let g=d.add(h);null!==u&&(g=Fn(null!==l?l.mix(g,u):u),t.material.transparent=!0),i.assign(g),o.assign(c.add(p)),r.assign(i.add(o)),s.finish(t,a,e),r=r.bypass(e.removeStack())}return r}setLights(e){return this._lights=e,this._lightNodes=null,this._lightNodesHash=null,this}getLights(){return this._lights}get hasLights(){return this._lights.length>0}}const gT=(e=[])=>pn(new pT).setLights(e),mT=Fn().toVar("shadowWorldPosition"),fT=bn((([e,t,s])=>{let r=Ju.sub(e).length();return r=r.sub(t).div(s.sub(t)),r=r.saturate(),r})),yT=bn((({depthTexture:e,shadowCoord:t})=>Nu(e,t.xy).compare(t.z))),bT=bn((({depthTexture:e,shadowCoord:t,shadow:s})=>{const r=(t,s)=>Nu(e,t).compare(s),n=Bl("mapSize","vec2",s).setGroup(Jn),i=Bl("radius","float",s).setGroup(Jn),o=wn(1).div(n),a=o.x.negate().mul(i),u=o.y.negate().mul(i),l=o.x.mul(i),d=o.y.mul(i),c=a.div(2),h=u.div(2),p=l.div(2),g=d.div(2);return Oi(r(t.xy.add(wn(a,u)),t.z),r(t.xy.add(wn(0,u)),t.z),r(t.xy.add(wn(l,u)),t.z),r(t.xy.add(wn(c,h)),t.z),r(t.xy.add(wn(0,h)),t.z),r(t.xy.add(wn(p,h)),t.z),r(t.xy.add(wn(a,0)),t.z),r(t.xy.add(wn(c,0)),t.z),r(t.xy,t.z),r(t.xy.add(wn(p,0)),t.z),r(t.xy.add(wn(l,0)),t.z),r(t.xy.add(wn(c,g)),t.z),r(t.xy.add(wn(0,g)),t.z),r(t.xy.add(wn(p,g)),t.z),r(t.xy.add(wn(a,d)),t.z),r(t.xy.add(wn(0,d)),t.z),r(t.xy.add(wn(l,d)),t.z)).mul(1/17)})),xT=bn((({depthTexture:e,shadowCoord:t,shadow:s})=>{const r=(t,s)=>Nu(e,t).compare(s),n=Bl("mapSize","vec2",s).setGroup(Jn),i=wn(1).div(n),o=i.x,a=i.y,u=t.xy,l=Co(u.mul(n).add(.5));return u.subAssign(l.mul(i)),Oi(r(u,t.z),r(u.add(wn(o,0)),t.z),r(u.add(wn(0,a)),t.z),r(u.add(i),t.z),da(r(u.add(wn(o.negate(),0)),t.z),r(u.add(wn(o.mul(2),0)),t.z),l.x),da(r(u.add(wn(o.negate(),a)),t.z),r(u.add(wn(o.mul(2),a)),t.z),l.x),da(r(u.add(wn(0,a.negate())),t.z),r(u.add(wn(0,a.mul(2))),t.z),l.y),da(r(u.add(wn(o,a.negate())),t.z),r(u.add(wn(o,a.mul(2))),t.z),l.y),da(da(r(u.add(wn(o.negate(),a.negate())),t.z),r(u.add(wn(o.mul(2),a.negate())),t.z),l.x),da(r(u.add(wn(o.negate(),a.mul(2))),t.z),r(u.add(wn(o.mul(2),a.mul(2))),t.z),l.x),l.y)).mul(1/9)})),TT=bn((({depthTexture:e,shadowCoord:t})=>{const s=An(1).toVar(),r=Nu(e).uv(t.xy).rg,n=Qo(t.z,r.x);return Nn(n.notEqual(An(1)),(()=>{const e=t.z.sub(r.x),i=Xo(0,r.y.mul(r.y));let o=i.div(i.add(e.mul(e)));o=ca(Gi(o,.3).div(.95-.3)),s.assign(ca(Xo(n,o)))})),s})),_T=bn((({samples:e,radius:t,size:s,shadowPass:r})=>{const n=An(0).toVar(),i=An(0).toVar(),o=e.lessThanEqual(An(1)).select(An(0),An(2).div(e.sub(1))),a=e.lessThanEqual(An(1)).select(An(0),An(-1));cc({start:Rn(0),end:Rn(e),type:"int",condition:"<"},(({i:e})=>{const u=a.add(An(e).mul(o)),l=r.uv(Oi(Mc.xy,wn(0,u).mul(t)).div(s)).x;n.addAssign(l),i.addAssign(l.mul(l))})),n.divAssign(e),i.divAssign(e);const u=No(i.sub(n.mul(n)));return wn(n,u)})),NT=bn((({samples:e,radius:t,size:s,shadowPass:r})=>{const n=An(0).toVar(),i=An(0).toVar(),o=e.lessThanEqual(An(1)).select(An(0),An(2).div(e.sub(1))),a=e.lessThanEqual(An(1)).select(An(0),An(-1));cc({start:Rn(0),end:Rn(e),type:"int",condition:"<"},(({i:e})=>{const u=a.add(An(e).mul(o)),l=r.uv(Oi(Mc.xy,wn(u,0).mul(t)).div(s));n.addAssign(l.x),i.addAssign(Oi(l.y.mul(l.y),l.x.mul(l.x)))})),n.divAssign(e),i.divAssign(e);const u=No(i.sub(n.mul(n)));return wn(n,u)})),vT=[yT,bT,xT,TT];let ST=null;const AT=new vf;class RT extends Rr{static get type(){return"ShadowNode"}constructor(e,t=null){super(),this.light=e,this.shadow=t||e.shadow,this.shadowMap=null,this.vsmShadowMapVertical=null,this.vsmShadowMapHorizontal=null,this.vsmMaterialVertical=null,this.vsmMaterialHorizontal=null,this.updateBeforeType=xr.RENDER,this._node=null,this.isShadowNode=!0}setupShadowFilter(e,{filterFn:t,depthTexture:s,shadowCoord:r,shadow:n}){const i=r.x.greaterThanEqual(0).and(r.x.lessThanEqual(1)).and(r.y.greaterThanEqual(0)).and(r.y.lessThanEqual(1)).and(r.z.lessThanEqual(1)),o=t({depthTexture:s,shadowCoord:r,shadow:n});return i.select(o,An(1))}setupShadowCoord(e,t){const{shadow:s}=this,{renderer:r}=e,n=Bl("bias","float",s).setGroup(Jn);let i,o=t;if(s.camera.isOrthographicCamera||!0!==r.logarithmicDepthBuffer)o=o.xyz.div(o.w),i=o.z,r.coordinateSystem===N&&(i=i.mul(2).sub(1));else{const e=o.w;o=o.xy.div(e);const t=Bl("near","float",s.camera).setGroup(Jn),r=Bl("far","float",s.camera).setGroup(Jn);i=Yc(e.negate(),t,r)}return o=Fn(o.x,o.y.oneMinus(),i.add(n)),o}getShadowFilterFn(e){return vT[e]}setupShadow(e){const{renderer:t}=e,{light:s,shadow:r}=this,n=t.shadowMap.type;if(null===ST){const e=s.isPointLight?(e=>{const t=e.shadow.camera,s=Bl("near","float",t).setGroup(Jn),r=Bl("far","float",t).setGroup(Jn),n=Lu(e);return fT(n,s,r)})(s):null;ST=new ah,ST.fragmentNode=Vn(0,0,0,1),ST.depthNode=e,ST.isShadowNodeMaterial=!0,ST.name="ShadowMaterial"}const i=new B(r.mapSize.width,r.mapSize.height);i.compareFunction=Ae;const o=e.createRenderTarget(r.mapSize.width,r.mapSize.height);if(o.depthTexture=i,r.camera.updateProjectionMatrix(),n===Re){i.compareFunction=null,this.vsmShadowMapVertical=e.createRenderTarget(r.mapSize.width,r.mapSize.height,{format:Ce,type:ye}),this.vsmShadowMapHorizontal=e.createRenderTarget(r.mapSize.width,r.mapSize.height,{format:Ce,type:ye});const t=Nu(i),s=Nu(this.vsmShadowMapVertical.texture),n=Bl("blurSamples","float",r).setGroup(Jn),o=Bl("radius","float",r).setGroup(Jn),a=Bl("mapSize","vec2",r).setGroup(Jn);let u=this.vsmMaterialVertical||(this.vsmMaterialVertical=new ah);u.fragmentNode=_T({samples:n,radius:o,size:a,shadowPass:t}).context(e.getSharedContext()),u.name="VSMVertical",u=this.vsmMaterialHorizontal||(this.vsmMaterialHorizontal=new ah),u.fragmentNode=NT({samples:n,radius:o,size:a,shadowPass:s}).context(e.getSharedContext()),u.name="VSMHorizontal"}const a=Bl("intensity","float",r).setGroup(Jn),u=Bl("normalBias","float",r).setGroup(Jn),l=si(r.matrix).setGroup(Jn).mul(mT.add(hl.mul(u))),d=this.setupShadowCoord(e,l),c=r.filterNode||this.getShadowFilterFn(t.shadowMap.type)||null;if(null===c)throw new Error("THREE.WebGPURenderer: Shadow map type not supported yet.");const h=n===Re?this.vsmShadowMapHorizontal.texture:i,p=this.setupShadowFilter(e,{filterFn:c,shadowTexture:o.texture,depthTexture:h,shadowCoord:d,shadow:r}),g=Nu(o.texture,d),m=da(1,p.rgb.mix(g,1),a.mul(g.a)).toVar();return this.shadowMap=o,this.shadow.map=o,m}setup(e){if(!1!==e.renderer.shadowMap.enabled)return bn((({material:t})=>{mT.assign(t.shadowPositionNode||Ju);let s=this._node;return null===s&&(this._node=s=this.setupShadow(e)),e.material.shadowNode&&console.warn('THREE.NodeMaterial: ".shadowNode" is deprecated. Use ".castShadowNode" instead.'),e.material.receivedShadowNode&&(s=e.material.receivedShadowNode(s)),s}))()}renderShadow(e){const{shadow:t,shadowMap:s,light:r}=this,{renderer:n,scene:i}=e;t.updateMatrices(r),s.setSize(t.mapSize.width,t.mapSize.height),n.render(i,t.camera)}updateShadow(e){const{shadowMap:t,light:s,shadow:r}=this,{renderer:n,scene:i,camera:o}=e,a=n.shadowMap.type,u=t.depthTexture.version;this._depthVersionCached=u;const l=i.overrideMaterial;i.overrideMaterial=ST,r.camera.layers.mask=o.layers.mask;const d=n.getRenderTarget(),c=n.getRenderObjectFunction();n.setRenderObjectFunction(((e,...t)=>{(!0===e.castShadow||e.receiveShadow&&a===Re)&&n.renderObject(e,...t)})),n.setRenderTarget(t),this.renderShadow(e),n.setRenderObjectFunction(c),!0!==s.isPointLight&&a===Re&&this.vsmPass(n),n.setRenderTarget(d),i.overrideMaterial=l}vsmPass(e){const{shadow:t}=this;this.vsmShadowMapVertical.setSize(t.mapSize.width,t.mapSize.height),this.vsmShadowMapHorizontal.setSize(t.mapSize.width,t.mapSize.height),e.setRenderTarget(this.vsmShadowMapVertical),AT.material=this.vsmMaterialVertical,AT.render(e),e.setRenderTarget(this.vsmShadowMapHorizontal),AT.material=this.vsmMaterialHorizontal,AT.render(e)}dispose(){this.shadowMap.dispose(),this.shadowMap=null,null!==this.vsmShadowMapVertical&&(this.vsmShadowMapVertical.dispose(),this.vsmShadowMapVertical=null,this.vsmMaterialVertical.dispose(),this.vsmMaterialVertical=null),null!==this.vsmShadowMapHorizontal&&(this.vsmShadowMapHorizontal.dispose(),this.vsmShadowMapHorizontal=null,this.vsmMaterialHorizontal.dispose(),this.vsmMaterialHorizontal=null),this.updateBeforeType=xr.NONE}updateBefore(e){const{shadow:t}=this;(t.needsUpdate||t.autoUpdate)&&(this.updateShadow(e),this.shadowMap.depthTexture.version===this._depthVersionCached&&(t.needsUpdate=!1))}}const CT=(e,t)=>pn(new RT(e,t));class ET extends Tc{static get type(){return"AnalyticLightNode"}constructor(t=null){super(),this.updateType=xr.FRAME,this.light=t,this.color=new e,this.colorNode=si(this.color).setGroup(Jn),this.baseColorNode=null,this.shadowNode=null,this.shadowColorNode=null,this.isAnalyticLightNode=!0}getCacheKey(){return dr(super.getCacheKey(),this.light.id,this.light.castShadow?1:0)}getHash(){return this.light.uuid}setupShadowNode(){return CT(this.light)}setupShadow(e){const{renderer:t}=e;if(!1===t.shadowMap.enabled)return;let s=this.shadowColorNode;if(null===s){const t=this.light.shadow.shadowNode;let r;r=void 0!==t?pn(t):this.setupShadowNode(e),this.shadowNode=r,this.shadowColorNode=s=this.colorNode.mul(r),this.baseColorNode=this.colorNode}this.colorNode=s}setup(e){this.colorNode=this.baseColorNode||this.colorNode,this.light.castShadow?e.object.receiveShadow&&this.setupShadow(e):null!==this.shadowNode&&(this.shadowNode.dispose(),this.shadowNode=null,this.shadowColorNode=null)}update(){const{light:e}=this;this.color.copy(e.color).multiplyScalar(e.intensity)}}const wT=bn((e=>{const{lightDistance:t,cutoffDistance:s,decayExponent:r}=e,n=t.pow(r).max(.01).reciprocal();return s.greaterThan(0).select(n.mul(t.div(s).pow4().oneMinus().clamp().pow2()),n)})),MT=new e,BT=bn((([e,t])=>{const s=e.toVar(),r=Po(s),n=zi(1,Xo(r.x,Xo(r.y,r.z)));r.mulAssign(n),s.mulAssign(n.mul(t.mul(2).oneMinus()));const i=wn(s.xy).toVar(),o=t.mul(1.5).oneMinus();return Nn(r.z.greaterThanEqual(o),(()=>{Nn(s.z.greaterThan(0),(()=>{i.x.assign(Gi(4,s.x))}))})).ElseIf(r.x.greaterThanEqual(o),(()=>{const e=Io(s.x);i.x.assign(s.z.mul(e).add(e.mul(2)))})).ElseIf(r.y.greaterThanEqual(o),(()=>{const e=Io(s.y);i.x.assign(s.x.add(e.mul(2)).add(2)),i.y.assign(s.z.mul(e).sub(2))})),wn(.125,.25).mul(i).add(wn(.375,.75)).flipY()})).setLayout({name:"cubeToUV",type:"vec2",inputs:[{name:"pos",type:"vec3"},{name:"texelSizeY",type:"float"}]}),UT=bn((({depthTexture:e,bd3D:t,dp:s,texelSize:r})=>Nu(e,BT(t,r.y)).compare(s))),FT=bn((({depthTexture:e,bd3D:t,dp:s,texelSize:r,shadow:n})=>{const i=Bl("radius","float",n).setGroup(Jn),o=wn(-1,1).mul(i).mul(r.y);return Nu(e,BT(t.add(o.xyy),r.y)).compare(s).add(Nu(e,BT(t.add(o.yyy),r.y)).compare(s)).add(Nu(e,BT(t.add(o.xyx),r.y)).compare(s)).add(Nu(e,BT(t.add(o.yyx),r.y)).compare(s)).add(Nu(e,BT(t,r.y)).compare(s)).add(Nu(e,BT(t.add(o.xxy),r.y)).compare(s)).add(Nu(e,BT(t.add(o.yxy),r.y)).compare(s)).add(Nu(e,BT(t.add(o.xxx),r.y)).compare(s)).add(Nu(e,BT(t.add(o.yxx),r.y)).compare(s)).mul(1/9)})),PT=bn((({filterFn:e,depthTexture:t,shadowCoord:s,shadow:r})=>{const n=s.xyz.toVar(),i=n.length(),o=si("float").onRenderUpdate((()=>r.camera.near)),a=si("float").onRenderUpdate((()=>r.camera.far)),u=Bl("bias","float",r).setGroup(Jn),l=si(r.mapSize).setGroup(Jn),d=An(1).toVar();return Nn(i.sub(a).lessThanEqual(0).and(i.sub(o).greaterThanEqual(0)),(()=>{const s=i.sub(o).div(a.sub(o)).toVar();s.addAssign(u);const c=n.normalize(),h=wn(1).div(l.mul(wn(4,2)));d.assign(e({depthTexture:t,bd3D:c,dp:s,texelSize:h,shadow:r}))})),d})),IT=new r,LT=new t,VT=new t;class DT extends RT{static get type(){return"PointShadowNode"}constructor(e,t=null){super(e,t)}getShadowFilterFn(e){return e===Ee?UT:FT}setupShadowCoord(e,t){return t}setupShadowFilter(e,{filterFn:t,shadowTexture:s,depthTexture:r,shadowCoord:n,shadow:i}){return PT({filterFn:t,shadowTexture:s,depthTexture:r,shadowCoord:n,shadow:i})}renderShadow(e){const{shadow:t,shadowMap:s,light:r}=this,{renderer:n,scene:i}=e,o=t.getFrameExtents();VT.copy(t.mapSize),VT.multiply(o),s.setSize(VT.width,VT.height),LT.copy(t.mapSize);const a=n.autoClear,u=n.getClearColor(MT),l=n.getClearAlpha();n.autoClear=!1,n.setClearColor(t.clearColor,t.clearAlpha),n.clear();const d=t.getViewportCount();for(let e=0;e<d;e++){const o=t.getViewport(e),a=LT.x*o.x,u=VT.y-LT.y-LT.y*o.y;IT.set(a,u,LT.x*o.z,LT.y*o.w),s.viewport.copy(IT),t.updateMatrices(r,e),n.render(i,t.camera)}n.autoClear=a,n.setClearColor(u,l)}}const OT=bn((({color:e,lightViewPosition:t,cutoffDistance:s,decayExponent:r},n)=>{const i=n.context.lightingModel,o=t.sub(tl),a=o.normalize(),u=o.length(),l=wT({lightDistance:u,cutoffDistance:s,decayExponent:r}),d=e.mul(l),c=n.context.reflectedLight;i.direct({lightDirection:a,lightColor:d,reflectedLight:c},n.stack,n)}));class GT extends ET{static get type(){return"PointLightNode"}constructor(e=null){super(e),this.cutoffDistanceNode=si(0).setGroup(Jn),this.decayExponentNode=si(0).setGroup(Jn)}update(e){const{light:t}=this;super.update(e),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}setupShadowNode(){return((e,t)=>pn(new DT(e,t)))(this.light)}setup(e){super.setup(e),OT({color:this.colorNode,lightViewPosition:lT(this.light),cutoffDistance:this.cutoffDistanceNode,decayExponent:this.decayExponentNode}).append()}}const kT=bn((([e=t()])=>{const t=e.mul(2),s=t.x.floor(),r=t.y.floor();return s.add(r).mod(2).sign()})),zT=bn((([e,t,s])=>{const r=An(s).toVar(),n=An(t).toVar(),i=En(e).toVar();return Ta(i,n,r)})).setLayout({name:"mx_select",type:"float",inputs:[{name:"b",type:"bool"},{name:"t",type:"float"},{name:"f",type:"float"}]}),$T=bn((([e,t])=>{const s=En(t).toVar(),r=An(e).toVar();return Ta(s,r.negate(),r)})).setLayout({name:"mx_negate_if",type:"float",inputs:[{name:"val",type:"float"},{name:"b",type:"bool"}]}),HT=bn((([e])=>{const t=An(e).toVar();return Rn(So(t))})).setLayout({name:"mx_floor",type:"int",inputs:[{name:"x",type:"float"}]}),WT=bn((([e,t])=>{const s=An(e).toVar();return t.assign(HT(s)),s.sub(An(t))})),jT=Lm([bn((([e,t,s,r,n,i])=>{const o=An(i).toVar(),a=An(n).toVar(),u=An(r).toVar(),l=An(s).toVar(),d=An(t).toVar(),c=An(e).toVar(),h=An(Gi(1,a)).toVar();return Gi(1,o).mul(c.mul(h).add(d.mul(a))).add(o.mul(l.mul(h).add(u.mul(a))))})).setLayout({name:"mx_bilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"}]}),bn((([e,t,s,r,n,i])=>{const o=An(i).toVar(),a=An(n).toVar(),u=Fn(r).toVar(),l=Fn(s).toVar(),d=Fn(t).toVar(),c=Fn(e).toVar(),h=An(Gi(1,a)).toVar();return Gi(1,o).mul(c.mul(h).add(d.mul(a))).add(o.mul(l.mul(h).add(u.mul(a))))})).setLayout({name:"mx_bilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"}]})]),qT=Lm([bn((([e,t,s,r,n,i,o,a,u,l,d])=>{const c=An(d).toVar(),h=An(l).toVar(),p=An(u).toVar(),g=An(a).toVar(),m=An(o).toVar(),f=An(i).toVar(),y=An(n).toVar(),b=An(r).toVar(),x=An(s).toVar(),T=An(t).toVar(),_=An(e).toVar(),N=An(Gi(1,p)).toVar(),v=An(Gi(1,h)).toVar();return An(Gi(1,c)).toVar().mul(v.mul(_.mul(N).add(T.mul(p))).add(h.mul(x.mul(N).add(b.mul(p))))).add(c.mul(v.mul(y.mul(N).add(f.mul(p))).add(h.mul(m.mul(N).add(g.mul(p))))))})).setLayout({name:"mx_trilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"v4",type:"float"},{name:"v5",type:"float"},{name:"v6",type:"float"},{name:"v7",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),bn((([e,t,s,r,n,i,o,a,u,l,d])=>{const c=An(d).toVar(),h=An(l).toVar(),p=An(u).toVar(),g=Fn(a).toVar(),m=Fn(o).toVar(),f=Fn(i).toVar(),y=Fn(n).toVar(),b=Fn(r).toVar(),x=Fn(s).toVar(),T=Fn(t).toVar(),_=Fn(e).toVar(),N=An(Gi(1,p)).toVar(),v=An(Gi(1,h)).toVar();return An(Gi(1,c)).toVar().mul(v.mul(_.mul(N).add(T.mul(p))).add(h.mul(x.mul(N).add(b.mul(p))))).add(c.mul(v.mul(y.mul(N).add(f.mul(p))).add(h.mul(m.mul(N).add(g.mul(p))))))})).setLayout({name:"mx_trilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"v4",type:"vec3"},{name:"v5",type:"vec3"},{name:"v6",type:"vec3"},{name:"v7",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]})]),KT=bn((([e,t,s])=>{const r=An(s).toVar(),n=An(t).toVar(),i=Cn(e).toVar(),o=Cn(i.bitAnd(Cn(7))).toVar(),a=An(zT(o.lessThan(Cn(4)),n,r)).toVar(),u=An(ki(2,zT(o.lessThan(Cn(4)),r,n))).toVar();return $T(a,En(o.bitAnd(Cn(1)))).add($T(u,En(o.bitAnd(Cn(2)))))})).setLayout({name:"mx_gradient_float_0",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"}]}),XT=bn((([e,t,s,r])=>{const n=An(r).toVar(),i=An(s).toVar(),o=An(t).toVar(),a=Cn(e).toVar(),u=Cn(a.bitAnd(Cn(15))).toVar(),l=An(zT(u.lessThan(Cn(8)),o,i)).toVar(),d=An(zT(u.lessThan(Cn(4)),i,zT(u.equal(Cn(12)).or(u.equal(Cn(14))),o,n))).toVar();return $T(l,En(u.bitAnd(Cn(1)))).add($T(d,En(u.bitAnd(Cn(2)))))})).setLayout({name:"mx_gradient_float_1",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),YT=Lm([KT,XT]),QT=bn((([e,t,s])=>{const r=An(s).toVar(),n=An(t).toVar(),i=In(e).toVar();return Fn(YT(i.x,n,r),YT(i.y,n,r),YT(i.z,n,r))})).setLayout({name:"mx_gradient_vec3_0",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"}]}),ZT=bn((([e,t,s,r])=>{const n=An(r).toVar(),i=An(s).toVar(),o=An(t).toVar(),a=In(e).toVar();return Fn(YT(a.x,o,i,n),YT(a.y,o,i,n),YT(a.z,o,i,n))})).setLayout({name:"mx_gradient_vec3_1",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),JT=Lm([QT,ZT]),e_=bn((([e])=>{const t=An(e).toVar();return ki(.6616,t)})).setLayout({name:"mx_gradient_scale2d_0",type:"float",inputs:[{name:"v",type:"float"}]}),t_=bn((([e])=>{const t=An(e).toVar();return ki(.982,t)})).setLayout({name:"mx_gradient_scale3d_0",type:"float",inputs:[{name:"v",type:"float"}]}),s_=Lm([e_,bn((([e])=>{const t=Fn(e).toVar();return ki(.6616,t)})).setLayout({name:"mx_gradient_scale2d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]})]),r_=Lm([t_,bn((([e])=>{const t=Fn(e).toVar();return ki(.982,t)})).setLayout({name:"mx_gradient_scale3d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]})]),n_=bn((([e,t])=>{const s=Rn(t).toVar(),r=Cn(e).toVar();return r.shiftLeft(s).bitOr(r.shiftRight(Rn(32).sub(s)))})).setLayout({name:"mx_rotl32",type:"uint",inputs:[{name:"x",type:"uint"},{name:"k",type:"int"}]}),i_=bn((([e,t,s])=>{e.subAssign(s),e.bitXorAssign(n_(s,Rn(4))),s.addAssign(t),t.subAssign(e),t.bitXorAssign(n_(e,Rn(6))),e.addAssign(s),s.subAssign(t),s.bitXorAssign(n_(t,Rn(8))),t.addAssign(e),e.subAssign(s),e.bitXorAssign(n_(s,Rn(16))),s.addAssign(t),t.subAssign(e),t.bitXorAssign(n_(e,Rn(19))),e.addAssign(s),s.subAssign(t),s.bitXorAssign(n_(t,Rn(4))),t.addAssign(e)})),o_=bn((([e,t,s])=>{const r=Cn(s).toVar(),n=Cn(t).toVar(),i=Cn(e).toVar();return r.bitXorAssign(n),r.subAssign(n_(n,Rn(14))),i.bitXorAssign(r),i.subAssign(n_(r,Rn(11))),n.bitXorAssign(i),n.subAssign(n_(i,Rn(25))),r.bitXorAssign(n),r.subAssign(n_(n,Rn(16))),i.bitXorAssign(r),i.subAssign(n_(r,Rn(4))),n.bitXorAssign(i),n.subAssign(n_(i,Rn(14))),r.bitXorAssign(n),r.subAssign(n_(n,Rn(24))),r})).setLayout({name:"mx_bjfinal",type:"uint",inputs:[{name:"a",type:"uint"},{name:"b",type:"uint"},{name:"c",type:"uint"}]}),a_=bn((([e])=>{const t=Cn(e).toVar();return An(t).div(An(Cn(Rn(4294967295))))})).setLayout({name:"mx_bits_to_01",type:"float",inputs:[{name:"bits",type:"uint"}]}),u_=bn((([e])=>{const t=An(e).toVar();return t.mul(t).mul(t).mul(t.mul(t.mul(6).sub(15)).add(10))})).setLayout({name:"mx_fade",type:"float",inputs:[{name:"t",type:"float"}]}),l_=Lm([bn((([e])=>{const t=Rn(e).toVar(),s=Cn(Cn(1)).toVar(),r=Cn(Cn(Rn(3735928559)).add(s.shiftLeft(Cn(2))).add(Cn(13))).toVar();return o_(r.add(Cn(t)),r,r)})).setLayout({name:"mx_hash_int_0",type:"uint",inputs:[{name:"x",type:"int"}]}),bn((([e,t])=>{const s=Rn(t).toVar(),r=Rn(e).toVar(),n=Cn(Cn(2)).toVar(),i=Cn().toVar(),o=Cn().toVar(),a=Cn().toVar();return i.assign(o.assign(a.assign(Cn(Rn(3735928559)).add(n.shiftLeft(Cn(2))).add(Cn(13))))),i.addAssign(Cn(r)),o.addAssign(Cn(s)),o_(i,o,a)})).setLayout({name:"mx_hash_int_1",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),bn((([e,t,s])=>{const r=Rn(s).toVar(),n=Rn(t).toVar(),i=Rn(e).toVar(),o=Cn(Cn(3)).toVar(),a=Cn().toVar(),u=Cn().toVar(),l=Cn().toVar();return a.assign(u.assign(l.assign(Cn(Rn(3735928559)).add(o.shiftLeft(Cn(2))).add(Cn(13))))),a.addAssign(Cn(i)),u.addAssign(Cn(n)),l.addAssign(Cn(r)),o_(a,u,l)})).setLayout({name:"mx_hash_int_2",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),bn((([e,t,s,r])=>{const n=Rn(r).toVar(),i=Rn(s).toVar(),o=Rn(t).toVar(),a=Rn(e).toVar(),u=Cn(Cn(4)).toVar(),l=Cn().toVar(),d=Cn().toVar(),c=Cn().toVar();return l.assign(d.assign(c.assign(Cn(Rn(3735928559)).add(u.shiftLeft(Cn(2))).add(Cn(13))))),l.addAssign(Cn(a)),d.addAssign(Cn(o)),c.addAssign(Cn(i)),i_(l,d,c),l.addAssign(Cn(n)),o_(l,d,c)})).setLayout({name:"mx_hash_int_3",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"}]}),bn((([e,t,s,r,n])=>{const i=Rn(n).toVar(),o=Rn(r).toVar(),a=Rn(s).toVar(),u=Rn(t).toVar(),l=Rn(e).toVar(),d=Cn(Cn(5)).toVar(),c=Cn().toVar(),h=Cn().toVar(),p=Cn().toVar();return c.assign(h.assign(p.assign(Cn(Rn(3735928559)).add(d.shiftLeft(Cn(2))).add(Cn(13))))),c.addAssign(Cn(l)),h.addAssign(Cn(u)),p.addAssign(Cn(a)),i_(c,h,p),c.addAssign(Cn(o)),h.addAssign(Cn(i)),o_(c,h,p)})).setLayout({name:"mx_hash_int_4",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"},{name:"yy",type:"int"}]})]),d_=Lm([bn((([e,t])=>{const s=Rn(t).toVar(),r=Rn(e).toVar(),n=Cn(l_(r,s)).toVar(),i=In().toVar();return i.x.assign(n.bitAnd(Rn(255))),i.y.assign(n.shiftRight(Rn(8)).bitAnd(Rn(255))),i.z.assign(n.shiftRight(Rn(16)).bitAnd(Rn(255))),i})).setLayout({name:"mx_hash_vec3_0",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),bn((([e,t,s])=>{const r=Rn(s).toVar(),n=Rn(t).toVar(),i=Rn(e).toVar(),o=Cn(l_(i,n,r)).toVar(),a=In().toVar();return a.x.assign(o.bitAnd(Rn(255))),a.y.assign(o.shiftRight(Rn(8)).bitAnd(Rn(255))),a.z.assign(o.shiftRight(Rn(16)).bitAnd(Rn(255))),a})).setLayout({name:"mx_hash_vec3_1",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]})]),c_=Lm([bn((([e])=>{const t=wn(e).toVar(),s=Rn().toVar(),r=Rn().toVar(),n=An(WT(t.x,s)).toVar(),i=An(WT(t.y,r)).toVar(),o=An(u_(n)).toVar(),a=An(u_(i)).toVar(),u=An(jT(YT(l_(s,r),n,i),YT(l_(s.add(Rn(1)),r),n.sub(1),i),YT(l_(s,r.add(Rn(1))),n,i.sub(1)),YT(l_(s.add(Rn(1)),r.add(Rn(1))),n.sub(1),i.sub(1)),o,a)).toVar();return s_(u)})).setLayout({name:"mx_perlin_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"}]}),bn((([e])=>{const t=Fn(e).toVar(),s=Rn().toVar(),r=Rn().toVar(),n=Rn().toVar(),i=An(WT(t.x,s)).toVar(),o=An(WT(t.y,r)).toVar(),a=An(WT(t.z,n)).toVar(),u=An(u_(i)).toVar(),l=An(u_(o)).toVar(),d=An(u_(a)).toVar(),c=An(qT(YT(l_(s,r,n),i,o,a),YT(l_(s.add(Rn(1)),r,n),i.sub(1),o,a),YT(l_(s,r.add(Rn(1)),n),i,o.sub(1),a),YT(l_(s.add(Rn(1)),r.add(Rn(1)),n),i.sub(1),o.sub(1),a),YT(l_(s,r,n.add(Rn(1))),i,o,a.sub(1)),YT(l_(s.add(Rn(1)),r,n.add(Rn(1))),i.sub(1),o,a.sub(1)),YT(l_(s,r.add(Rn(1)),n.add(Rn(1))),i,o.sub(1),a.sub(1)),YT(l_(s.add(Rn(1)),r.add(Rn(1)),n.add(Rn(1))),i.sub(1),o.sub(1),a.sub(1)),u,l,d)).toVar();return r_(c)})).setLayout({name:"mx_perlin_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"}]})]),h_=Lm([bn((([e])=>{const t=wn(e).toVar(),s=Rn().toVar(),r=Rn().toVar(),n=An(WT(t.x,s)).toVar(),i=An(WT(t.y,r)).toVar(),o=An(u_(n)).toVar(),a=An(u_(i)).toVar(),u=Fn(jT(JT(d_(s,r),n,i),JT(d_(s.add(Rn(1)),r),n.sub(1),i),JT(d_(s,r.add(Rn(1))),n,i.sub(1)),JT(d_(s.add(Rn(1)),r.add(Rn(1))),n.sub(1),i.sub(1)),o,a)).toVar();return s_(u)})).setLayout({name:"mx_perlin_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),bn((([e])=>{const t=Fn(e).toVar(),s=Rn().toVar(),r=Rn().toVar(),n=Rn().toVar(),i=An(WT(t.x,s)).toVar(),o=An(WT(t.y,r)).toVar(),a=An(WT(t.z,n)).toVar(),u=An(u_(i)).toVar(),l=An(u_(o)).toVar(),d=An(u_(a)).toVar(),c=Fn(qT(JT(d_(s,r,n),i,o,a),JT(d_(s.add(Rn(1)),r,n),i.sub(1),o,a),JT(d_(s,r.add(Rn(1)),n),i,o.sub(1),a),JT(d_(s.add(Rn(1)),r.add(Rn(1)),n),i.sub(1),o.sub(1),a),JT(d_(s,r,n.add(Rn(1))),i,o,a.sub(1)),JT(d_(s.add(Rn(1)),r,n.add(Rn(1))),i.sub(1),o,a.sub(1)),JT(d_(s,r.add(Rn(1)),n.add(Rn(1))),i,o.sub(1),a.sub(1)),JT(d_(s.add(Rn(1)),r.add(Rn(1)),n.add(Rn(1))),i.sub(1),o.sub(1),a.sub(1)),u,l,d)).toVar();return r_(c)})).setLayout({name:"mx_perlin_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"}]})]),p_=Lm([bn((([e])=>{const t=An(e).toVar(),s=Rn(HT(t)).toVar();return a_(l_(s))})).setLayout({name:"mx_cell_noise_float_0",type:"float",inputs:[{name:"p",type:"float"}]}),bn((([e])=>{const t=wn(e).toVar(),s=Rn(HT(t.x)).toVar(),r=Rn(HT(t.y)).toVar();return a_(l_(s,r))})).setLayout({name:"mx_cell_noise_float_1",type:"float",inputs:[{name:"p",type:"vec2"}]}),bn((([e])=>{const t=Fn(e).toVar(),s=Rn(HT(t.x)).toVar(),r=Rn(HT(t.y)).toVar(),n=Rn(HT(t.z)).toVar();return a_(l_(s,r,n))})).setLayout({name:"mx_cell_noise_float_2",type:"float",inputs:[{name:"p",type:"vec3"}]}),bn((([e])=>{const t=Vn(e).toVar(),s=Rn(HT(t.x)).toVar(),r=Rn(HT(t.y)).toVar(),n=Rn(HT(t.z)).toVar(),i=Rn(HT(t.w)).toVar();return a_(l_(s,r,n,i))})).setLayout({name:"mx_cell_noise_float_3",type:"float",inputs:[{name:"p",type:"vec4"}]})]),g_=Lm([bn((([e])=>{const t=An(e).toVar(),s=Rn(HT(t)).toVar();return Fn(a_(l_(s,Rn(0))),a_(l_(s,Rn(1))),a_(l_(s,Rn(2))))})).setLayout({name:"mx_cell_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"float"}]}),bn((([e])=>{const t=wn(e).toVar(),s=Rn(HT(t.x)).toVar(),r=Rn(HT(t.y)).toVar();return Fn(a_(l_(s,r,Rn(0))),a_(l_(s,r,Rn(1))),a_(l_(s,r,Rn(2))))})).setLayout({name:"mx_cell_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),bn((([e])=>{const t=Fn(e).toVar(),s=Rn(HT(t.x)).toVar(),r=Rn(HT(t.y)).toVar(),n=Rn(HT(t.z)).toVar();return Fn(a_(l_(s,r,n,Rn(0))),a_(l_(s,r,n,Rn(1))),a_(l_(s,r,n,Rn(2))))})).setLayout({name:"mx_cell_noise_vec3_2",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),bn((([e])=>{const t=Vn(e).toVar(),s=Rn(HT(t.x)).toVar(),r=Rn(HT(t.y)).toVar(),n=Rn(HT(t.z)).toVar(),i=Rn(HT(t.w)).toVar();return Fn(a_(l_(s,r,n,i,Rn(0))),a_(l_(s,r,n,i,Rn(1))),a_(l_(s,r,n,i,Rn(2))))})).setLayout({name:"mx_cell_noise_vec3_3",type:"vec3",inputs:[{name:"p",type:"vec4"}]})]),m_=bn((([e,t,s,r])=>{const n=An(r).toVar(),i=An(s).toVar(),o=Rn(t).toVar(),a=Fn(e).toVar(),u=An(0).toVar(),l=An(1).toVar();return cc(o,(()=>{u.addAssign(l.mul(c_(a))),l.mulAssign(n),a.mulAssign(i)})),u})).setLayout({name:"mx_fractal_noise_float",type:"float",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),f_=bn((([e,t,s,r])=>{const n=An(r).toVar(),i=An(s).toVar(),o=Rn(t).toVar(),a=Fn(e).toVar(),u=Fn(0).toVar(),l=An(1).toVar();return cc(o,(()=>{u.addAssign(l.mul(h_(a))),l.mulAssign(n),a.mulAssign(i)})),u})).setLayout({name:"mx_fractal_noise_vec3",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),y_=bn((([e,t,s,r])=>{const n=An(r).toVar(),i=An(s).toVar(),o=Rn(t).toVar(),a=Fn(e).toVar();return wn(m_(a,o,i,n),m_(a.add(Fn(Rn(19),Rn(193),Rn(17))),o,i,n))})).setLayout({name:"mx_fractal_noise_vec2",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),b_=bn((([e,t,s,r])=>{const n=An(r).toVar(),i=An(s).toVar(),o=Rn(t).toVar(),a=Fn(e).toVar(),u=Fn(f_(a,o,i,n)).toVar(),l=An(m_(a.add(Fn(Rn(19),Rn(193),Rn(17))),o,i,n)).toVar();return Vn(u,l)})).setLayout({name:"mx_fractal_noise_vec4",type:"vec4",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),x_=Lm([bn((([e,t,s,r,n,i,o])=>{const a=Rn(o).toVar(),u=An(i).toVar(),l=Rn(n).toVar(),d=Rn(r).toVar(),c=Rn(s).toVar(),h=Rn(t).toVar(),p=wn(e).toVar(),g=Fn(g_(wn(h.add(d),c.add(l)))).toVar(),m=wn(g.x,g.y).toVar();m.subAssign(.5),m.mulAssign(u),m.addAssign(.5);const f=wn(wn(An(h),An(c)).add(m)).toVar(),y=wn(f.sub(p)).toVar();return Nn(a.equal(Rn(2)),(()=>Po(y.x).add(Po(y.y)))),Nn(a.equal(Rn(3)),(()=>Xo(Po(y.x),Po(y.y)))),ta(y,y)})).setLayout({name:"mx_worley_distance_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),bn((([e,t,s,r,n,i,o,a,u])=>{const l=Rn(u).toVar(),d=An(a).toVar(),c=Rn(o).toVar(),h=Rn(i).toVar(),p=Rn(n).toVar(),g=Rn(r).toVar(),m=Rn(s).toVar(),f=Rn(t).toVar(),y=Fn(e).toVar(),b=Fn(g_(Fn(f.add(p),m.add(h),g.add(c)))).toVar();b.subAssign(.5),b.mulAssign(d),b.addAssign(.5);const x=Fn(Fn(An(f),An(m),An(g)).add(b)).toVar(),T=Fn(x.sub(y)).toVar();return Nn(l.equal(Rn(2)),(()=>Po(T.x).add(Po(T.y)).add(Po(T.z)))),Nn(l.equal(Rn(3)),(()=>Xo(Xo(Po(T.x),Po(T.y)),Po(T.z)))),ta(T,T)})).setLayout({name:"mx_worley_distance_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"zoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),T_=bn((([e,t,s])=>{const r=Rn(s).toVar(),n=An(t).toVar(),i=wn(e).toVar(),o=Rn().toVar(),a=Rn().toVar(),u=wn(WT(i.x,o),WT(i.y,a)).toVar(),l=An(1e6).toVar();return cc({start:-1,end:Rn(1),name:"x",condition:"<="},(({x:e})=>{cc({start:-1,end:Rn(1),name:"y",condition:"<="},(({y:t})=>{const s=An(x_(u,e,t,o,a,n,r)).toVar();l.assign(Ko(l,s))}))})),Nn(r.equal(Rn(0)),(()=>{l.assign(No(l))})),l})).setLayout({name:"mx_worley_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),__=bn((([e,t,s])=>{const r=Rn(s).toVar(),n=An(t).toVar(),i=wn(e).toVar(),o=Rn().toVar(),a=Rn().toVar(),u=wn(WT(i.x,o),WT(i.y,a)).toVar(),l=wn(1e6,1e6).toVar();return cc({start:-1,end:Rn(1),name:"x",condition:"<="},(({x:e})=>{cc({start:-1,end:Rn(1),name:"y",condition:"<="},(({y:t})=>{const s=An(x_(u,e,t,o,a,n,r)).toVar();Nn(s.lessThan(l.x),(()=>{l.y.assign(l.x),l.x.assign(s)})).ElseIf(s.lessThan(l.y),(()=>{l.y.assign(s)}))}))})),Nn(r.equal(Rn(0)),(()=>{l.assign(No(l))})),l})).setLayout({name:"mx_worley_noise_vec2_0",type:"vec2",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),N_=bn((([e,t,s])=>{const r=Rn(s).toVar(),n=An(t).toVar(),i=wn(e).toVar(),o=Rn().toVar(),a=Rn().toVar(),u=wn(WT(i.x,o),WT(i.y,a)).toVar(),l=Fn(1e6,1e6,1e6).toVar();return cc({start:-1,end:Rn(1),name:"x",condition:"<="},(({x:e})=>{cc({start:-1,end:Rn(1),name:"y",condition:"<="},(({y:t})=>{const s=An(x_(u,e,t,o,a,n,r)).toVar();Nn(s.lessThan(l.x),(()=>{l.z.assign(l.y),l.y.assign(l.x),l.x.assign(s)})).ElseIf(s.lessThan(l.y),(()=>{l.z.assign(l.y),l.y.assign(s)})).ElseIf(s.lessThan(l.z),(()=>{l.z.assign(s)}))}))})),Nn(r.equal(Rn(0)),(()=>{l.assign(No(l))})),l})).setLayout({name:"mx_worley_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),v_=Lm([T_,bn((([e,t,s])=>{const r=Rn(s).toVar(),n=An(t).toVar(),i=Fn(e).toVar(),o=Rn().toVar(),a=Rn().toVar(),u=Rn().toVar(),l=Fn(WT(i.x,o),WT(i.y,a),WT(i.z,u)).toVar(),d=An(1e6).toVar();return cc({start:-1,end:Rn(1),name:"x",condition:"<="},(({x:e})=>{cc({start:-1,end:Rn(1),name:"y",condition:"<="},(({y:t})=>{cc({start:-1,end:Rn(1),name:"z",condition:"<="},(({z:s})=>{const i=An(x_(l,e,t,s,o,a,u,n,r)).toVar();d.assign(Ko(d,i))}))}))})),Nn(r.equal(Rn(0)),(()=>{d.assign(No(d))})),d})).setLayout({name:"mx_worley_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),S_=Lm([__,bn((([e,t,s])=>{const r=Rn(s).toVar(),n=An(t).toVar(),i=Fn(e).toVar(),o=Rn().toVar(),a=Rn().toVar(),u=Rn().toVar(),l=Fn(WT(i.x,o),WT(i.y,a),WT(i.z,u)).toVar(),d=wn(1e6,1e6).toVar();return cc({start:-1,end:Rn(1),name:"x",condition:"<="},(({x:e})=>{cc({start:-1,end:Rn(1),name:"y",condition:"<="},(({y:t})=>{cc({start:-1,end:Rn(1),name:"z",condition:"<="},(({z:s})=>{const i=An(x_(l,e,t,s,o,a,u,n,r)).toVar();Nn(i.lessThan(d.x),(()=>{d.y.assign(d.x),d.x.assign(i)})).ElseIf(i.lessThan(d.y),(()=>{d.y.assign(i)}))}))}))})),Nn(r.equal(Rn(0)),(()=>{d.assign(No(d))})),d})).setLayout({name:"mx_worley_noise_vec2_1",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),A_=Lm([N_,bn((([e,t,s])=>{const r=Rn(s).toVar(),n=An(t).toVar(),i=Fn(e).toVar(),o=Rn().toVar(),a=Rn().toVar(),u=Rn().toVar(),l=Fn(WT(i.x,o),WT(i.y,a),WT(i.z,u)).toVar(),d=Fn(1e6,1e6,1e6).toVar();return cc({start:-1,end:Rn(1),name:"x",condition:"<="},(({x:e})=>{cc({start:-1,end:Rn(1),name:"y",condition:"<="},(({y:t})=>{cc({start:-1,end:Rn(1),name:"z",condition:"<="},(({z:s})=>{const i=An(x_(l,e,t,s,o,a,u,n,r)).toVar();Nn(i.lessThan(d.x),(()=>{d.z.assign(d.y),d.y.assign(d.x),d.x.assign(i)})).ElseIf(i.lessThan(d.y),(()=>{d.z.assign(d.y),d.y.assign(i)})).ElseIf(i.lessThan(d.z),(()=>{d.z.assign(i)}))}))}))})),Nn(r.equal(Rn(0)),(()=>{d.assign(No(d))})),d})).setLayout({name:"mx_worley_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),R_=bn((([e])=>{const t=e.y,s=e.z,r=Fn().toVar();return Nn(t.lessThan(1e-4),(()=>{r.assign(Fn(s,s,s))})).Else((()=>{let n=e.x;n=n.sub(So(n)).mul(6).toVar();const i=Rn($o(n)),o=n.sub(An(i)),a=s.mul(t.oneMinus()),u=s.mul(t.mul(o).oneMinus()),l=s.mul(t.mul(o.oneMinus()).oneMinus());Nn(i.equal(Rn(0)),(()=>{r.assign(Fn(s,l,a))})).ElseIf(i.equal(Rn(1)),(()=>{r.assign(Fn(u,s,a))})).ElseIf(i.equal(Rn(2)),(()=>{r.assign(Fn(a,s,l))})).ElseIf(i.equal(Rn(3)),(()=>{r.assign(Fn(a,u,s))})).ElseIf(i.equal(Rn(4)),(()=>{r.assign(Fn(l,a,s))})).Else((()=>{r.assign(Fn(s,a,u))}))})),r})).setLayout({name:"mx_hsvtorgb",type:"vec3",inputs:[{name:"hsv",type:"vec3"}]}),C_=bn((([e])=>{const t=Fn(e).toVar(),s=An(t.x).toVar(),r=An(t.y).toVar(),n=An(t.z).toVar(),i=An(Ko(s,Ko(r,n))).toVar(),o=An(Xo(s,Xo(r,n))).toVar(),a=An(o.sub(i)).toVar(),u=An().toVar(),l=An().toVar(),d=An().toVar();return d.assign(o),Nn(o.greaterThan(0),(()=>{l.assign(a.div(o))})).Else((()=>{l.assign(0)})),Nn(l.lessThanEqual(0),(()=>{u.assign(0)})).Else((()=>{Nn(s.greaterThanEqual(o),(()=>{u.assign(r.sub(n).div(a))})).ElseIf(r.greaterThanEqual(o),(()=>{u.assign(Oi(2,n.sub(s).div(a)))})).Else((()=>{u.assign(Oi(4,s.sub(r).div(a)))})),u.mulAssign(1/6),Nn(u.lessThan(0),(()=>{u.addAssign(1)}))})),Fn(u,l,d)})).setLayout({name:"mx_rgbtohsv",type:"vec3",inputs:[{name:"c",type:"vec3"}]}),E_=bn((([e])=>{const t=Fn(e).toVar(),s=Ln(qi(t,Fn(.04045))).toVar(),r=Fn(t.div(12.92)).toVar(),n=Fn(ra(Xo(t.add(Fn(.055)),Fn(0)).div(1.055),Fn(2.4))).toVar();return da(r,n,s)})).setLayout({name:"mx_srgb_texture_to_lin_rec709",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),w_=(e,t)=>{e=An(e),t=An(t);const s=wn(t.dFdx(),t.dFdy()).length().mul(.7071067811865476);return ga(e.sub(s),e.add(s),t)},M_=(e,t,s,r)=>da(e,t,s[r].clamp()),B_=(e,t,s=fu())=>M_(e,t,s,"x"),U_=(e,t,s=fu())=>M_(e,t,s,"y"),F_=(e,t,s,r,n)=>da(e,t,w_(s,r[n])),P_=(e,t,s,r=fu())=>F_(e,t,s,r,"x"),I_=(e,t,s,r=fu())=>F_(e,t,s,r,"y"),L_=(e=1,t=0,s=fu())=>s.mul(e).add(t),V_=(e,t=1)=>(e=An(e)).abs().pow(t).mul(e.sign()),D_=(e,t=1,s=.5)=>An(e).sub(s).mul(t).add(s),O_=(e=fu(),t=1,s=0)=>c_(e.convert("vec2|vec3")).mul(t).add(s),G_=(e=fu(),t=1,s=0)=>h_(e.convert("vec2|vec3")).mul(t).add(s),k_=(e=fu(),t=1,s=0)=>{e=e.convert("vec2|vec3");return Vn(h_(e),c_(e.add(wn(19,73)))).mul(t).add(s)},z_=(e=fu(),t=1)=>v_(e.convert("vec2|vec3"),t,Rn(1)),$_=(e=fu(),t=1)=>S_(e.convert("vec2|vec3"),t,Rn(1)),H_=(e=fu(),t=1)=>A_(e.convert("vec2|vec3"),t,Rn(1)),W_=(e=fu())=>p_(e.convert("vec2|vec3")),j_=(e=fu(),t=3,s=2,r=.5,n=1)=>m_(e,Rn(t),s,r).mul(n),q_=(e=fu(),t=3,s=2,r=.5,n=1)=>y_(e,Rn(t),s,r).mul(n),K_=(e=fu(),t=3,s=2,r=.5,n=1)=>f_(e,Rn(t),s,r).mul(n),X_=(e=fu(),t=3,s=2,r=.5,n=1)=>b_(e,Rn(t),s,r).mul(n),Y_=bn((([e,t,s])=>{const r=Ro(e).toVar("nDir"),n=Gi(An(.5).mul(t.sub(s)),Ju).div(r).toVar("rbmax"),i=Gi(An(-.5).mul(t.sub(s)),Ju).div(r).toVar("rbmin"),o=Fn().toVar("rbminmax");o.x=r.x.greaterThan(An(0)).select(n.x,i.x),o.y=r.y.greaterThan(An(0)).select(n.y,i.y),o.z=r.z.greaterThan(An(0)).select(n.z,i.z);const a=Ko(Ko(o.x,o.y),o.z).toVar("correction");return Ju.add(r.mul(a)).toVar("boxIntersection").sub(s)})),Q_=bn((([e,t])=>{const s=e.x,r=e.y,n=e.z;let i=t.element(0).mul(.886227);return i=i.add(t.element(1).mul(1.023328).mul(r)),i=i.add(t.element(2).mul(1.023328).mul(n)),i=i.add(t.element(3).mul(1.023328).mul(s)),i=i.add(t.element(4).mul(.858086).mul(s).mul(r)),i=i.add(t.element(5).mul(.858086).mul(r).mul(n)),i=i.add(t.element(6).mul(n.mul(n).mul(.743125).sub(.247708))),i=i.add(t.element(7).mul(.858086).mul(s).mul(n)),i=i.add(t.element(8).mul(.429043).mul(ki(s,s).sub(ki(r,r)))),i})),Z_=new mm;class J_ extends Gg{constructor(e,t){super(),this.renderer=e,this.nodes=t}update(e,t,s){const r=this.renderer,n=this.nodes.getBackgroundNode(e)||e.background;let i=!1;if(null===n)r._clearColor.getRGB(Z_,Se),Z_.a=r._clearColor.a;else if(!0===n.isColor)n.getRGB(Z_,Se),Z_.a=1,i=!0;else if(!0===n.isNode){const s=this.get(e),i=n;Z_.copy(r._clearColor);let o=s.backgroundMesh;if(void 0===o){const e=va(Vn(i).mul(Of),{getUV:()=>Gf.mul(dl),getTextureLevel:()=>Df});let t=jd();t=t.setZ(t.w);const r=new ah;r.name="Background.material",r.side=x,r.depthTest=!1,r.depthWrite=!1,r.fog=!1,r.lights=!1,r.vertexNode=t,r.colorNode=e,s.backgroundMeshNode=e,s.backgroundMesh=o=new k(new we(1,32,32),r),o.frustumCulled=!1,o.name="Background.mesh",o.onBeforeRender=function(e,t,s){this.matrixWorld.copyPosition(s.matrixWorld)}}const a=i.getCacheKey();s.backgroundCacheKey!==a&&(s.backgroundMeshNode.node=Vn(i).mul(Of),s.backgroundMeshNode.needsUpdate=!0,o.material.needsUpdate=!0,s.backgroundCacheKey=a),t.unshift(o,o.geometry,o.material,0,0,null,null)}else console.error("THREE.Renderer: Unsupported background configuration.",n);if(!0===r.autoClear||!0===i){const e=s.clearColorValue;e.r=Z_.r,e.g=Z_.g,e.b=Z_.b,e.a=Z_.a,!0!==r.backend.isWebGLBackend&&!0!==r.alpha||(e.r*=e.a,e.g*=e.a,e.b*=e.a),s.depthClearValue=r._clearDepth,s.stencilClearValue=r._clearStencil,s.clearColor=!0===r.autoClearColor,s.clearDepth=!0===r.autoClearDepth,s.clearStencil=!0===r.autoClearStencil}else s.clearColor=!1,s.clearDepth=!1,s.clearStencil=!1}}let eN=0;class tN{constructor(e="",t=[],s=0,r=[]){this.name=e,this.bindings=t,this.index=s,this.bindingsReference=r,this.id=eN++}}class sN{constructor(e,t,s,r,n,i,o,a,u,l=[]){this.vertexShader=e,this.fragmentShader=t,this.computeShader=s,this.transforms=l,this.nodeAttributes=r,this.bindings=n,this.updateNodes=i,this.updateBeforeNodes=o,this.updateAfterNodes=a,this.monitor=u,this.usedTimes=0}createBindings(){const e=[];for(const t of this.bindings){if(!0!==t.bindings[0].groupNode.shared){const s=new tN(t.name,[],t.index,t);e.push(s);for(const e of t.bindings)s.bindings.push(e.clone())}else e.push(t)}return e}}class rN{constructor(e,t,s=null){this.isNodeAttribute=!0,this.name=e,this.type=t,this.node=s}}class nN{constructor(e,t,s){this.isNodeUniform=!0,this.name=e,this.type=t,this.node=s.getSelf()}get value(){return this.node.value}set value(e){this.node.value=e}get id(){return this.node.id}get groupNode(){return this.node.groupNode}}class iN{constructor(e,t){this.isNodeVar=!0,this.name=e,this.type=t}}class oN extends iN{constructor(e,t){super(e,t),this.needsInterpolation=!1,this.isNodeVarying=!0}}class aN{constructor(e,t,s=""){this.name=e,this.type=t,this.code=s,Object.defineProperty(this,"isNodeCode",{value:!0})}}let uN=0;class lN{constructor(e=null){this.id=uN++,this.nodesData=new WeakMap,this.parent=e}getData(e){let t=this.nodesData.get(e);return void 0===t&&null!==this.parent&&(t=this.parent.getData(e)),t}setData(e,t){this.nodesData.set(e,t)}}class dN{constructor(e,t){this.name=e,this.value=t,this.boundary=0,this.itemSize=0,this.offset=0}setValue(e){this.value=e}getValue(){return this.value}}class cN extends dN{constructor(e,t=0){super(e,t),this.isNumberUniform=!0,this.boundary=4,this.itemSize=1}}class hN extends dN{constructor(e,s=new t){super(e,s),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class pN extends dN{constructor(e,t=new s){super(e,t),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class gN extends dN{constructor(e,t=new r){super(e,t),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class mN extends dN{constructor(t,s=new e){super(t,s),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class fN extends dN{constructor(e,t=new n){super(e,t),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class yN extends dN{constructor(e,t=new i){super(e,t),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class bN extends cN{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class xN extends hN{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class TN extends pN{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class _N extends gN{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class NN extends mN{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class vN extends fN{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class SN extends yN{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}const AN=[.125,.215,.35,.446,.526,.582],RN=20,CN=new xe(-1,1,1,-1,0,1),EN=new Ue(90,1),wN=new e;let MN=null,BN=0,UN=0;const FN=(1+Math.sqrt(5))/2,PN=1/FN,IN=[new s(-FN,PN,0),new s(FN,PN,0),new s(-PN,0,FN),new s(PN,0,FN),new s(0,FN,-PN),new s(0,FN,PN),new s(-1,1,-1),new s(1,1,-1),new s(-1,1,1),new s(1,1,1)],LN=[3,1,5,0,4,2],VN=qp(fu(),mu("faceIndex")).normalize(),DN=Fn(VN.x,VN.y.negate(),VN.z);class ON{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._lodMeshes=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._backgroundBox=null}fromScene(e,t=0,s=.1,r=100){MN=this._renderer.getRenderTarget(),BN=this._renderer.getActiveCubeFace(),UN=this._renderer.getActiveMipmapLevel(),this._setSize(256);const n=this._allocateTargets();return n.depthBuffer=!0,this._sceneToCubeUV(e,s,r,n),t>0&&this._blur(n,0,0,t),this._applyPMREM(n),this._cleanup(n),n}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}async compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=$N(),await this._compileMaterial(this._cubemapMaterial))}async compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=HN(),await this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose(),null!==this._backgroundBox&&(this._backgroundBox.geometry.dispose(),this._backgroundBox.material.dispose())}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(MN,BN,UN),e.scissorTest=!1,kN(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===T||e.mapping===_?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),MN=this._renderer.getRenderTarget(),BN=this._renderer.getActiveCubeFace(),UN=this._renderer.getActiveMipmapLevel();const s=t||this._allocateTargets();return this._textureToCubeUV(e,s),this._applyPMREM(s),this._cleanup(s),s}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,r={magFilter:$,minFilter:$,generateMipmaps:!1,type:ye,format:Fe,colorSpace:Se},n=GN(e,t,r);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=GN(e,t,r);const{_lodMax:n}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas,lodMeshes:this._lodMeshes}=function(e){const t=[],s=[],r=[],n=[];let i=e;const o=e-4+1+AN.length;for(let a=0;a<o;a++){const o=Math.pow(2,i);s.push(o);let u=1/o;a>e-4?u=AN[a-e+4-1]:0===a&&(u=0),r.push(u);const l=1/(o-2),d=-l,c=1+l,h=[d,d,c,d,c,c,d,d,c,c,d,c],p=6,g=6,m=3,f=2,y=1,b=new Float32Array(m*g*p),x=new Float32Array(f*g*p),T=new Float32Array(y*g*p);for(let e=0;e<p;e++){const t=e%3*2/3-1,s=e>2?0:-1,r=[t,s,0,t+2/3,s,0,t+2/3,s+1,0,t,s,0,t+2/3,s+1,0,t,s+1,0],n=LN[e];b.set(r,m*g*n),x.set(h,f*g*n);const i=[n,n,n,n,n,n];T.set(i,y*g*n)}const _=new Te;_.setAttribute("position",new Me(b,m)),_.setAttribute("uv",new Me(x,f)),_.setAttribute("faceIndex",new Me(T,y)),t.push(_),n.push(new k(_,null)),i>4&&i--}return{lodPlanes:t,sizeLods:s,sigmas:r,lodMeshes:n}}(n)),this._blurMaterial=function(e,t,r){const n=Cl(new Array(RN).fill(0)),i=si(new s(0,1,0)),o=si(0),a=An(RN),u=si(0),l=si(1),d=Nu(null),c=si(0),h=An(1/t),p=An(1/r),g=An(e),m={n:a,latitudinal:u,weights:n,poleAxis:i,outputDirection:DN,dTheta:o,samples:l,envMap:d,mipInt:c,CUBEUV_TEXEL_WIDTH:h,CUBEUV_TEXEL_HEIGHT:p,CUBEUV_MAX_MIP:g},f=zN("blur");return f.uniforms=m,f.fragmentNode=Qp({...m,latitudinal:u.equal(1)}),f}(n,e,t)}return n}async _compileMaterial(e){const t=new k(this._lodPlanes[0],e);await this._renderer.compile(t,CN)}_sceneToCubeUV(e,t,s,r){const n=EN;n.near=t,n.far=s;const i=[-1,1,-1,-1,-1,-1],o=[1,1,1,-1,-1,-1],a=this._renderer,u=a.autoClear;a.getClearColor(wN),a.autoClear=!1;let l=this._backgroundBox;if(null===l){const e=new Q({name:"PMREM.Background",side:x,depthWrite:!1,depthTest:!1});l=new k(new O,e)}let d=!1;const c=e.background;c?c.isColor&&(l.material.color.copy(c),e.background=null,d=!0):(l.material.color.copy(wN),d=!0),a.setRenderTarget(r),a.clear(),d&&a.render(l,n);for(let t=0;t<6;t++){const s=t%3;0===s?(n.up.set(0,i[t],0),n.lookAt(o[t],0,0)):1===s?(n.up.set(0,0,i[t]),n.lookAt(0,o[t],0)):(n.up.set(0,i[t],0),n.lookAt(0,0,o[t]));const u=this._cubeSize;kN(r,s*u,t>2?u:0,u,u),a.render(e,n)}a.autoClear=u,e.background=c}_textureToCubeUV(e,t){const s=this._renderer,r=e.mapping===T||e.mapping===_;r?null===this._cubemapMaterial&&(this._cubemapMaterial=$N(e)):null===this._equirectMaterial&&(this._equirectMaterial=HN(e));const n=r?this._cubemapMaterial:this._equirectMaterial;n.fragmentNode.value=e;const i=this._lodMeshes[0];i.material=n;const o=this._cubeSize;kN(t,0,0,3*o,2*o),s.setRenderTarget(t),s.render(i,CN)}_applyPMREM(e){const t=this._renderer,s=t.autoClear;t.autoClear=!1;const r=this._lodPlanes.length;for(let t=1;t<r;t++){const s=Math.sqrt(this._sigmas[t]*this._sigmas[t]-this._sigmas[t-1]*this._sigmas[t-1]),n=IN[(r-t-1)%IN.length];this._blur(e,t-1,t,s,n)}t.autoClear=s}_blur(e,t,s,r,n){const i=this._pingPongRenderTarget;this._halfBlur(e,i,t,s,r,"latitudinal",n),this._halfBlur(i,e,s,s,r,"longitudinal",n)}_halfBlur(e,t,s,r,n,i,o){const a=this._renderer,u=this._blurMaterial;"latitudinal"!==i&&"longitudinal"!==i&&console.error("blur direction must be either latitudinal or longitudinal!");const l=this._lodMeshes[r];l.material=u;const d=u.uniforms,c=this._sizeLods[s]-1,h=isFinite(n)?Math.PI/(2*c):2*Math.PI/39,p=n/h,g=isFinite(n)?1+Math.floor(3*p):RN;g>RN&&console.warn(`sigmaRadians, ${n}, is too large and will clip, as it requested ${g} samples when the maximum is set to 20`);const m=[];let f=0;for(let e=0;e<RN;++e){const t=e/p,s=Math.exp(-t*t/2);m.push(s),0===e?f+=s:e<g&&(f+=2*s)}for(let e=0;e<m.length;e++)m[e]=m[e]/f;e.texture.frame=(e.texture.frame||0)+1,d.envMap.value=e.texture,d.samples.value=g,d.weights.array=m,d.latitudinal.value="latitudinal"===i?1:0,o&&(d.poleAxis.value=o);const{_lodMax:y}=this;d.dTheta.value=h,d.mipInt.value=y-s;const b=this._sizeLods[r];kN(t,3*b*(r>y-4?r-y+4:0),4*(this._cubeSize-b),3*b,2*b),a.setRenderTarget(t),a.render(l,CN)}}function GN(e,t,s){const r=new ge(e,t,s);return r.texture.mapping=Be,r.texture.name="PMREM.cubeUv",r.texture.isPMREMTexture=!0,r.scissorTest=!0,r}function kN(e,t,s,r,n){e.viewport.set(t,s,r,n),e.scissor.set(t,s,r,n)}function zN(e){const t=new ah;return t.depthTest=!1,t.depthWrite=!1,t.blending=G,t.name=`PMREM_${e}`,t}function $N(e){const t=zN("cubemap");return t.fragmentNode=Nl(e,DN),t}function HN(e){const t=zN("equirect");return t.fragmentNode=Nu(e,_h(DN),0),t}const WN=new WeakMap,jN=new Map([[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]),qN=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),KN=e=>/e/g.test(e)?String(e).replace(/\+/g,""):(e=Number(e))+(e%1?"":".0");class XN{constructor(e,t,s){this.object=e,this.material=e&&e.material||null,this.geometry=e&&e.geometry||null,this.renderer=t,this.parser=s,this.scene=null,this.camera=null,this.nodes=[],this.sequentialNodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.updateAfterNodes=[],this.hashNodes={},this.monitor=null,this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.clippingContext=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:""},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:{},fragment:{},compute:{}},this.bindingsIndexes={},this.bindGroups=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.flow={code:""},this.chaining=[],this.stack=xm(),this.stacks=[],this.tab="\t",this.currentFunctionNode=null,this.context={material:this.material},this.cache=new lN,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null,this.useComparisonMethod=!1}getBindGroupsCache(){let e=WN.get(this.renderer);return void 0===e&&(e=new Ig,WN.set(this.renderer,e)),e}createRenderTarget(e,t,s){return new ge(e,t,s)}createCubeRenderTarget(e,t){return new Nh(e,t)}createPMREMGenerator(){return new ON(this.renderer)}includes(e){return this.nodes.includes(e)}_getBindGroup(e,t){const s=this.getBindGroupsCache(),r=[];let n,i=!0;for(const e of t)r.push(e),i=i&&!0!==e.groupNode.shared;return i?(n=s.get(r),void 0===n&&(n=new tN(e,r,this.bindingsIndexes[e].group,r),s.set(r,n))):n=new tN(e,r,this.bindingsIndexes[e].group,r),n}getBindGroupArray(e,t){const s=this.bindings[t];let r=s[e];return void 0===r&&(void 0===this.bindingsIndexes[e]&&(this.bindingsIndexes[e]={binding:0,group:Object.keys(this.bindingsIndexes).length}),s[e]=r=[]),r}getBindings(){let e=this.bindGroups;if(null===e){const t={},s=this.bindings;for(const e of vr)for(const r in s[e]){const n=s[e][r];(t[r]||(t[r]=[])).push(...n)}e=[];for(const s in t){const r=t[s],n=this._getBindGroup(s,r);e.push(n)}this.bindGroups=e}return e}sortBindingGroups(){const e=this.getBindings();e.sort(((e,t)=>e.bindings[0].groupNode.order-t.bindings[0].groupNode.order));for(let t=0;t<e.length;t++){const s=e[t];this.bindingsIndexes[s.name].group=t,s.index=t}}setHashNode(e,t){this.hashNodes[t]=e}addNode(e){!1===this.nodes.includes(e)&&(this.nodes.push(e),this.setHashNode(e,e.getHash(this)))}addSequentialNode(e){!1===this.sequentialNodes.includes(e)&&this.sequentialNodes.push(e)}buildUpdateNodes(){for(const e of this.nodes){e.getUpdateType()!==xr.NONE&&this.updateNodes.push(e.getSelf())}for(const e of this.sequentialNodes){const t=e.getUpdateBeforeType(),s=e.getUpdateAfterType();t!==xr.NONE&&this.updateBeforeNodes.push(e.getSelf()),s!==xr.NONE&&this.updateAfterNodes.push(e.getSelf())}}get currentNode(){return this.chaining[this.chaining.length-1]}isFilteredTexture(e){return e.magFilter===$||e.magFilter===Pe||e.magFilter===Ie||e.magFilter===M||e.minFilter===$||e.minFilter===Pe||e.minFilter===Ie||e.minFilter===M}addChain(e){this.chaining.push(e)}removeChain(e){if(this.chaining.pop()!==e)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(e){return e}getNodeFromHash(e){return this.hashNodes[e]}addFlow(e,t){return this.flowNodes[e].push(t),t}setContext(e){this.context=e}getContext(){return this.context}getSharedContext(){return this.context,this.context}setCache(e){this.cache=e}getCache(){return this.cache}getCacheFromNode(e,t=!0){const s=this.getDataFromNode(e);return void 0===s.cache&&(s.cache=new lN(t?this.getCache():null)),s.cache}isAvailable(){return!1}getVertexIndex(){console.warn("Abstract function.")}getInstanceIndex(){console.warn("Abstract function.")}getDrawIndex(){console.warn("Abstract function.")}getFrontFacing(){console.warn("Abstract function.")}getFragCoord(){console.warn("Abstract function.")}isFlipY(){return!1}increaseUsage(e){const t=this.getDataFromNode(e);return t.usageCount=void 0===t.usageCount?1:t.usageCount+1,t.usageCount}generateTexture(){console.warn("Abstract function.")}generateTextureLod(){console.warn("Abstract function.")}generateConst(n,i=null){if(null===i&&("float"===n||"int"===n||"uint"===n?i=0:"bool"===n?i=!1:"color"===n?i=new e:"vec2"===n?i=new t:"vec3"===n?i=new s:"vec4"===n&&(i=new r)),"float"===n)return KN(i);if("int"===n)return`${Math.round(i)}`;if("uint"===n)return i>=0?`${Math.round(i)}u`:"0u";if("bool"===n)return i?"true":"false";if("color"===n)return`${this.getType("vec3")}( ${KN(i.r)}, ${KN(i.g)}, ${KN(i.b)} )`;const o=this.getTypeLength(n),a=this.getComponentType(n),u=e=>this.generateConst(a,e);if(2===o)return`${this.getType(n)}( ${u(i.x)}, ${u(i.y)} )`;if(3===o)return`${this.getType(n)}( ${u(i.x)}, ${u(i.y)}, ${u(i.z)} )`;if(4===o)return`${this.getType(n)}( ${u(i.x)}, ${u(i.y)}, ${u(i.z)}, ${u(i.w)} )`;if(o>4&&i&&(i.isMatrix3||i.isMatrix4))return`${this.getType(n)}( ${i.elements.map(u).join(", ")} )`;if(o>4)return`${this.getType(n)}()`;throw new Error(`NodeBuilder: Type '${n}' not found in generate constant attempt.`)}getType(e){return"color"===e?"vec3":e}hasGeometryAttribute(e){return this.geometry&&void 0!==this.geometry.getAttribute(e)}getAttribute(e,t){const s=this.attributes;for(const t of s)if(t.name===e)return t;const r=new rN(e,t);return s.push(r),r}getPropertyName(e){return e.name}isVector(e){return/vec\d/.test(e)}isMatrix(e){return/mat\d/.test(e)}isReference(e){return"void"===e||"property"===e||"sampler"===e||"texture"===e||"cubeTexture"===e||"storageTexture"===e||"depthTexture"===e||"texture3D"===e}needsToWorkingColorSpace(){return!1}getComponentTypeFromTexture(e){const t=e.type;if(e.isDataTexture){if(t===y)return"int";if(t===f)return"uint"}return"float"}getElementType(e){return"mat2"===e?"vec2":"mat3"===e?"vec3":"mat4"===e?"vec4":this.getComponentType(e)}getComponentType(e){if("float"===(e=this.getVectorType(e))||"bool"===e||"int"===e||"uint"===e)return e;const t=/(b|i|u|)(vec|mat)([2-4])/.exec(e);return null===t?null:"b"===t[1]?"bool":"i"===t[1]?"int":"u"===t[1]?"uint":"float"}getVectorType(e){return"color"===e?"vec3":"texture"===e||"cubeTexture"===e||"storageTexture"===e||"texture3D"===e?"vec4":e}getTypeFromLength(e,t="float"){if(1===e)return t;const s=jN.get(e);return("float"===t?"":t[0])+s}getTypeFromArray(e){return qN.get(e.constructor)}getTypeFromAttribute(e){let t=e;e.isInterleavedBufferAttribute&&(t=e.data);const s=t.array,r=e.itemSize,n=e.normalized;let i;return e instanceof Le||!0===n||(i=this.getTypeFromArray(s)),this.getTypeFromLength(r,i)}getTypeLength(e){const t=this.getVectorType(e),s=/vec([2-4])/.exec(t);return null!==s?Number(s[1]):"float"===t||"bool"===t||"int"===t||"uint"===t?1:!0===/mat2/.test(e)?4:!0===/mat3/.test(e)?9:!0===/mat4/.test(e)?16:0}getVectorFromMatrix(e){return e.replace("mat","vec")}changeComponentType(e,t){return this.getTypeFromLength(this.getTypeLength(e),t)}getIntegerType(e){const t=this.getComponentType(e);return"int"===t||"uint"===t?e:this.changeComponentType(e,"int")}addStack(){return this.stack=xm(this.stack),this.stacks.push(_n()||this.stack),Tn(this.stack),this.stack}removeStack(){const e=this.stack;return this.stack=e.parent,Tn(this.stacks.pop()),e}getDataFromNode(e,t=this.shaderStage,s=null){let r=(s=null===s?e.isGlobal(this)?this.globalCache:this.cache:s).getData(e);return void 0===r&&(r={},s.setData(e,r)),void 0===r[t]&&(r[t]={}),r[t]}getNodeProperties(e,t="any"){const s=this.getDataFromNode(e,t);return s.properties||(s.properties={outputNode:null})}getBufferAttributeFromNode(e,t){const s=this.getDataFromNode(e);let r=s.bufferAttribute;if(void 0===r){const n=this.uniforms.index++;r=new rN("nodeAttribute"+n,t,e),this.bufferAttributes.push(r),s.bufferAttribute=r}return r}getStructTypeFromNode(e,t=this.shaderStage){const s=this.getDataFromNode(e,t);if(void 0===s.structType){const r=this.structs.index++;e.name=`StructType${r}`,this.structs[t].push(e),s.structType=e}return e}getUniformFromNode(e,t,s=this.shaderStage,r=null){const n=this.getDataFromNode(e,s,this.globalCache);let i=n.uniform;if(void 0===i){const o=this.uniforms.index++;i=new nN(r||"nodeUniform"+o,t,e),this.uniforms[s].push(i),n.uniform=i}return i}getVarFromNode(e,t=null,s=e.getNodeType(this),r=this.shaderStage){const n=this.getDataFromNode(e,r);let i=n.variable;if(void 0===i){const e=this.vars[r]||(this.vars[r]=[]);null===t&&(t="nodeVar"+e.length),i=new iN(t,s),e.push(i),n.variable=i}return i}getVaryingFromNode(e,t=null,s=e.getNodeType(this)){const r=this.getDataFromNode(e,"any");let n=r.varying;if(void 0===n){const e=this.varyings,i=e.length;null===t&&(t="nodeVarying"+i),n=new oN(t,s),e.push(n),r.varying=n}return n}getCodeFromNode(e,t,s=this.shaderStage){const r=this.getDataFromNode(e);let n=r.code;if(void 0===n){const e=this.codes[s]||(this.codes[s]=[]),i=e.length;n=new aN("nodeCode"+i,t),e.push(n),r.code=n}return n}addFlowCodeHierarchy(e,t){const{flowCodes:s,flowCodeBlock:r}=this.getDataFromNode(e);let n=!0,i=t;for(;i;){if(!0===r.get(i)){n=!1;break}i=this.getDataFromNode(i).parentNodeBlock}if(n)for(const e of s)this.addLineFlowCode(e)}addLineFlowCodeBlock(e,t,s){const r=this.getDataFromNode(e),n=r.flowCodes||(r.flowCodes=[]),i=r.flowCodeBlock||(r.flowCodeBlock=new WeakMap);n.push(t),i.set(s,!0)}addLineFlowCode(e,t=null){return""===e||(null!==t&&this.context.nodeBlock&&this.addLineFlowCodeBlock(t,e,this.context.nodeBlock),e=this.tab+e,/;\s*$/.test(e)||(e+=";\n"),this.flow.code+=e),this}addFlowCode(e){return this.flow.code+=e,this}addFlowTab(){return this.tab+="\t",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(e){return this.flowsData.get(e)}flowNode(e){const t=e.getNodeType(this),s=this.flowChildNode(e,t);return this.flowsData.set(e,s),s}buildFunctionNode(e){const t=new gx,s=this.currentFunctionNode;return this.currentFunctionNode=t,t.code=this.buildFunctionCode(e),this.currentFunctionNode=s,t}flowShaderNode(e){const t=e.layout,s={[Symbol.iterator](){let e=0;const t=Object.values(this);return{next:()=>({value:t[e],done:e++>=t.length})}}};for(const e of t.inputs)s[e.name]=new fm(e.type,e.name);e.layout=null;const r=e.call(s),n=this.flowStagesNode(r,t.type);return e.layout=t,n}flowStagesNode(e,t=null){const s=this.flow,r=this.vars,n=this.cache,i=this.buildStage,o=this.stack,a={code:""};this.flow=a,this.vars={},this.cache=new lN,this.stack=xm();for(const s of Nr)this.setBuildStage(s),a.result=e.build(this,t);return a.vars=this.getVars(this.shaderStage),this.flow=s,this.vars=r,this.cache=n,this.stack=o,this.setBuildStage(i),a}getFunctionOperator(){return null}flowChildNode(e,t=null){const s=this.flow,r={code:""};return this.flow=r,r.result=e.build(this,t),this.flow=s,r}flowNodeFromShaderStage(e,t,s=null,r=null){const n=this.shaderStage;this.setShaderStage(e);const i=this.flowChildNode(t,s);return null!==r&&(i.code+=`${this.tab+r} = ${i.result};\n`),this.flowCode[e]=this.flowCode[e]+i.code,this.setShaderStage(n),i}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){console.warn("Abstract function.")}getVaryings(){console.warn("Abstract function.")}getVar(e,t){return`${this.getType(e)} ${t}`}getVars(e){let t="";const s=this.vars[e];if(void 0!==s)for(const e of s)t+=`${this.getVar(e.type,e.name)}; `;return t}getUniforms(){console.warn("Abstract function.")}getCodes(e){const t=this.codes[e];let s="";if(void 0!==t)for(const e of t)s+=e.code+"\n";return s}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(e){this.shaderStage=e}getShaderStage(){return this.shaderStage}setBuildStage(e){this.buildStage=e}getBuildStage(){return this.buildStage}buildCode(){console.warn("Abstract function.")}build(){const{object:e,material:t,renderer:s}=this;if(null!==t){let e=s.library.fromMaterial(t);null===e&&(console.error(`NodeMaterial: Material "${t.type}" is not compatible.`),e=new ah),e.build(this)}else this.addFlow("compute",e);for(const e of Nr){this.setBuildStage(e),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const t of vr){this.setShaderStage(t);const s=this.flowNodes[t];for(const t of s)"generate"===e?this.flowNode(t):t.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(e,t){if("float"===t||"int"===t||"uint"===t)return new bN(e);if("vec2"===t||"ivec2"===t||"uvec2"===t)return new xN(e);if("vec3"===t||"ivec3"===t||"uvec3"===t)return new TN(e);if("vec4"===t||"ivec4"===t||"uvec4"===t)return new _N(e);if("color"===t)return new NN(e);if("mat3"===t)return new vN(e);if("mat4"===t)return new SN(e);throw new Error(`Uniform "${t}" not declared.`)}createNodeMaterial(e="NodeMaterial"){throw new Error(`THREE.NodeBuilder: createNodeMaterial() was deprecated. Use new ${e}() instead.`)}format(e,t,s){if((t=this.getVectorType(t))===(s=this.getVectorType(s))||null===s||this.isReference(s))return e;const r=this.getTypeLength(t),n=this.getTypeLength(s);return 16===r&&9===n?`${this.getType(s)}(${e}[0].xyz, ${e}[1].xyz, ${e}[2].xyz)`:9===r&&4===n?`${this.getType(s)}(${e}[0].xy, ${e}[1].xy)`:r>4||n>4||0===n?e:r===n?`${this.getType(s)}( ${e} )`:r>n?this.format(`${e}.${"xyz".slice(0,n)}`,this.getTypeFromLength(n,this.getComponentType(t)),s):4===n&&r>1?`${this.getType(s)}( ${this.format(e,t,"vec3")}, 1.0 )`:2===r?`${this.getType(s)}( ${this.format(e,t,"vec2")}, 0.0 )`:(1===r&&n>1&&t!==this.getComponentType(s)&&(e=`${this.getType(this.getComponentType(s))}( ${e} )`),`${this.getType(s)}( ${e} )`)}getSignature(){return`// Three.js r${Ve} - Node System\n`}}class YN{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.startTime=null,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.updateAfterMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(e,t){let s=e.get(t);return void 0===s&&(s={renderMap:new WeakMap,frameMap:new WeakMap},e.set(t,s)),s}updateBeforeNode(e){const t=e.getUpdateBeforeType(),s=e.updateReference(this);if(t===xr.FRAME){const{frameMap:t}=this._getMaps(this.updateBeforeMap,s);t.get(s)!==this.frameId&&!1!==e.updateBefore(this)&&t.set(s,this.frameId)}else if(t===xr.RENDER){const{renderMap:t}=this._getMaps(this.updateBeforeMap,s);t.get(s)!==this.renderId&&!1!==e.updateBefore(this)&&t.set(s,this.renderId)}else t===xr.OBJECT&&e.updateBefore(this)}updateAfterNode(e){const t=e.getUpdateAfterType(),s=e.updateReference(this);if(t===xr.FRAME){const{frameMap:t}=this._getMaps(this.updateAfterMap,s);t.get(s)!==this.frameId&&!1!==e.updateAfter(this)&&t.set(s,this.frameId)}else if(t===xr.RENDER){const{renderMap:t}=this._getMaps(this.updateAfterMap,s);t.get(s)!==this.renderId&&!1!==e.updateAfter(this)&&t.set(s,this.renderId)}else t===xr.OBJECT&&e.updateAfter(this)}updateNode(e){const t=e.getUpdateType(),s=e.updateReference(this);if(t===xr.FRAME){const{frameMap:t}=this._getMaps(this.updateMap,s);t.get(s)!==this.frameId&&!1!==e.update(this)&&t.set(s,this.frameId)}else if(t===xr.RENDER){const{renderMap:t}=this._getMaps(this.updateMap,s);t.get(s)!==this.renderId&&!1!==e.update(this)&&t.set(s,this.renderId)}else t===xr.OBJECT&&e.update(this)}update(){this.frameId++,void 0===this.lastTime&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class QN{constructor(e,t,s=null,r="",n=!1){this.type=e,this.name=t,this.count=s,this.qualifier=r,this.isConst=n}}QN.isNodeFunctionInput=!0;class ZN extends ET{static get type(){return"DirectionalLightNode"}constructor(e=null){super(e)}setup(e){super.setup(e);const t=e.context.lightingModel,s=this.colorNode,r=dT(this.light),n=e.context.reflectedLight;t.direct({lightDirection:r,lightColor:s,reflectedLight:n},e.stack,e)}}const JN=new i,ev=new i;let tv=null;class sv extends ET{static get type(){return"RectAreaLightNode"}constructor(e=null){super(e),this.halfHeight=si(new s).setGroup(Jn),this.halfWidth=si(new s).setGroup(Jn),this.updateType=xr.RENDER}update(e){super.update(e);const{light:t}=this,s=e.camera.matrixWorldInverse;ev.identity(),JN.copy(t.matrixWorld),JN.premultiply(s),ev.extractRotation(JN),this.halfWidth.value.set(.5*t.width,0,0),this.halfHeight.value.set(0,.5*t.height,0),this.halfWidth.value.applyMatrix4(ev),this.halfHeight.value.applyMatrix4(ev)}setup(e){let t,s;super.setup(e),e.isAvailable("float32Filterable")?(t=Nu(tv.LTC_FLOAT_1),s=Nu(tv.LTC_FLOAT_2)):(t=Nu(tv.LTC_HALF_1),s=Nu(tv.LTC_HALF_2));const{colorNode:r,light:n}=this,i=e.context.lightingModel,o=lT(n),a=e.context.reflectedLight;i.directRectArea({lightColor:r,lightPosition:o,halfWidth:this.halfWidth,halfHeight:this.halfHeight,reflectedLight:a,ltc_1:t,ltc_2:s},e.stack,e)}static setLTC(e){tv=e}}class rv extends ET{static get type(){return"SpotLightNode"}constructor(e=null){super(e),this.coneCosNode=si(0).setGroup(Jn),this.penumbraCosNode=si(0).setGroup(Jn),this.cutoffDistanceNode=si(0).setGroup(Jn),this.decayExponentNode=si(0).setGroup(Jn)}update(e){super.update(e);const{light:t}=this;this.coneCosNode.value=Math.cos(t.angle),this.penumbraCosNode.value=Math.cos(t.angle*(1-t.penumbra)),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}getSpotAttenuation(e){const{coneCosNode:t,penumbraCosNode:s}=this;return ga(t,s,e)}setup(e){super.setup(e);const t=e.context.lightingModel,{colorNode:s,cutoffDistanceNode:r,decayExponentNode:n,light:i}=this,o=lT(i).sub(tl),a=o.normalize(),u=a.dot(dT(i)),l=this.getSpotAttenuation(u),d=o.length(),c=wT({lightDistance:d,cutoffDistance:r,decayExponent:n}),h=s.mul(l).mul(c),p=e.context.reflectedLight;t.direct({lightDirection:a,lightColor:h,reflectedLight:p},e.stack,e)}}class nv extends rv{static get type(){return"IESSpotLightNode"}getSpotAttenuation(e){const t=this.light.iesMap;let s=null;if(t&&!0===t.isTexture){const r=e.acos().mul(1/Math.PI);s=Nu(t,wn(r,0),0).r}else s=super.getSpotAttenuation(e);return s}}class iv extends ET{static get type(){return"AmbientLightNode"}constructor(e=null){super(e)}setup({context:e}){e.irradiance.addAssign(this.colorNode)}}class ov extends ET{static get type(){return"HemisphereLightNode"}constructor(t=null){super(t),this.lightPositionNode=aT(t),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=si(new e).setGroup(Jn)}update(e){const{light:t}=this;super.update(e),this.lightPositionNode.object3d=t,this.groundColorNode.value.copy(t.groundColor).multiplyScalar(t.intensity)}setup(e){const{colorNode:t,groundColorNode:s,lightDirectionNode:r}=this,n=ll.dot(r).mul(.5).add(.5),i=da(s,t,n);e.context.irradiance.addAssign(i)}}class av extends ET{static get type(){return"LightProbeNode"}constructor(e=null){super(e);const t=[];for(let e=0;e<9;e++)t.push(new s);this.lightProbe=Cl(t)}update(e){const{light:t}=this;super.update(e);for(let e=0;e<9;e++)this.lightProbe.array[e].copy(t.sh.coefficients[e]).multiplyScalar(t.intensity)}setup(e){const t=Q_(dl,this.lightProbe);e.context.irradiance.addAssign(t)}}class uv{parseFunction(){console.warn("Abstract function.")}}class lv{constructor(e,t,s="",r=""){this.type=e,this.inputs=t,this.name=s,this.precision=r}getCode(){console.warn("Abstract function.")}}lv.isNodeFunction=!0;const dv=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,cv=/[a-z_0-9]+/gi,hv="#pragma main";class pv extends lv{constructor(e){const{type:t,inputs:s,name:r,precision:n,inputsCode:i,blockCode:o,headerCode:a}=(e=>{const t=(e=e.trim()).indexOf(hv),s=-1!==t?e.slice(t+12):e,r=s.match(dv);if(null!==r&&5===r.length){const n=r[4],i=[];let o=null;for(;null!==(o=cv.exec(n));)i.push(o);const a=[];let u=0;for(;u<i.length;){const e="const"===i[u][0];!0===e&&u++;let t=i[u][0];"in"===t||"out"===t||"inout"===t?u++:t="";const s=i[u++][0];let r=Number.parseInt(i[u][0]);!1===Number.isNaN(r)?u++:r=null;const n=i[u++][0];a.push(new QN(s,n,r,t,e))}const l=s.substring(r[0].length),d=void 0!==r[3]?r[3]:"";return{type:r[2],inputs:a,name:d,precision:void 0!==r[1]?r[1]:"",inputsCode:n,blockCode:l,headerCode:-1!==t?e.slice(0,t):""}}throw new Error("FunctionNode: Function is not a GLSL code.")})(e);super(t,s,r,n),this.inputsCode=i,this.blockCode=o,this.headerCode=a}getCode(e=this.name){let t;const s=this.blockCode;if(""!==s){const{type:r,inputsCode:n,headerCode:i,precision:o}=this;let a=`${r} ${e} ( ${n.trim()} )`;""!==o&&(a=`${o} ${a}`),t=i+a+s}else t="";return t}}class gv extends uv{parseFunction(e){return new pv(e)}}const mv=new WeakMap;class fv extends Gg{constructor(e,t){super(),this.renderer=e,this.backend=t,this.nodeFrame=new YN,this.nodeBuilderCache=new Map,this.callHashCache=new Ig,this.groupsData=new Ig}updateGroup(e){const t=e.groupNode,s=t.name;if(s===ei.name)return!0;if(s===Jn.name){const t=this.get(e),s=this.nodeFrame.renderId;return t.renderId!==s&&(t.renderId=s,!0)}if(s===Zn.name){const t=this.get(e),s=this.nodeFrame.frameId;return t.frameId!==s&&(t.frameId=s,!0)}const r=[t,e];let n=this.groupsData.get(r);return void 0===n&&this.groupsData.set(r,n={}),n.version!==t.version&&(n.version=t.version,!0)}getForRenderCacheKey(e){return e.initialCacheKey}getForRender(e){const t=this.get(e);let s=t.nodeBuilderState;if(void 0===s){const{nodeBuilderCache:r}=this,n=this.getForRenderCacheKey(e);if(s=r.get(n),void 0===s){const t=this.backend.createNodeBuilder(e.object,this.renderer);t.scene=e.scene,t.material=e.material,t.camera=e.camera,t.context.material=e.material,t.lightsNode=e.lightsNode,t.environmentNode=this.getEnvironmentNode(e.scene),t.fogNode=this.getFogNode(e.scene),t.clippingContext=e.clippingContext,t.build(),s=this._createNodeBuilderState(t),r.set(n,s)}s.usedTimes++,t.nodeBuilderState=s}return s}delete(e){if(e.isRenderObject){const t=this.get(e).nodeBuilderState;t.usedTimes--,0===t.usedTimes&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(e))}return super.delete(e)}getForCompute(e){const t=this.get(e);let s=t.nodeBuilderState;if(void 0===s){const r=this.backend.createNodeBuilder(e,this.renderer);r.build(),s=this._createNodeBuilderState(r),t.nodeBuilderState=s}return s}_createNodeBuilderState(e){return new sN(e.vertexShader,e.fragmentShader,e.computeShader,e.getAttributesArray(),e.getBindings(),e.updateNodes,e.updateBeforeNodes,e.updateAfterNodes,e.monitor,e.transforms)}getEnvironmentNode(e){return e.environmentNode||this.get(e).environmentNode||null}getBackgroundNode(e){return e.backgroundNode||this.get(e).backgroundNode||null}getFogNode(e){return e.fogNode||this.get(e).fogNode||null}getCacheKey(e,t){const s=[e,t],r=this.renderer.info.calls;let n=this.callHashCache.get(s);if(void 0===n||n.callId!==r){const i=this.getEnvironmentNode(e),o=this.getFogNode(e),a=[];t&&a.push(t.getCacheKey(!0)),i&&a.push(i.getCacheKey()),o&&a.push(o.getCacheKey()),a.push(this.renderer.shadowMap.enabled?1:0),n={callId:r,cacheKey:lr(a)},this.callHashCache.set(s,n)}return n.cacheKey}updateScene(e){this.updateEnvironment(e),this.updateFog(e),this.updateBackground(e)}get isToneMappingState(){return!this.renderer.getRenderTarget()}updateBackground(e){const t=this.get(e),s=e.background;if(s){const r=0===e.backgroundBlurriness&&t.backgroundBlurriness>0||e.backgroundBlurriness>0&&0===t.backgroundBlurriness;if(t.background!==s||r){let r=null;if(!0===s.isCubeTexture||s.mapping===j||s.mapping===q||s.mapping===Be)if(e.backgroundBlurriness>0||s.mapping===Be)r=sg(s);else{let e;e=!0===s.isCubeTexture?Nl(s):Nu(s),r=Ch(e)}else!0===s.isTexture?r=Nu(s,Ec.flipY()).setUpdateMatrix(!0):!0!==s.isColor&&console.error("WebGPUNodes: Unsupported background configuration.",s);t.backgroundNode=r,t.background=s,t.backgroundBlurriness=e.backgroundBlurriness}}else t.backgroundNode&&(delete t.backgroundNode,delete t.background)}updateFog(e){const t=this.get(e),s=e.fog;if(s){if(t.fog!==s){let e=null;if(s.isFogExp2){const t=Bl("color","color",s).setGroup(Jn),r=Bl("density","float",s).setGroup(Jn);e=Mx(t,r)}else if(s.isFog){const t=Bl("color","color",s).setGroup(Jn),r=Bl("near","float",s).setGroup(Jn),n=Bl("far","float",s).setGroup(Jn);e=Ex(t,r,n)}else console.error("WebGPUNodes: Unsupported fog configuration.",s);t.fogNode=e,t.fog=s}}else delete t.fogNode,delete t.fog}updateEnvironment(e){const t=this.get(e),s=e.environment;if(s){if(t.environment!==s){let e=null;!0===s.isCubeTexture?e=Nl(s):!0===s.isTexture?e=Nu(s):console.error("Nodes: Unsupported environment configuration.",s),t.environmentNode=e,t.environment=s}}else t.environmentNode&&(delete t.environmentNode,delete t.environment)}getNodeFrame(e=this.renderer,t=null,s=null,r=null,n=null){const i=this.nodeFrame;return i.renderer=e,i.scene=t,i.object=s,i.camera=r,i.material=n,i}getNodeFrameForRender(e){return this.getNodeFrame(e.renderer,e.scene,e.object,e.camera,e.material)}getOutputCacheKey(){const e=this.renderer;return e.toneMapping+","+e.currentColorSpace}hasOutputChange(e){return mv.get(e)!==this.getOutputCacheKey()}getOutputNode(e){const t=this.renderer,s=this.getOutputCacheKey(),r=Nu(e,Ec).renderOutput(t.toneMapping,t.currentColorSpace);return mv.set(e,s),r}updateBefore(e){const t=e.getNodeBuilderState();for(const s of t.updateBeforeNodes)this.getNodeFrameForRender(e).updateBeforeNode(s)}updateAfter(e){const t=e.getNodeBuilderState();for(const s of t.updateAfterNodes)this.getNodeFrameForRender(e).updateAfterNode(s)}updateForCompute(e){const t=this.getNodeFrame(),s=this.getForCompute(e);for(const e of s.updateNodes)t.updateNode(e)}updateForRender(e){const t=this.getNodeFrameForRender(e),s=e.getNodeBuilderState();for(const e of s.updateNodes)t.updateNode(e)}needsRefresh(e){const t=this.getNodeFrameForRender(e);return e.getMonitor().needsRefresh(e,t)}dispose(){super.dispose(),this.nodeFrame=new YN,this.nodeBuilderCache=new Map}}const yv=new me;class bv{constructor(e=null){this.version=0,this.clipIntersection=null,this.cacheKey="",null===e?(this.intersectionPlanes=[],this.unionPlanes=[],this.viewNormalMatrix=new n,this.clippingGroupContexts=new WeakMap,this.shadowPass=!1):(this.viewNormalMatrix=e.viewNormalMatrix,this.clippingGroupContexts=e.clippingGroupContexts,this.shadowPass=e.shadowPass,this.viewMatrix=e.viewMatrix),this.parentVersion=null}projectPlanes(e,t,s){const r=e.length;for(let n=0;n<r;n++){yv.copy(e[n]).applyMatrix4(this.viewMatrix,this.viewNormalMatrix);const r=t[s+n],i=yv.normal;r.x=-i.x,r.y=-i.y,r.z=-i.z,r.w=yv.constant}}updateGlobal(e,t){this.shadowPass=null!==e.overrideMaterial&&e.overrideMaterial.isShadowNodeMaterial,this.viewMatrix=t.matrixWorldInverse,this.viewNormalMatrix.getNormalMatrix(this.viewMatrix)}update(e,t){let s=!1;e.version!==this.parentVersion&&(this.intersectionPlanes=Array.from(e.intersectionPlanes),this.unionPlanes=Array.from(e.unionPlanes),this.parentVersion=e.version),this.clipIntersection!==t.clipIntersection&&(this.clipIntersection=t.clipIntersection,this.clipIntersection?this.unionPlanes.length=e.unionPlanes.length:this.intersectionPlanes.length=e.intersectionPlanes.length);const n=t.clippingPlanes,i=n.length;let o,a;if(this.clipIntersection?(o=this.intersectionPlanes,a=e.intersectionPlanes.length):(o=this.unionPlanes,a=e.unionPlanes.length),o.length!==a+i){o.length=a+i;for(let e=0;e<i;e++)o[a+e]=new r;s=!0}this.projectPlanes(n,o,a),s&&(this.version++,this.cacheKey=`${this.intersectionPlanes.length}:${this.unionPlanes.length}`)}getGroupContext(e){if(this.shadowPass&&!e.clipShadows)return this;let t=this.clippingGroupContexts.get(e);return void 0===t&&(t=new bv(this),this.clippingGroupContexts.set(e,t)),t.update(this,e),t}get unionClippingCount(){return this.unionPlanes.length}}class xv{constructor(e,t){this.scene=e,this.camera=t}clone(){return Object.assign(new this.constructor,this)}}class Tv{constructor(){this.lists=new Ig}get(e,t){const s=this.lists,r=[e,t];let n=s.get(r);return void 0===n&&(n=new xv(e,t),s.set(r,n)),n}dispose(){this.lists=new Ig}}class _v{constructor(){this.lightNodes=new WeakMap,this.materialNodes=new Map,this.toneMappingNodes=new Map}fromMaterial(e){if(e.isNodeMaterial)return e;let t=null;const s=this.getMaterialNodeClass(e.type);if(null!==s){t=new s;for(const s in e)t[s]=e[s]}return t}addToneMapping(e,t){this.addType(e,t,this.toneMappingNodes)}getToneMappingFunction(e){return this.toneMappingNodes.get(e)||null}getMaterialNodeClass(e){return this.materialNodes.get(e)||null}addMaterial(e,t){this.addType(e,t,this.materialNodes)}getLightNodeClass(e){return this.lightNodes.get(e)||null}addLight(e,t){this.addClass(e,t,this.lightNodes)}addType(e,t,s){if(s.has(t))console.warn(`Redefinition of node ${t}`);else{if("function"!=typeof e)throw new Error(`Node class ${e.name} is not a class.`);if("function"==typeof t||"object"==typeof t)throw new Error(`Base class ${t} is not a class.`);s.set(t,e)}}addClass(e,t,s){if(s.has(t))console.warn(`Redefinition of node ${t.name}`);else{if("function"!=typeof e)throw new Error(`Node class ${e.name} is not a class.`);if("function"!=typeof t)throw new Error(`Base class ${t.name} is not a class.`);s.set(t,e)}}}const Nv=new pT;class vv extends Ig{constructor(){super()}createNode(e=[]){return(new pT).setLights(e)}getNode(e,t){if(e.isQuadMesh)return Nv;const s=[e,t];let r=this.get(s);return void 0===r&&(r=this.createNode(),this.set(s,r)),r}}const Sv=new z,Av=new t,Rv=new r,Cv=new ke,Ev=new i,wv=new r;class Mv{constructor(e,t={}){this.isRenderer=!0;const{logarithmicDepthBuffer:s=!1,alpha:n=!0,depth:i=!0,stencil:o=!1,antialias:a=!1,samples:u=0,getFallback:l=null}=t;this.domElement=e.getDomElement(),this.backend=e,this.samples=u||!0===a?4:0,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.alpha=n,this.logarithmicDepthBuffer=s,this.outputColorSpace=De,this.toneMapping=d,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=i,this.stencil=o,this.info=new Yg,this.nodes={modelViewMatrix:null,modelNormalViewMatrix:null},this.library=new _v,this.lighting=new vv,this._getFallback=l,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new r(0,0,this._width,this._height),this._scissor=new r(0,0,this._width,this._height),this._scissorTest=!1,this._attributes=null,this._geometries=null,this._nodes=null,this._animation=null,this._bindings=null,this._objects=null,this._pipelines=null,this._bundles=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._quad=new vf(new ah),this._quad.material.type="Renderer_output",this._currentRenderContext=null,this._opaqueSort=null,this._transparentSort=null,this._frameBufferTarget=null;const c=!0===this.alpha?0:1;this._clearColor=new mm(0,0,0,c),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._mrt=null,this._renderObjectFunction=null,this._currentRenderObjectFunction=null,this._currentRenderBundle=null,this._handleObjectFunction=this._renderObjectDirect,this._isDeviceLost=!1,this.onDeviceLost=this._onDeviceLost,this._initialized=!1,this._initPromise=null,this._compilationPromises=null,this.transparent=!0,this.opaque=!0,this.shadowMap={enabled:!1,type:Oe},this.xr={enabled:!1},this.debug={checkShaderErrors:!0,onShaderError:null,getShaderAsync:async(e,t,s)=>{await this.compileAsync(e,t);const r=this._renderLists.get(e,t),n=this._renderContexts.get(e,t,this._renderTarget),i=e.overrideMaterial||s.material,o=this._objects.get(s,i,e,t,r.lightsNode,n,n.clippingContext),{fragmentShader:a,vertexShader:u}=o.getNodeBuilderState();return{fragmentShader:a,vertexShader:u}}}}async init(){if(this._initialized)throw new Error("Renderer: Backend has already been initialized.");return null!==this._initPromise||(this._initPromise=new Promise((async(e,t)=>{let s=this.backend;try{await s.init(this)}catch(e){if(null===this._getFallback)return void t(e);try{this.backend=s=this._getFallback(e),await s.init(this)}catch(e){return void t(e)}}this._nodes=new fv(this,s),this._animation=new Pg(this._nodes,this.info),this._attributes=new jg(s),this._background=new J_(this,this._nodes),this._geometries=new Xg(this._attributes,this.info),this._textures=new gm(this,s,this.info),this._pipelines=new sm(s,this._nodes),this._bindings=new rm(s,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new Og(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new um(this.lighting),this._bundles=new Tv,this._renderContexts=new hm,this._animation.start(),this._initialized=!0,e()}))),this._initPromise}get coordinateSystem(){return this.backend.coordinateSystem}async compileAsync(e,t,s=null){if(!0===this._isDeviceLost)return;!1===this._initialized&&await this.init();const r=this._nodes.nodeFrame,n=r.renderId,i=this._currentRenderContext,o=this._currentRenderObjectFunction,a=this._compilationPromises,u=!0===e.isScene?e:Sv;null===s&&(s=e);const l=this._renderTarget,d=this._renderContexts.get(s,t,l),c=this._activeMipmapLevel,h=[];this._currentRenderContext=d,this._currentRenderObjectFunction=this.renderObject,this._handleObjectFunction=this._createObjectPipeline,this._compilationPromises=h,r.renderId++,r.update(),d.depth=this.depth,d.stencil=this.stencil,d.clippingContext||(d.clippingContext=new bv),d.clippingContext.updateGlobal(u,t),u.onBeforeRender(this,e,t,l);const p=this._renderLists.get(e,t);if(p.begin(),this._projectObject(e,t,0,p,d.clippingContext),s!==e&&s.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&p.pushLight(e)})),p.finish(),null!==l){this._textures.updateRenderTarget(l,c);const e=this._textures.get(l);d.textures=e.textures,d.depthTexture=e.depthTexture}else d.textures=null,d.depthTexture=null;this._nodes.updateScene(u),this._background.update(u,p,d);const g=p.opaque,m=p.transparent,f=p.transparentDoublePass,y=p.lightsNode;!0===this.opaque&&g.length>0&&this._renderObjects(g,t,u,y),!0===this.transparent&&m.length>0&&this._renderTransparents(m,f,t,u,y),r.renderId=n,this._currentRenderContext=i,this._currentRenderObjectFunction=o,this._compilationPromises=a,this._handleObjectFunction=this._renderObjectDirect,await Promise.all(h)}async renderAsync(e,t){!1===this._initialized&&await this.init();const s=this._renderScene(e,t);await this.backend.resolveTimestampAsync(s,"render")}async waitForGPU(){await this.backend.waitForGPU()}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}_onDeviceLost(e){let t=`THREE.WebGPURenderer: ${e.api} Device Lost:\n\nMessage: ${e.message}`;e.reason&&(t+=`\nReason: ${e.reason}`),console.error(t),this._isDeviceLost=!0}_renderBundle(e,t,s){const{bundleGroup:r,camera:n,renderList:i}=e,o=this._currentRenderContext,a=this._bundles.get(r,n),u=this.backend.get(a);void 0===u.renderContexts&&(u.renderContexts=new Set);const l=r.version!==u.version,d=!1===u.renderContexts.has(o)||l;if(u.renderContexts.add(o),d){this.backend.beginBundle(o),(void 0===u.renderObjects||l)&&(u.renderObjects=[]),this._currentRenderBundle=a;const e=i.opaque;!0===this.opaque&&e.length>0&&this._renderObjects(e,n,t,s),this._currentRenderBundle=null,this.backend.finishBundle(o,a),u.version=r.version}else{const{renderObjects:e}=u;for(let t=0,s=e.length;t<s;t++){const s=e[t];this._nodes.needsRefresh(s)&&(this._nodes.updateBefore(s),this._nodes.updateForRender(s),this._bindings.updateForRender(s),this._nodes.updateAfter(s))}}this.backend.addBundle(o,a)}render(e,t){if(!1===this._initialized)return console.warn("THREE.Renderer: .render() called before the backend is initialized. Try using .renderAsync() instead."),this.renderAsync(e,t);this._renderScene(e,t)}_getFrameBufferTarget(){const{currentToneMapping:e,currentColorSpace:t}=this;if(!1===(e!==d)&&!1===(t!==Se))return null;const{width:s,height:r}=this.getDrawingBufferSize(Av),{depth:n,stencil:i}=this;let o=this._frameBufferTarget;return null===o&&(o=new ge(s,r,{depthBuffer:n,stencilBuffer:i,type:ye,format:Fe,colorSpace:Se,generateMipmaps:!1,minFilter:$,magFilter:$,samples:this.samples}),o.isPostProcessingRenderTarget=!0,this._frameBufferTarget=o),o.depthBuffer=n,o.stencilBuffer=i,o.setSize(s,r),o.viewport.copy(this._viewport),o.scissor.copy(this._scissor),o.viewport.multiplyScalar(this._pixelRatio),o.scissor.multiplyScalar(this._pixelRatio),o.scissorTest=this._scissorTest,o}_renderScene(e,t,s=!0){if(!0===this._isDeviceLost)return;const r=s?this._getFrameBufferTarget():null,n=this._nodes.nodeFrame,i=n.renderId,o=this._currentRenderContext,a=this._currentRenderObjectFunction,u=!0===e.isScene?e:Sv,l=this._renderTarget,d=this._activeCubeFace,c=this._activeMipmapLevel;let h;null!==r?(h=r,this.setRenderTarget(h)):h=l;const p=this._renderContexts.get(e,t,h);this._currentRenderContext=p,this._currentRenderObjectFunction=this._renderObjectFunction||this.renderObject,this.info.calls++,this.info.render.calls++,this.info.render.frameCalls++,n.renderId=this.info.calls;const g=this.coordinateSystem;t.coordinateSystem!==g&&(t.coordinateSystem=g,t.updateProjectionMatrix()),!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld();let m=this._viewport,f=this._scissor,y=this._pixelRatio;null!==h&&(m=h.viewport,f=h.scissor,y=1),this.getDrawingBufferSize(Av),Rv.set(0,0,Av.width,Av.height);const b=void 0===m.minDepth?0:m.minDepth,x=void 0===m.maxDepth?1:m.maxDepth;p.viewportValue.copy(m).multiplyScalar(y).floor(),p.viewportValue.width>>=c,p.viewportValue.height>>=c,p.viewportValue.minDepth=b,p.viewportValue.maxDepth=x,p.viewport=!1===p.viewportValue.equals(Rv),p.scissorValue.copy(f).multiplyScalar(y).floor(),p.scissor=this._scissorTest&&!1===p.scissorValue.equals(Rv),p.scissorValue.width>>=c,p.scissorValue.height>>=c,p.clippingContext||(p.clippingContext=new bv),p.clippingContext.updateGlobal(u,t),u.onBeforeRender(this,e,t,h),Ev.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),Cv.setFromProjectionMatrix(Ev,g);const T=this._renderLists.get(e,t);if(T.begin(),this._projectObject(e,t,0,T,p.clippingContext),T.finish(),!0===this.sortObjects&&T.sort(this._opaqueSort,this._transparentSort),null!==h){this._textures.updateRenderTarget(h,c);const e=this._textures.get(h);p.textures=e.textures,p.depthTexture=e.depthTexture,p.width=e.width,p.height=e.height,p.renderTarget=h,p.depth=h.depthBuffer,p.stencil=h.stencilBuffer}else p.textures=null,p.depthTexture=null,p.width=this.domElement.width,p.height=this.domElement.height,p.depth=this.depth,p.stencil=this.stencil;p.width>>=c,p.height>>=c,p.activeCubeFace=d,p.activeMipmapLevel=c,p.occlusionQueryCount=T.occlusionQueryCount,this._nodes.updateScene(u),this._background.update(u,T,p),this.backend.beginRender(p);const{bundles:_,lightsNode:N,transparentDoublePass:v,transparent:S,opaque:A}=T;if(_.length>0&&this._renderBundles(_,u,N),!0===this.opaque&&A.length>0&&this._renderObjects(A,t,u,N),!0===this.transparent&&S.length>0&&this._renderTransparents(S,v,t,u,N),this.backend.finishRender(p),n.renderId=i,this._currentRenderContext=o,this._currentRenderObjectFunction=a,null!==r){this.setRenderTarget(l,d,c);const e=this._quad;this._nodes.hasOutputChange(h.texture)&&(e.material.fragmentNode=this._nodes.getOutputNode(h.texture),e.material.needsUpdate=!0),this._renderScene(e,e.camera,!1)}return u.onAfterRender(this,e,t,h),p}getMaxAnisotropy(){return this.backend.getMaxAnisotropy()}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}async setAnimationLoop(e){!1===this._initialized&&await this.init(),this._animation.setAnimationLoop(e)}async getArrayBufferAsync(e){return await this.backend.getArrayBufferAsync(e)}getContext(){return this.backend.getContext()}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(e){return e.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(e){return e.set(this._width,this._height)}setPixelRatio(e=1){this._pixelRatio!==e&&(this._pixelRatio=e,this.setSize(this._width,this._height,!1))}setDrawingBufferSize(e,t,s){this._width=e,this._height=t,this._pixelRatio=s,this.domElement.width=Math.floor(e*s),this.domElement.height=Math.floor(t*s),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setSize(e,t,s=!0){this._width=e,this._height=t,this.domElement.width=Math.floor(e*this._pixelRatio),this.domElement.height=Math.floor(t*this._pixelRatio),!0===s&&(this.domElement.style.width=e+"px",this.domElement.style.height=t+"px"),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setOpaqueSort(e){this._opaqueSort=e}setTransparentSort(e){this._transparentSort=e}getScissor(e){const t=this._scissor;return e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e}setScissor(e,t,s,r){const n=this._scissor;e.isVector4?n.copy(e):n.set(e,t,s,r)}getScissorTest(){return this._scissorTest}setScissorTest(e){this._scissorTest=e,this.backend.setScissorTest(e)}getViewport(e){return e.copy(this._viewport)}setViewport(e,t,s,r,n=0,i=1){const o=this._viewport;e.isVector4?o.copy(e):o.set(e,t,s,r),o.minDepth=n,o.maxDepth=i}getClearColor(e){return e.copy(this._clearColor)}setClearColor(e,t=1){this._clearColor.set(e),this._clearColor.a=t}getClearAlpha(){return this._clearColor.a}setClearAlpha(e){this._clearColor.a=e}getClearDepth(){return this._clearDepth}setClearDepth(e){this._clearDepth=e}getClearStencil(){return this._clearStencil}setClearStencil(e){this._clearStencil=e}isOccluded(e){const t=this._currentRenderContext;return t&&this.backend.isOccluded(t,e)}clear(e=!0,t=!0,s=!0){if(!1===this._initialized)return console.warn("THREE.Renderer: .clear() called before the backend is initialized. Try using .clearAsync() instead."),this.clearAsync(e,t,s);const r=this._renderTarget||this._getFrameBufferTarget();let n=null;if(null!==r&&(this._textures.updateRenderTarget(r),n=this._textures.get(r)),this.backend.clear(e,t,s,n),null!==r&&null===this._renderTarget){const e=this._quad;this._nodes.hasOutputChange(r.texture)&&(e.material.fragmentNode=this._nodes.getOutputNode(r.texture),e.material.needsUpdate=!0),this._renderScene(e,e.camera,!1)}}clearColor(){return this.clear(!0,!1,!1)}clearDepth(){return this.clear(!1,!0,!1)}clearStencil(){return this.clear(!1,!1,!0)}async clearAsync(e=!0,t=!0,s=!0){!1===this._initialized&&await this.init(),this.clear(e,t,s)}clearColorAsync(){return this.clearAsync(!0,!1,!1)}clearDepthAsync(){return this.clearAsync(!1,!0,!1)}clearStencilAsync(){return this.clearAsync(!1,!1,!0)}get currentToneMapping(){return null!==this._renderTarget?d:this.toneMapping}get currentColorSpace(){return null!==this._renderTarget?Se:this.outputColorSpace}dispose(){this.info.dispose(),this.backend.dispose(),this._animation.dispose(),this._objects.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(e,t=0,s=0){this._renderTarget=e,this._activeCubeFace=t,this._activeMipmapLevel=s}getRenderTarget(){return this._renderTarget}setRenderObjectFunction(e){this._renderObjectFunction=e}getRenderObjectFunction(){return this._renderObjectFunction}compute(e){if(!0===this.isDeviceLost)return;if(!1===this._initialized)return console.warn("THREE.Renderer: .compute() called before the backend is initialized. Try using .computeAsync() instead."),this.computeAsync(e);const t=this._nodes.nodeFrame,s=t.renderId;this.info.calls++,this.info.compute.calls++,this.info.compute.frameCalls++,t.renderId=this.info.calls;const r=this.backend,n=this._pipelines,i=this._bindings,o=this._nodes,a=Array.isArray(e)?e:[e];if(void 0===a[0]||!0!==a[0].isComputeNode)throw new Error("THREE.Renderer: .compute() expects a ComputeNode.");r.beginCompute(e);for(const t of a){if(!1===n.has(t)){const e=()=>{t.removeEventListener("dispose",e),n.delete(t),i.delete(t),o.delete(t)};t.addEventListener("dispose",e);const s=t.onInitFunction;null!==s&&s.call(t,{renderer:this})}o.updateForCompute(t),i.updateForCompute(t);const s=i.getForCompute(t),a=n.getForCompute(t,s);r.compute(e,t,s,a)}r.finishCompute(e),t.renderId=s}async computeAsync(e){!1===this._initialized&&await this.init(),this.compute(e),await this.backend.resolveTimestampAsync(e,"compute")}async hasFeatureAsync(e){return!1===this._initialized&&await this.init(),this.backend.hasFeature(e)}hasFeature(e){return!1===this._initialized?(console.warn("THREE.Renderer: .hasFeature() called before the backend is initialized. Try using .hasFeatureAsync() instead."),!1):this.backend.hasFeature(e)}hasInitialized(){return this._initialized}copyFramebufferToTexture(e,t=null){if(null!==t)if(t.isVector2)t=wv.set(t.x,t.y,e.image.width,e.image.height).floor();else{if(!t.isVector4)return void console.error("THREE.Renderer.copyFramebufferToTexture: Invalid rectangle.");t=wv.copy(t).floor()}else t=wv.set(0,0,e.image.width,e.image.height);let s,r=this._currentRenderContext;null!==r?s=r.renderTarget:(s=this._renderTarget||this._getFrameBufferTarget(),null!==s&&(this._textures.updateRenderTarget(s),r=this._textures.get(s))),this._textures.updateTexture(e,{renderTarget:s}),this.backend.copyFramebufferToTexture(e,r,t)}copyTextureToTexture(e,t,s=null,r=null,n=0){this._textures.updateTexture(e),this._textures.updateTexture(t),this.backend.copyTextureToTexture(e,t,s,r,n)}readRenderTargetPixelsAsync(e,t,s,r,n,i=0,o=0){return this.backend.copyTextureToBuffer(e.textures[i],t,s,r,n,o)}_projectObject(e,t,s,r,n){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)s=e.renderOrder,e.isClippingGroup&&e.enabled&&(n=n.getGroupContext(e));else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)r.pushLight(e);else if(e.isSprite){if(!e.frustumCulled||Cv.intersectsSprite(e)){!0===this.sortObjects&&wv.setFromMatrixPosition(e.matrixWorld).applyMatrix4(Ev);const{geometry:t,material:i}=e;i.visible&&r.push(e,t,i,s,wv.z,null,n)}}else if(e.isLineLoop)console.error("THREE.Renderer: Objects of type THREE.LineLoop are not supported. Please use THREE.Line or THREE.LineSegments.");else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||Cv.intersectsObject(e))){const{geometry:t,material:i}=e;if(!0===this.sortObjects&&(null===t.boundingSphere&&t.computeBoundingSphere(),wv.copy(t.boundingSphere.center).applyMatrix4(e.matrixWorld).applyMatrix4(Ev)),Array.isArray(i)){const o=t.groups;for(let a=0,u=o.length;a<u;a++){const u=o[a],l=i[u.materialIndex];l&&l.visible&&r.push(e,t,l,s,wv.z,u,n)}}else i.visible&&r.push(e,t,i,s,wv.z,null,n)}if(!0===e.isBundleGroup&&void 0!==this.backend.beginBundle){const s=r;(r=this._renderLists.get(e,t)).begin(),s.pushBundle({bundleGroup:e,camera:t,renderList:r}),r.finish()}const i=e.children;for(let e=0,o=i.length;e<o;e++)this._projectObject(i[e],t,s,r,n)}_renderBundles(e,t,s){for(const r of e)this._renderBundle(r,t,s)}_renderTransparents(e,t,s,r,n){if(t.length>0){for(const{material:e}of t)e.side=x;this._renderObjects(t,s,r,n,"backSide");for(const{material:e}of t)e.side=Ge;this._renderObjects(e,s,r,n);for(const{material:e}of t)e.side=le}else this._renderObjects(e,s,r,n)}_renderObjects(e,t,s,r,n=null){for(let i=0,o=e.length;i<o;i++){const o=e[i],{object:a,geometry:u,material:l,group:d,clippingContext:c}=o;if(t.isArrayCamera){const e=t.cameras;for(let t=0,i=e.length;t<i;t++){const i=e[t];if(a.layers.test(i.layers)){const e=i.viewport,t=void 0===e.minDepth?0:e.minDepth,o=void 0===e.maxDepth?1:e.maxDepth,h=this._currentRenderContext.viewportValue;h.copy(e).multiplyScalar(this._pixelRatio).floor(),h.minDepth=t,h.maxDepth=o,this.backend.updateViewport(this._currentRenderContext),this._currentRenderObjectFunction(a,s,i,u,l,d,r,c,n)}}}else this._currentRenderObjectFunction(a,s,t,u,l,d,r,c,n)}}renderObject(e,t,s,r,n,i,o,a=null,u=null){let l,d,c;if(e.onBeforeRender(this,t,s,r,n,i),null!==t.overrideMaterial){const e=t.overrideMaterial;n.positionNode&&n.positionNode.isNode&&(l=e.positionNode,e.positionNode=n.positionNode),e.isShadowNodeMaterial&&(e.side=null===n.shadowSide?n.side:n.shadowSide,n.depthNode&&n.depthNode.isNode&&(c=e.depthNode,e.depthNode=n.depthNode),n.castShadowNode&&n.castShadowNode.isNode&&(d=e.fragmentNode,e.fragmentNode=n.castShadowNode)),n=e}!0===n.transparent&&n.side===le&&!1===n.forceSinglePass?(n.side=x,this._handleObjectFunction(e,n,t,s,o,i,a,"backSide"),n.side=Ge,this._handleObjectFunction(e,n,t,s,o,i,a,u),n.side=le):this._handleObjectFunction(e,n,t,s,o,i,a,u),void 0!==l&&(t.overrideMaterial.positionNode=l),void 0!==c&&(t.overrideMaterial.depthNode=c),void 0!==d&&(t.overrideMaterial.fragmentNode=d),e.onAfterRender(this,t,s,r,n,i)}_renderObjectDirect(e,t,s,r,n,i,o,a){const u=this._objects.get(e,t,s,r,n,this._currentRenderContext,o,a);u.drawRange=e.geometry.drawRange,u.group=i;const l=this._nodes.needsRefresh(u);if(l&&(this._nodes.updateBefore(u),this._geometries.updateForRender(u),this._nodes.updateForRender(u),this._bindings.updateForRender(u)),this._pipelines.updateForRender(u),null!==this._currentRenderBundle){this.backend.get(this._currentRenderBundle).renderObjects.push(u),u.bundle=this._currentRenderBundle.scene}this.backend.draw(u,this.info),l&&this._nodes.updateAfter(u)}_createObjectPipeline(e,t,s,r,n,i,o){const a=this._objects.get(e,t,s,r,n,this._currentRenderContext,i,o);this._nodes.updateBefore(a),this._geometries.updateForRender(a),this._nodes.updateForRender(a),this._bindings.updateForRender(a),this._pipelines.getForRender(a,this._compilationPromises),this._nodes.updateAfter(a)}get compile(){return this.compileAsync}}class Bv{constructor(e=""){this.name=e,this.visibility=0}setVisibility(e){this.visibility|=e}clone(){return Object.assign(new this.constructor,this)}}class Uv extends Bv{constructor(e,t=null){super(e),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=t}get byteLength(){return(e=this._buffer.byteLength)+(Wg-e%Wg)%Wg;var e}get buffer(){return this._buffer}update(){return!0}}class Fv extends Uv{constructor(e,t=null){super(e,t),this.isUniformBuffer=!0}}let Pv=0;class Iv extends Fv{constructor(e,t){super("UniformBuffer_"+Pv++,e?e.value:null),this.nodeUniform=e,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class Lv extends Fv{constructor(e){super(e),this.isUniformsGroup=!0,this._values=null,this.uniforms=[]}addUniform(e){return this.uniforms.push(e),this}removeUniform(e){const t=this.uniforms.indexOf(e);return-1!==t&&this.uniforms.splice(t,1),this}get values(){return null===this._values&&(this._values=Array.from(this.buffer)),this._values}get buffer(){let e=this._buffer;if(null===e){const t=this.byteLength;e=new Float32Array(new ArrayBuffer(t)),this._buffer=e}return e}get byteLength(){let e=0;for(let t=0,s=this.uniforms.length;t<s;t++){const s=this.uniforms[t],{boundary:r,itemSize:n}=s,i=e%Wg;0!==i&&Wg-i-r<0?e+=Wg-i:i%r!=0&&(e+=i%r),s.offset=e/this.bytesPerElement,e+=n*this.bytesPerElement}return Math.ceil(e/Wg)*Wg}update(){let e=!1;for(const t of this.uniforms)!0===this.updateByType(t)&&(e=!0);return e}updateByType(e){return e.isNumberUniform?this.updateNumber(e):e.isVector2Uniform?this.updateVector2(e):e.isVector3Uniform?this.updateVector3(e):e.isVector4Uniform?this.updateVector4(e):e.isColorUniform?this.updateColor(e):e.isMatrix3Uniform?this.updateMatrix3(e):e.isMatrix4Uniform?this.updateMatrix4(e):void console.error("THREE.WebGPUUniformsGroup: Unsupported uniform type.",e)}updateNumber(e){let t=!1;const s=this.values,r=e.getValue(),n=e.offset;if(s[n]!==r){this.buffer[n]=s[n]=r,t=!0}return t}updateVector2(e){let t=!1;const s=this.values,r=e.getValue(),n=e.offset;if(s[n+0]!==r.x||s[n+1]!==r.y){const e=this.buffer;e[n+0]=s[n+0]=r.x,e[n+1]=s[n+1]=r.y,t=!0}return t}updateVector3(e){let t=!1;const s=this.values,r=e.getValue(),n=e.offset;if(s[n+0]!==r.x||s[n+1]!==r.y||s[n+2]!==r.z){const e=this.buffer;e[n+0]=s[n+0]=r.x,e[n+1]=s[n+1]=r.y,e[n+2]=s[n+2]=r.z,t=!0}return t}updateVector4(e){let t=!1;const s=this.values,r=e.getValue(),n=e.offset;if(s[n+0]!==r.x||s[n+1]!==r.y||s[n+2]!==r.z||s[n+4]!==r.w){const e=this.buffer;e[n+0]=s[n+0]=r.x,e[n+1]=s[n+1]=r.y,e[n+2]=s[n+2]=r.z,e[n+3]=s[n+3]=r.w,t=!0}return t}updateColor(e){let t=!1;const s=this.values,r=e.getValue(),n=e.offset;if(s[n+0]!==r.r||s[n+1]!==r.g||s[n+2]!==r.b){const e=this.buffer;e[n+0]=s[n+0]=r.r,e[n+1]=s[n+1]=r.g,e[n+2]=s[n+2]=r.b,t=!0}return t}updateMatrix3(e){let t=!1;const s=this.values,r=e.getValue().elements,n=e.offset;if(s[n+0]!==r[0]||s[n+1]!==r[1]||s[n+2]!==r[2]||s[n+4]!==r[3]||s[n+5]!==r[4]||s[n+6]!==r[5]||s[n+8]!==r[6]||s[n+9]!==r[7]||s[n+10]!==r[8]){const e=this.buffer;e[n+0]=s[n+0]=r[0],e[n+1]=s[n+1]=r[1],e[n+2]=s[n+2]=r[2],e[n+4]=s[n+4]=r[3],e[n+5]=s[n+5]=r[4],e[n+6]=s[n+6]=r[5],e[n+8]=s[n+8]=r[6],e[n+9]=s[n+9]=r[7],e[n+10]=s[n+10]=r[8],t=!0}return t}updateMatrix4(e){let t=!1;const s=this.values,r=e.getValue().elements,n=e.offset;if(!1===function(e,t,s){for(let r=0,n=t.length;r<n;r++)if(e[s+r]!==t[r])return!1;return!0}(s,r,n)){this.buffer.set(r,n),function(e,t,s){for(let r=0,n=t.length;r<n;r++)e[s+r]=t[r]}(s,r,n),t=!0}return t}}let Vv=0;class Dv extends Lv{constructor(e,t){super(e),this.id=Vv++,this.groupNode=t,this.isNodeUniformsGroup=!0}getNodes(){const e=[];for(const t of this.uniforms){const s=t.nodeUniform.node;if(!s)throw new Error("NodeUniformsGroup: Uniform has no node.");e.push(s)}return e}}let Ov=0;class Gv extends Bv{constructor(e,t){super(e),this.id=Ov++,this.texture=t,this.version=t?t.version:0,this.store=!1,this.generation=null,this.isSampledTexture=!0}needsBindingsUpdate(e){const{texture:t}=this;return e!==this.generation?(this.generation=e,!0):t.isVideoTexture}update(){const{texture:e,version:t}=this;return t!==e.version&&(this.version=e.version,!0)}}class kv extends Gv{constructor(e,t,s,r=null){super(e,t?t.value:null),this.textureNode=t,this.groupNode=s,this.access=r}needsBindingsUpdate(e){return this.textureNode.value!==this.texture||super.needsBindingsUpdate(e)}update(){const{textureNode:e}=this;return this.texture!==e.value?(this.texture=e.value,!0):super.update()}}class zv extends kv{constructor(e,t,s,r){super(e,t,s,r),this.isSampledCubeTexture=!0}}class $v extends kv{constructor(e,t,s,r){super(e,t,s,r),this.isSampledTexture3D=!0}}const Hv={atan2:"atan",textureDimensions:"textureSize",equals:"equal"},Wv={low:"lowp",medium:"mediump",high:"highp"},jv={swizzleAssign:!0,storageBuffer:!1},qv="\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\nprecision highp sampler3D;\nprecision highp samplerCube;\nprecision highp sampler2DArray;\n\nprecision highp usampler2D;\nprecision highp usampler3D;\nprecision highp usamplerCube;\nprecision highp usampler2DArray;\n\nprecision highp isampler2D;\nprecision highp isampler3D;\nprecision highp isamplerCube;\nprecision highp isampler2DArray;\n\nprecision lowp sampler2DShadow;\n";class Kv extends XN{constructor(e,t){super(e,t,new gv),this.uniformGroups={},this.transforms=[],this.extensions={},this.builtins={vertex:[],fragment:[],compute:[]},this.useComparisonMethod=!0}needsColorSpaceToLinearSRGB(e){return!0===e.isVideoTexture&&e.colorSpace!==m}getMethod(e){return Hv[e]||e}getOutputStructName(){return""}buildFunctionCode(e){const t=e.layout,s=this.flowShaderNode(e),r=[];for(const e of t.inputs)r.push(this.getType(e.type)+" "+e.name);return`${this.getType(t.type)} ${t.name}( ${r.join(", ")} ) {\n\n\t${s.vars}\n\n${s.code}\n\treturn ${s.result};\n\n}`}setupPBO(e){const t=e.value;if(void 0===t.pbo){const e=t.array,s=t.count*t.itemSize,{itemSize:r}=t,n=t.array.constructor.name.toLowerCase().includes("int");let i=n?$e:He;2===r?i=n?We:Ce:3===r?i=n?je:qe:4===r&&(i=n?Ke:Fe);const o={Float32Array:E,Uint8Array:pe,Uint16Array:Xe,Uint32Array:f,Int8Array:Ye,Int16Array:Qe,Int32Array:y,Uint8ClampedArray:pe},a=Math.pow(2,Math.ceil(Math.log2(Math.sqrt(s/r))));let u=Math.ceil(s/r/a);a*u*r<s&&u++;const l=a*u*r,d=new e.constructor(l);d.set(e,0),t.array=d;const c=new ze(t.array,a,u,i,o[t.array.constructor.name]||E);c.needsUpdate=!0,c.isPBOTexture=!0;const h=new _u(c,null,null);h.setPrecision("high"),t.pboNode=h,t.pbo=h.value,this.getUniformFromNode(t.pboNode,"texture",this.shaderStage,this.context.label)}}getPropertyName(e,t=this.shaderStage){return e.isNodeUniform&&!0!==e.node.isTextureNode&&!0!==e.node.isBufferNode?t.charAt(0)+"_"+e.name:super.getPropertyName(e,t)}generatePBO(e){const{node:t,indexNode:s}=e,r=t.value;if(this.renderer.backend.has(r)){this.renderer.backend.get(r).pbo=r.pbo}const n=this.getUniformFromNode(r.pboNode,"texture",this.shaderStage,this.context.label),i=this.getPropertyName(n);this.increaseUsage(s);const o=s.build(this,"uint"),a=this.getDataFromNode(e);let u=a.propertyName;if(void 0===u){const s=this.getVarFromNode(e);u=this.getPropertyName(s);const n=this.getDataFromNode(t);let l=n.propertySizeName;void 0===l&&(l=u+"Size",this.getVarFromNode(t,l,"uint"),this.addLineFlowCode(`${l} = uint( textureSize( ${i}, 0 ).x )`,e),n.propertySizeName=l);const{itemSize:d}=r,c="."+Sr.join("").slice(0,d),h=`ivec2(${o} % ${l}, ${o} / ${l})`,p=this.generateTextureLoad(null,i,h,null,"0");let g="vec4";r.pbo.type===f?g="uvec4":r.pbo.type===y&&(g="ivec4"),this.addLineFlowCode(`${u} = ${g}(${p})${c}`,e),a.propertyName=u}return u}generateTextureLoad(e,t,s,r,n="0"){return r?`texelFetch( ${t}, ivec3( ${s}, ${r} ), ${n} )`:`texelFetch( ${t}, ${s}, ${n} )`}generateTexture(e,t,s,r){return e.isDepthTexture?`texture( ${t}, ${s} ).x`:(r&&(s=`vec3( ${s}, ${r} )`),`texture( ${t}, ${s} )`)}generateTextureLevel(e,t,s,r){return`textureLod( ${t}, ${s}, ${r} )`}generateTextureBias(e,t,s,r){return`texture( ${t}, ${s}, ${r} )`}generateTextureGrad(e,t,s,r){return`textureGrad( ${t}, ${s}, ${r[0]}, ${r[1]} )`}generateTextureCompare(e,t,s,r,n,i=this.shaderStage){if("fragment"===i)return`texture( ${t}, vec3( ${s}, ${r} ) )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${i} shader.`)}getVars(e){const t=[],s=this.vars[e];if(void 0!==s)for(const e of s)t.push(`${this.getVar(e.type,e.name)};`);return t.join("\n\t")}getUniforms(e){const t=this.uniforms[e],s=[],r={};for(const n of t){let t=null,i=!1;if("texture"===n.type){const e=n.node.value;let s="";!0===e.isDataTexture&&(e.type===f?s="u":e.type===y&&(s="i")),t=e.compareFunction?`sampler2DShadow ${n.name};`:!0===e.isDataArrayTexture||!0===e.isCompressedArrayTexture?`${s}sampler2DArray ${n.name};`:`${s}sampler2D ${n.name};`}else if("cubeTexture"===n.type)t=`samplerCube ${n.name};`;else if("texture3D"===n.type)t=`sampler3D ${n.name};`;else if("buffer"===n.type){const e=n.node,s=this.getType(e.bufferType),r=e.bufferCount,i=r>0?r:"";t=`${e.name} {\n\t${s} ${n.name}[${i}];\n};\n`}else{t=`${this.getVectorType(n.type)} ${this.getPropertyName(n,e)};`,i=!0}const o=n.node.precision;if(null!==o&&(t=Wv[o]+" "+t),i){t="\t"+t;const e=n.groupNode.name;(r[e]||(r[e]=[])).push(t)}else t="uniform "+t,s.push(t)}let n="";for(const t in r){const s=r[t];n+=this._getGLSLUniformStruct(e+"_"+t,s.join("\n"))+"\n"}return n+=s.join("\n"),n}getTypeFromAttribute(e){let t=super.getTypeFromAttribute(e);if(/^[iu]/.test(t)&&e.gpuType!==y){let s=e;e.isInterleavedBufferAttribute&&(s=e.data);const r=s.array;!1==(r instanceof Uint32Array||r instanceof Int32Array)&&(t=t.slice(1))}return t}getAttributes(e){let t="";if("vertex"===e||"compute"===e){const e=this.getAttributesArray();let s=0;for(const r of e)t+=`layout( location = ${s++} ) in ${r.type} ${r.name};\n`}return t}getStructMembers(e){const t=[],s=e.getMemberTypes();for(let e=0;e<s.length;e++){const r=s[e];t.push(`layout( location = ${e} ) out ${r} m${e};`)}return t.join("\n")}getStructs(e){const t=[],s=this.structs[e];if(0===s.length)return"layout( location = 0 ) out vec4 fragColor;\n";for(let e=0,r=s.length;e<r;e++){const r=s[e];let n="\n";n+=this.getStructMembers(r),n+="\n",t.push(n)}return t.join("\n\n")}getVaryings(e){let t="";const s=this.varyings;if("vertex"===e||"compute"===e)for(const r of s){"compute"===e&&(r.needsInterpolation=!0);const s=r.type;t+=`${s.includes("int")||s.includes("uv")||s.includes("iv")?"flat ":""}${r.needsInterpolation?"out":"/*out*/"} ${s} ${r.name};\n`}else if("fragment"===e)for(const e of s)if(e.needsInterpolation){const s=e.type;t+=`${s.includes("int")||s.includes("uv")||s.includes("iv")?"flat ":""}in ${s} ${e.name};\n`}for(const s of this.builtins[e])t+=`${s};\n`;return t}getVertexIndex(){return"uint( gl_VertexID )"}getInstanceIndex(){return"uint( gl_InstanceID )"}getInvocationLocalIndex(){return`uint( gl_InstanceID ) % ${this.object.workgroupSize.reduce(((e,t)=>e*t),1)}u`}getDrawIndex(){return this.renderer.backend.extensions.has("WEBGL_multi_draw")?"uint( gl_DrawID )":null}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord.xy"}getFragDepth(){return"gl_FragDepth"}enableExtension(e,t,s=this.shaderStage){const r=this.extensions[s]||(this.extensions[s]=new Map);!1===r.has(e)&&r.set(e,{name:e,behavior:t})}getExtensions(e){const t=[];if("vertex"===e){const t=this.renderer.backend.extensions;this.object.isBatchedMesh&&t.has("WEBGL_multi_draw")&&this.enableExtension("GL_ANGLE_multi_draw","require",e)}const s=this.extensions[e];if(void 0!==s)for(const{name:e,behavior:r}of s.values())t.push(`#extension ${e} : ${r}`);return t.join("\n")}getClipDistance(){return"gl_ClipDistance"}isAvailable(e){let t=jv[e];if(void 0===t){let s;switch(t=!1,e){case"float32Filterable":s="OES_texture_float_linear";break;case"clipDistance":s="WEBGL_clip_cull_distance"}if(void 0!==s){const e=this.renderer.backend.extensions;e.has(s)&&(e.get(s),t=!0)}jv[e]=t}return t}isFlipY(){return!0}enableHardwareClipping(e){this.enableExtension("GL_ANGLE_clip_cull_distance","require"),this.builtins.vertex.push(`out float gl_ClipDistance[ ${e} ]`)}registerTransform(e,t){this.transforms.push({varyingName:e,attributeNode:t})}getTransforms(){const e=this.transforms;let t="";for(let s=0;s<e.length;s++){const r=e[s],n=this.getPropertyName(r.attributeNode);t+=`${r.varyingName} = ${n};\n\t`}return t}_getGLSLUniformStruct(e,t){return`\nlayout( std140 ) uniform ${e} {\n${t}\n};`}_getGLSLVertexCode(e){return`#version 300 es\n\n${this.getSignature()}\n\n// extensions \n${e.extensions}\n\n// precision\n${qv}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\n\n// attributes\n${e.attributes}\n\n// codes\n${e.codes}\n\nvoid main() {\n\n\t// vars\n\t${e.vars}\n\n\t// transforms\n\t${e.transforms}\n\n\t// flow\n\t${e.flow}\n\n\tgl_PointSize = 1.0;\n\n}\n`}_getGLSLFragmentCode(e){return`#version 300 es\n\n${this.getSignature()}\n\n// precision\n${qv}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\n\n// codes\n${e.codes}\n\n${e.structs}\n\nvoid main() {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}buildCode(){const e=null!==this.material?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){let s="// code\n\n";s+=this.flowCode[t];const r=this.flowNodes[t],n=r[r.length-1];for(const e of r){const r=this.getFlowData(e),i=e.name;i&&(s.length>0&&(s+="\n"),s+=`\t// flow -> ${i}\n\t`),s+=`${r.code}\n\t`,e===n&&"compute"!==t&&(s+="// result\n\t","vertex"===t?(s+="gl_Position = ",s+=`${r.result};`):"fragment"===t&&(e.outputNode.isOutputStructNode||(s+="fragColor = ",s+=`${r.result};`)))}const i=e[t];i.extensions=this.getExtensions(t),i.uniforms=this.getUniforms(t),i.attributes=this.getAttributes(t),i.varyings=this.getVaryings(t),i.vars=this.getVars(t),i.structs=this.getStructs(t),i.codes=this.getCodes(t),i.transforms=this.getTransforms(t),i.flow=s}null!==this.material?(this.vertexShader=this._getGLSLVertexCode(e.vertex),this.fragmentShader=this._getGLSLFragmentCode(e.fragment)):this.computeShader=this._getGLSLVertexCode(e.compute)}getUniformFromNode(e,t,s,r=null){const n=super.getUniformFromNode(e,t,s,r),i=this.getDataFromNode(e,s,this.globalCache);let o=i.uniformGPU;if(void 0===o){const r=e.groupNode,a=r.name,u=this.getBindGroupArray(a,s);if("texture"===t)o=new kv(n.name,n.node,r),u.push(o);else if("cubeTexture"===t)o=new zv(n.name,n.node,r),u.push(o);else if("texture3D"===t)o=new $v(n.name,n.node,r),u.push(o);else if("buffer"===t){e.name=`NodeBuffer_${e.id}`,n.name=`buffer${e.id}`;const t=new Iv(e,r);t.name=e.name,u.push(t),o=t}else{const e=this.uniformGroups[s]||(this.uniformGroups[s]={});let i=e[a];void 0===i&&(i=new Dv(s+"_"+a,r),e[a]=i,u.push(i)),o=this.getNodeUniform(n,t),i.addUniform(o)}i.uniformGPU=o}return n}}let Xv=null,Yv=null,Qv=null;class Zv{constructor(e={}){this.parameters=Object.assign({},e),this.data=new WeakMap,this.renderer=null,this.domElement=null}async init(e){this.renderer=e}begin(){}finish(){}draw(){}createProgram(){}destroyProgram(){}createBindings(){}updateBindings(){}createRenderPipeline(){}createComputePipeline(){}destroyPipeline(){}needsRenderUpdate(){}getRenderCacheKey(){}createNodeBuilder(){}createSampler(){}createDefaultTexture(){}createTexture(){}copyTextureToBuffer(){}createAttribute(){}createIndexAttribute(){}updateAttribute(){}destroyAttribute(){}getContext(){}updateSize(){}resolveTimestampAsync(){}hasFeatureAsync(){}hasFeature(){}getInstanceCount(e){const{object:t,geometry:s}=e;return s.isInstancedBufferGeometry?s.instanceCount:t.count>1?t.count:1}getDrawingBufferSize(){return Xv=Xv||new t,this.renderer.getDrawingBufferSize(Xv)}getScissor(){return Yv=Yv||new r,this.renderer.getScissor(Yv)}setScissorTest(){}getClearColor(){const e=this.renderer;return Qv=Qv||new mm,e.getClearColor(Qv),Qv.getRGB(Qv,this.renderer.currentColorSpace),Qv}getDomElement(){let e=this.domElement;return null===e&&(e=void 0!==this.parameters.canvas?this.parameters.canvas:Ze(),"setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Ve} webgpu`),this.domElement=e),e}set(e,t){this.data.set(e,t)}get(e){let t=this.data.get(e);return void 0===t&&(t={},this.data.set(e,t)),t}has(e){return this.data.has(e)}delete(e){this.data.delete(e)}dispose(){}}let Jv=0;class eS{constructor(e,t){this.buffers=[e.bufferGPU,t],this.type=e.type,this.bufferType=e.bufferType,this.pbo=e.pbo,this.byteLength=e.byteLength,this.bytesPerElement=e.BYTES_PER_ELEMENT,this.version=e.version,this.isInteger=e.isInteger,this.activeBufferIndex=0,this.baseId=e.id}get id(){return`${this.baseId}|${this.activeBufferIndex}`}get bufferGPU(){return this.buffers[this.activeBufferIndex]}get transformBuffer(){return this.buffers[1^this.activeBufferIndex]}switchBuffers(){this.activeBufferIndex^=1}}class tS{constructor(e){this.backend=e}createAttribute(e,t){const s=this.backend,{gl:r}=s,n=e.array,i=e.usage||r.STATIC_DRAW,o=e.isInterleavedBufferAttribute?e.data:e,a=s.get(o);let u,l=a.bufferGPU;if(void 0===l&&(l=this._createBuffer(r,t,n,i),a.bufferGPU=l,a.bufferType=t,a.version=o.version),n instanceof Float32Array)u=r.FLOAT;else if(n instanceof Uint16Array)u=e.isFloat16BufferAttribute?r.HALF_FLOAT:r.UNSIGNED_SHORT;else if(n instanceof Int16Array)u=r.SHORT;else if(n instanceof Uint32Array)u=r.UNSIGNED_INT;else if(n instanceof Int32Array)u=r.INT;else if(n instanceof Int8Array)u=r.BYTE;else if(n instanceof Uint8Array)u=r.UNSIGNED_BYTE;else{if(!(n instanceof Uint8ClampedArray))throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+n);u=r.UNSIGNED_BYTE}let d={bufferGPU:l,bufferType:t,type:u,byteLength:n.byteLength,bytesPerElement:n.BYTES_PER_ELEMENT,version:e.version,pbo:e.pbo,isInteger:u===r.INT||u===r.UNSIGNED_INT||e.gpuType===y,id:Jv++};if(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute){const e=this._createBuffer(r,t,n,i);d=new eS(d,e)}s.set(e,d)}updateAttribute(e){const t=this.backend,{gl:s}=t,r=e.array,n=e.isInterleavedBufferAttribute?e.data:e,i=t.get(n),o=i.bufferType,a=e.isInterleavedBufferAttribute?e.data.updateRanges:e.updateRanges;if(s.bindBuffer(o,i.bufferGPU),0===a.length)s.bufferSubData(o,0,r);else{for(let e=0,t=a.length;e<t;e++){const t=a[e];s.bufferSubData(o,t.start*r.BYTES_PER_ELEMENT,r,t.start,t.count)}n.clearUpdateRanges()}s.bindBuffer(o,null),i.version=n.version}destroyAttribute(e){const t=this.backend,{gl:s}=t;e.isInterleavedBufferAttribute&&t.delete(e.data);const r=t.get(e);s.deleteBuffer(r.bufferGPU),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,{gl:s}=t,r=e.isInterleavedBufferAttribute?e.data:e,{bufferGPU:n}=t.get(r),i=e.array,o=i.byteLength;s.bindBuffer(s.COPY_READ_BUFFER,n);const a=s.createBuffer();s.bindBuffer(s.COPY_WRITE_BUFFER,a),s.bufferData(s.COPY_WRITE_BUFFER,o,s.STREAM_READ),s.copyBufferSubData(s.COPY_READ_BUFFER,s.COPY_WRITE_BUFFER,0,0,o),await t.utils._clientWaitAsync();const u=new e.array.constructor(i.length);return s.bindBuffer(s.COPY_WRITE_BUFFER,a),s.getBufferSubData(s.COPY_WRITE_BUFFER,0,u),s.deleteBuffer(a),s.bindBuffer(s.COPY_READ_BUFFER,null),s.bindBuffer(s.COPY_WRITE_BUFFER,null),u.buffer}_createBuffer(e,t,s,r){const n=e.createBuffer();return e.bindBuffer(t,n),e.bufferData(t,s,r),e.bindBuffer(t,null),n}}let sS,rS,nS=!1;class iS{constructor(e){this.backend=e,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,this.currentLineWidth=null,this.currentClippingPlanes=0,this.currentBoundFramebuffers={},this.currentDrawbuffers=new WeakMap,this.maxTextures=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBufferBases={},!1===nS&&(this._init(this.gl),nS=!0)}_init(e){sS={[Je]:e.FUNC_ADD,[et]:e.FUNC_SUBTRACT,[tt]:e.FUNC_REVERSE_SUBTRACT},rS={[st]:e.ZERO,[rt]:e.ONE,[nt]:e.SRC_COLOR,[it]:e.SRC_ALPHA,[ot]:e.SRC_ALPHA_SATURATE,[at]:e.DST_COLOR,[ut]:e.DST_ALPHA,[lt]:e.ONE_MINUS_SRC_COLOR,[dt]:e.ONE_MINUS_SRC_ALPHA,[ct]:e.ONE_MINUS_DST_COLOR,[ht]:e.ONE_MINUS_DST_ALPHA}}enable(e){const{enabled:t}=this;!0!==t[e]&&(this.gl.enable(e),t[e]=!0)}disable(e){const{enabled:t}=this;!1!==t[e]&&(this.gl.disable(e),t[e]=!1)}setFlipSided(e){if(this.currentFlipSided!==e){const{gl:t}=this;e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e}}setCullFace(e){const{gl:t}=this;e!==pt?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===gt?t.cullFace(t.BACK):e===mt?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e}setLineWidth(e){const{currentLineWidth:t,gl:s}=this;e!==t&&(s.lineWidth(e),this.currentLineWidth=e)}setBlending(e,t,s,r,n,i,o,a){const{gl:u}=this;if(e!==G){if(!1===this.currentBlendingEnabled&&(this.enable(u.BLEND),this.currentBlendingEnabled=!0),e===ft)n=n||t,i=i||s,o=o||r,t===this.currentBlendEquation&&n===this.currentBlendEquationAlpha||(u.blendEquationSeparate(sS[t],sS[n]),this.currentBlendEquation=t,this.currentBlendEquationAlpha=n),s===this.currentBlendSrc&&r===this.currentBlendDst&&i===this.currentBlendSrcAlpha&&o===this.currentBlendDstAlpha||(u.blendFuncSeparate(rS[s],rS[r],rS[i],rS[o]),this.currentBlendSrc=s,this.currentBlendDst=r,this.currentBlendSrcAlpha=i,this.currentBlendDstAlpha=o),this.currentBlending=e,this.currentPremultipledAlpha=!1;else if(e!==this.currentBlending||a!==this.currentPremultipledAlpha){if(this.currentBlendEquation===Je&&this.currentBlendEquationAlpha===Je||(u.blendEquation(u.FUNC_ADD),this.currentBlendEquation=Je,this.currentBlendEquationAlpha=Je),a)switch(e){case F:u.blendFuncSeparate(u.ONE,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA);break;case xt:u.blendFunc(u.ONE,u.ONE);break;case bt:u.blendFuncSeparate(u.ZERO,u.ONE_MINUS_SRC_COLOR,u.ZERO,u.ONE);break;case yt:u.blendFuncSeparate(u.ZERO,u.SRC_COLOR,u.ZERO,u.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case F:u.blendFuncSeparate(u.SRC_ALPHA,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA);break;case xt:u.blendFunc(u.SRC_ALPHA,u.ONE);break;case bt:u.blendFuncSeparate(u.ZERO,u.ONE_MINUS_SRC_COLOR,u.ZERO,u.ONE);break;case yt:u.blendFunc(u.ZERO,u.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=e,this.currentPremultipledAlpha=a}}else!0===this.currentBlendingEnabled&&(this.disable(u.BLEND),this.currentBlendingEnabled=!1)}setColorMask(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)}setDepthTest(e){const{gl:t}=this;e?this.enable(t.DEPTH_TEST):this.disable(t.DEPTH_TEST)}setDepthMask(e){this.currentDepthMask!==e&&(this.gl.depthMask(e),this.currentDepthMask=e)}setDepthFunc(e){if(this.currentDepthFunc!==e){const{gl:t}=this;switch(e){case Ct:t.depthFunc(t.NEVER);break;case Rt:t.depthFunc(t.ALWAYS);break;case At:t.depthFunc(t.LESS);break;case St:t.depthFunc(t.LEQUAL);break;case vt:t.depthFunc(t.EQUAL);break;case Nt:t.depthFunc(t.GEQUAL);break;case _t:t.depthFunc(t.GREATER);break;case Tt:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}this.currentDepthFunc=e}}setStencilTest(e){const{gl:t}=this;e?this.enable(t.STENCIL_TEST):this.disable(t.STENCIL_TEST)}setStencilMask(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)}setStencilFunc(e,t,s){this.currentStencilFunc===e&&this.currentStencilRef===t&&this.currentStencilFuncMask===s||(this.gl.stencilFunc(e,t,s),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=s)}setStencilOp(e,t,s){this.currentStencilFail===e&&this.currentStencilZFail===t&&this.currentStencilZPass===s||(this.gl.stencilOp(e,t,s),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=s)}setMaterial(e,t,s){const{gl:r}=this;e.side===le?this.disable(r.CULL_FACE):this.enable(r.CULL_FACE);let n=e.side===x;t&&(n=!n),this.setFlipSided(n),e.blending===F&&!1===e.transparent?this.setBlending(G):this.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),this.setDepthFunc(e.depthFunc),this.setDepthTest(e.depthTest),this.setDepthMask(e.depthWrite),this.setColorMask(e.colorWrite);const i=e.stencilWrite;if(this.setStencilTest(i),i&&(this.setStencilMask(e.stencilWriteMask),this.setStencilFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),this.setStencilOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),this.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage&&this.backend.renderer.samples>1?this.enable(r.SAMPLE_ALPHA_TO_COVERAGE):this.disable(r.SAMPLE_ALPHA_TO_COVERAGE),s>0&&this.currentClippingPlanes!==s){const e=12288;for(let t=0;t<8;t++)t<s?this.enable(e+t):this.disable(e+t)}}setPolygonOffset(e,t,s){const{gl:r}=this;e?(this.enable(r.POLYGON_OFFSET_FILL),this.currentPolygonOffsetFactor===t&&this.currentPolygonOffsetUnits===s||(r.polygonOffset(t,s),this.currentPolygonOffsetFactor=t,this.currentPolygonOffsetUnits=s)):this.disable(r.POLYGON_OFFSET_FILL)}useProgram(e){return this.currentProgram!==e&&(this.gl.useProgram(e),this.currentProgram=e,!0)}bindFramebuffer(e,t){const{gl:s,currentBoundFramebuffers:r}=this;return r[e]!==t&&(s.bindFramebuffer(e,t),r[e]=t,e===s.DRAW_FRAMEBUFFER&&(r[s.FRAMEBUFFER]=t),e===s.FRAMEBUFFER&&(r[s.DRAW_FRAMEBUFFER]=t),!0)}drawBuffers(e,t){const{gl:s}=this;let r=[],n=!1;if(null!==e.textures){r=this.currentDrawbuffers.get(t),void 0===r&&(r=[],this.currentDrawbuffers.set(t,r));const i=e.textures;if(r.length!==i.length||r[0]!==s.COLOR_ATTACHMENT0){for(let e=0,t=i.length;e<t;e++)r[e]=s.COLOR_ATTACHMENT0+e;r.length=i.length,n=!0}}else r[0]!==s.BACK&&(r[0]=s.BACK,n=!0);n&&s.drawBuffers(r)}activeTexture(e){const{gl:t,currentTextureSlot:s,maxTextures:r}=this;void 0===e&&(e=t.TEXTURE0+r-1),s!==e&&(t.activeTexture(e),this.currentTextureSlot=e)}bindTexture(e,t,s){const{gl:r,currentTextureSlot:n,currentBoundTextures:i,maxTextures:o}=this;void 0===s&&(s=null===n?r.TEXTURE0+o-1:n);let a=i[s];void 0===a&&(a={type:void 0,texture:void 0},i[s]=a),a.type===e&&a.texture===t||(n!==s&&(r.activeTexture(s),this.currentTextureSlot=s),r.bindTexture(e,t),a.type=e,a.texture=t)}bindBufferBase(e,t,s){const{gl:r}=this,n=`${e}-${t}`;return this.currentBoundBufferBases[n]!==s&&(r.bindBufferBase(e,t,s),this.currentBoundBufferBases[n]=s,!0)}unbindTexture(){const{gl:e,currentTextureSlot:t,currentBoundTextures:s}=this,r=s[t];void 0!==r&&void 0!==r.type&&(e.bindTexture(r.type,null),r.type=void 0,r.texture=void 0)}}class oS{constructor(e){this.backend=e,this.gl=this.backend.gl,this.extensions=e.extensions}convert(e,t=m){const{gl:s,extensions:r}=this;let n;if(e===pe)return s.UNSIGNED_BYTE;if(e===Et)return s.UNSIGNED_SHORT_4_4_4_4;if(e===wt)return s.UNSIGNED_SHORT_5_5_5_1;if(e===Mt)return s.UNSIGNED_INT_5_9_9_9_REV;if(e===Ye)return s.BYTE;if(e===Qe)return s.SHORT;if(e===Xe)return s.UNSIGNED_SHORT;if(e===y)return s.INT;if(e===f)return s.UNSIGNED_INT;if(e===E)return s.FLOAT;if(e===ye)return s.HALF_FLOAT;if(e===Bt)return s.ALPHA;if(e===qe)return s.RGB;if(e===Fe)return s.RGBA;if(e===Ut)return s.LUMINANCE;if(e===Ft)return s.LUMINANCE_ALPHA;if(e===ce)return s.DEPTH_COMPONENT;if(e===de)return s.DEPTH_STENCIL;if(e===He)return s.RED;if(e===$e)return s.RED_INTEGER;if(e===Ce)return s.RG;if(e===We)return s.RG_INTEGER;if(e===Ke)return s.RGBA_INTEGER;if(e===Pt||e===It||e===Lt||e===Vt)if(t===De){if(n=r.get("WEBGL_compressed_texture_s3tc_srgb"),null===n)return null;if(e===Pt)return n.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===It)return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===Lt)return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===Vt)return n.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(n=r.get("WEBGL_compressed_texture_s3tc"),null===n)return null;if(e===Pt)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===It)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===Lt)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===Vt)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===Dt||e===Ot||e===Gt||e===kt){if(n=r.get("WEBGL_compressed_texture_pvrtc"),null===n)return null;if(e===Dt)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===Ot)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===Gt)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===kt)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===zt||e===$t||e===Ht){if(n=r.get("WEBGL_compressed_texture_etc"),null===n)return null;if(e===zt||e===$t)return t===De?n.COMPRESSED_SRGB8_ETC2:n.COMPRESSED_RGB8_ETC2;if(e===Ht)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:n.COMPRESSED_RGBA8_ETC2_EAC}if(e===Wt||e===jt||e===qt||e===Kt||e===Xt||e===Yt||e===Qt||e===Zt||e===Jt||e===es||e===ts||e===ss||e===rs||e===ns){if(n=r.get("WEBGL_compressed_texture_astc"),null===n)return null;if(e===Wt)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:n.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===jt)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:n.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===qt)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:n.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===Kt)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:n.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===Xt)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:n.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===Yt)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:n.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===Qt)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:n.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===Zt)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:n.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===Jt)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:n.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===es)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:n.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===ts)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:n.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===ss)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:n.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===rs)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:n.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===ns)return t===De?n.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:n.COMPRESSED_RGBA_ASTC_12x12_KHR}if(e===is){if(n=r.get("EXT_texture_compression_bptc"),null===n)return null;if(e===is)return t===De?n.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:n.COMPRESSED_RGBA_BPTC_UNORM_EXT}if(e===os||e===as||e===us||e===ls){if(n=r.get("EXT_texture_compression_rgtc"),null===n)return null;if(e===is)return n.COMPRESSED_RED_RGTC1_EXT;if(e===as)return n.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(e===us)return n.COMPRESSED_RED_GREEN_RGTC2_EXT;if(e===ls)return n.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return e===he?s.UNSIGNED_INT_24_8:void 0!==s[e]?s[e]:null}_clientWaitAsync(){const{gl:e}=this,t=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),new Promise(((s,r)=>{!function n(){const i=e.clientWaitSync(t,e.SYNC_FLUSH_COMMANDS_BIT,0);if(i===e.WAIT_FAILED)return e.deleteSync(t),void r();i!==e.TIMEOUT_EXPIRED?(e.deleteSync(t),s()):requestAnimationFrame(n)}()}))}}let aS,uS,lS,dS=!1;class cS{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,this.defaultTextures={},!1===dS&&(this._init(this.gl),dS=!0)}_init(e){aS={[ds]:e.REPEAT,[cs]:e.CLAMP_TO_EDGE,[hs]:e.MIRRORED_REPEAT},uS={[ps]:e.NEAREST,[gs]:e.NEAREST_MIPMAP_NEAREST,[Ie]:e.NEAREST_MIPMAP_LINEAR,[$]:e.LINEAR,[Pe]:e.LINEAR_MIPMAP_NEAREST,[M]:e.LINEAR_MIPMAP_LINEAR},lS={[ms]:e.NEVER,[fs]:e.ALWAYS,[Ae]:e.LESS,[ys]:e.LEQUAL,[bs]:e.EQUAL,[xs]:e.GEQUAL,[Ts]:e.GREATER,[_s]:e.NOTEQUAL}}filterFallback(e){const{gl:t}=this;return e===ps||e===gs||e===Ie?t.NEAREST:t.LINEAR}getGLTextureType(e){const{gl:t}=this;let s;return s=!0===e.isCubeTexture?t.TEXTURE_CUBE_MAP:!0===e.isDataArrayTexture||!0===e.isCompressedArrayTexture?t.TEXTURE_2D_ARRAY:!0===e.isData3DTexture?t.TEXTURE_3D:t.TEXTURE_2D,s}getInternalFormat(e,t,s,r,n=!1){const{gl:i,extensions:o}=this;if(null!==e){if(void 0!==i[e])return i[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let a=t;return t===i.RED&&(s===i.FLOAT&&(a=i.R32F),s===i.HALF_FLOAT&&(a=i.R16F),s===i.UNSIGNED_BYTE&&(a=i.R8),s===i.UNSIGNED_SHORT&&(a=i.R16),s===i.UNSIGNED_INT&&(a=i.R32UI),s===i.BYTE&&(a=i.R8I),s===i.SHORT&&(a=i.R16I),s===i.INT&&(a=i.R32I)),t===i.RED_INTEGER&&(s===i.UNSIGNED_BYTE&&(a=i.R8UI),s===i.UNSIGNED_SHORT&&(a=i.R16UI),s===i.UNSIGNED_INT&&(a=i.R32UI),s===i.BYTE&&(a=i.R8I),s===i.SHORT&&(a=i.R16I),s===i.INT&&(a=i.R32I)),t===i.RG&&(s===i.FLOAT&&(a=i.RG32F),s===i.HALF_FLOAT&&(a=i.RG16F),s===i.UNSIGNED_BYTE&&(a=i.RG8),s===i.UNSIGNED_SHORT&&(a=i.RG16),s===i.UNSIGNED_INT&&(a=i.RG32UI),s===i.BYTE&&(a=i.RG8I),s===i.SHORT&&(a=i.RG16I),s===i.INT&&(a=i.RG32I)),t===i.RG_INTEGER&&(s===i.UNSIGNED_BYTE&&(a=i.RG8UI),s===i.UNSIGNED_SHORT&&(a=i.RG16UI),s===i.UNSIGNED_INT&&(a=i.RG32UI),s===i.BYTE&&(a=i.RG8I),s===i.SHORT&&(a=i.RG16I),s===i.INT&&(a=i.RG32I)),t===i.RGB&&(s===i.FLOAT&&(a=i.RGB32F),s===i.HALF_FLOAT&&(a=i.RGB16F),s===i.UNSIGNED_BYTE&&(a=i.RGB8),s===i.UNSIGNED_SHORT&&(a=i.RGB16),s===i.UNSIGNED_INT&&(a=i.RGB32UI),s===i.BYTE&&(a=i.RGB8I),s===i.SHORT&&(a=i.RGB16I),s===i.INT&&(a=i.RGB32I),s===i.UNSIGNED_BYTE&&(a=r===De&&!1===n?i.SRGB8:i.RGB8),s===i.UNSIGNED_SHORT_5_6_5&&(a=i.RGB565),s===i.UNSIGNED_SHORT_5_5_5_1&&(a=i.RGB5_A1),s===i.UNSIGNED_SHORT_4_4_4_4&&(a=i.RGB4),s===i.UNSIGNED_INT_5_9_9_9_REV&&(a=i.RGB9_E5)),t===i.RGB_INTEGER&&(s===i.UNSIGNED_BYTE&&(a=i.RGB8UI),s===i.UNSIGNED_SHORT&&(a=i.RGB16UI),s===i.UNSIGNED_INT&&(a=i.RGB32UI),s===i.BYTE&&(a=i.RGB8I),s===i.SHORT&&(a=i.RGB16I),s===i.INT&&(a=i.RGB32I)),t===i.RGBA&&(s===i.FLOAT&&(a=i.RGBA32F),s===i.HALF_FLOAT&&(a=i.RGBA16F),s===i.UNSIGNED_BYTE&&(a=i.RGBA8),s===i.UNSIGNED_SHORT&&(a=i.RGBA16),s===i.UNSIGNED_INT&&(a=i.RGBA32UI),s===i.BYTE&&(a=i.RGBA8I),s===i.SHORT&&(a=i.RGBA16I),s===i.INT&&(a=i.RGBA32I),s===i.UNSIGNED_BYTE&&(a=r===De&&!1===n?i.SRGB8_ALPHA8:i.RGBA8),s===i.UNSIGNED_SHORT_4_4_4_4&&(a=i.RGBA4),s===i.UNSIGNED_SHORT_5_5_5_1&&(a=i.RGB5_A1)),t===i.RGBA_INTEGER&&(s===i.UNSIGNED_BYTE&&(a=i.RGBA8UI),s===i.UNSIGNED_SHORT&&(a=i.RGBA16UI),s===i.UNSIGNED_INT&&(a=i.RGBA32UI),s===i.BYTE&&(a=i.RGBA8I),s===i.SHORT&&(a=i.RGBA16I),s===i.INT&&(a=i.RGBA32I)),t===i.DEPTH_COMPONENT&&(s===i.UNSIGNED_INT&&(a=i.DEPTH24_STENCIL8),s===i.FLOAT&&(a=i.DEPTH_COMPONENT32F)),t===i.DEPTH_STENCIL&&s===i.UNSIGNED_INT_24_8&&(a=i.DEPTH24_STENCIL8),a!==i.R16F&&a!==i.R32F&&a!==i.RG16F&&a!==i.RG32F&&a!==i.RGBA16F&&a!==i.RGBA32F||o.get("EXT_color_buffer_float"),a}setTextureParameters(e,t){const{gl:s,extensions:r,backend:n}=this;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,t.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,t.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,s.NONE),s.texParameteri(e,s.TEXTURE_WRAP_S,aS[t.wrapS]),s.texParameteri(e,s.TEXTURE_WRAP_T,aS[t.wrapT]),e!==s.TEXTURE_3D&&e!==s.TEXTURE_2D_ARRAY||s.texParameteri(e,s.TEXTURE_WRAP_R,aS[t.wrapR]),s.texParameteri(e,s.TEXTURE_MAG_FILTER,uS[t.magFilter]);const i=void 0!==t.mipmaps&&t.mipmaps.length>0,o=t.minFilter===$&&i?M:t.minFilter;if(s.texParameteri(e,s.TEXTURE_MIN_FILTER,uS[o]),t.compareFunction&&(s.texParameteri(e,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(e,s.TEXTURE_COMPARE_FUNC,lS[t.compareFunction])),!0===r.has("EXT_texture_filter_anisotropic")){if(t.magFilter===ps)return;if(t.minFilter!==Ie&&t.minFilter!==M)return;if(t.type===E&&!1===r.has("OES_texture_float_linear"))return;if(t.anisotropy>1){const i=r.get("EXT_texture_filter_anisotropic");s.texParameterf(e,i.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,n.getMaxAnisotropy()))}}}createDefaultTexture(e){const{gl:t,backend:s,defaultTextures:r}=this,n=this.getGLTextureType(e);let i=r[n];void 0===i&&(i=t.createTexture(),s.state.bindTexture(n,i),t.texParameteri(n,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(n,t.TEXTURE_MAG_FILTER,t.NEAREST),r[n]=i),s.set(e,{textureGPU:i,glTextureType:n,isDefault:!0})}createTexture(e,t){const{gl:s,backend:r}=this,{levels:n,width:i,height:o,depth:a}=t,u=r.utils.convert(e.format,e.colorSpace),l=r.utils.convert(e.type),d=this.getInternalFormat(e.internalFormat,u,l,e.colorSpace,e.isVideoTexture),c=s.createTexture(),h=this.getGLTextureType(e);r.state.bindTexture(h,c),this.setTextureParameters(h,e),e.isDataArrayTexture||e.isCompressedArrayTexture?s.texStorage3D(s.TEXTURE_2D_ARRAY,n,d,i,o,a):e.isData3DTexture?s.texStorage3D(s.TEXTURE_3D,n,d,i,o,a):e.isVideoTexture||s.texStorage2D(h,n,d,i,o),r.set(e,{textureGPU:c,glTextureType:h,glFormat:u,glType:l,glInternalFormat:d})}copyBufferToTexture(e,t){const{gl:s,backend:r}=this,{textureGPU:n,glTextureType:i,glFormat:o,glType:a}=r.get(t),{width:u,height:l}=t.source.data;s.bindBuffer(s.PIXEL_UNPACK_BUFFER,e),r.state.bindTexture(i,n),s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,!1),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),s.texSubImage2D(i,0,0,0,u,l,o,a,0),s.bindBuffer(s.PIXEL_UNPACK_BUFFER,null),r.state.unbindTexture()}updateTexture(e,t){const{gl:s}=this,{width:r,height:n}=t,{textureGPU:i,glTextureType:o,glFormat:a,glType:u,glInternalFormat:l}=this.backend.get(e);if(e.isRenderTargetTexture||void 0===i)return;const d=e=>e.isDataTexture?e.image.data:"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap||e instanceof OffscreenCanvas?e:e.data;if(this.backend.state.bindTexture(o,i),this.setTextureParameters(o,e),e.isCompressedTexture){const r=e.mipmaps,n=t.image;for(let t=0;t<r.length;t++){const i=r[t];e.isCompressedArrayTexture?e.format!==s.RGBA?null!==a?s.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,t,0,0,0,i.width,i.height,n.depth,a,i.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):s.texSubImage3D(s.TEXTURE_2D_ARRAY,t,0,0,0,i.width,i.height,n.depth,a,u,i.data):null!==a?s.compressedTexSubImage2D(s.TEXTURE_2D,t,0,0,i.width,i.height,a,i.data):console.warn("Unsupported compressed texture format")}}else if(e.isCubeTexture){const e=t.images;for(let t=0;t<6;t++){const i=d(e[t]);s.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,r,n,a,u,i)}}else if(e.isDataArrayTexture){const e=t.image;s.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,e.width,e.height,e.depth,a,u,e.data)}else if(e.isData3DTexture){const e=t.image;s.texSubImage3D(s.TEXTURE_3D,0,0,0,0,e.width,e.height,e.depth,a,u,e.data)}else if(e.isVideoTexture)e.update(),s.texImage2D(o,0,l,a,u,t.image);else{const e=d(t.image);s.texSubImage2D(o,0,0,0,r,n,a,u,e)}}generateMipmaps(e){const{gl:t,backend:s}=this,{textureGPU:r,glTextureType:n}=s.get(e);s.state.bindTexture(n,r),t.generateMipmap(n)}deallocateRenderBuffers(e){const{gl:t,backend:s}=this;if(e){const r=s.get(e);if(r.renderBufferStorageSetup=void 0,r.framebuffers){for(const e in r.framebuffers)t.deleteFramebuffer(r.framebuffers[e]);delete r.framebuffers}if(r.depthRenderbuffer&&(t.deleteRenderbuffer(r.depthRenderbuffer),delete r.depthRenderbuffer),r.stencilRenderbuffer&&(t.deleteRenderbuffer(r.stencilRenderbuffer),delete r.stencilRenderbuffer),r.msaaFrameBuffer&&(t.deleteFramebuffer(r.msaaFrameBuffer),delete r.msaaFrameBuffer),r.msaaRenderbuffers){for(let e=0;e<r.msaaRenderbuffers.length;e++)t.deleteRenderbuffer(r.msaaRenderbuffers[e]);delete r.msaaRenderbuffers}}}destroyTexture(e){const{gl:t,backend:s}=this,{textureGPU:r,renderTarget:n}=s.get(e);this.deallocateRenderBuffers(n),t.deleteTexture(r),s.delete(e)}copyTextureToTexture(e,t,s=null,r=null,n=0){const{gl:i,backend:o}=this,{state:a}=this.backend,{textureGPU:u,glTextureType:l,glType:d,glFormat:c}=o.get(t);let h,p,g,m,f,y;null!==s?(h=s.max.x-s.min.x,p=s.max.y-s.min.y,g=s.min.x,m=s.min.y):(h=e.image.width,p=e.image.height,g=0,m=0),null!==r?(f=r.x,y=r.y):(f=0,y=0),a.bindTexture(l,u),i.pixelStorei(i.UNPACK_ALIGNMENT,t.unpackAlignment),i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,t.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,t.unpackAlignment);const b=i.getParameter(i.UNPACK_ROW_LENGTH),x=i.getParameter(i.UNPACK_IMAGE_HEIGHT),T=i.getParameter(i.UNPACK_SKIP_PIXELS),_=i.getParameter(i.UNPACK_SKIP_ROWS),N=i.getParameter(i.UNPACK_SKIP_IMAGES),v=e.isCompressedTexture?e.mipmaps[n]:e.image;if(i.pixelStorei(i.UNPACK_ROW_LENGTH,v.width),i.pixelStorei(i.UNPACK_IMAGE_HEIGHT,v.height),i.pixelStorei(i.UNPACK_SKIP_PIXELS,g),i.pixelStorei(i.UNPACK_SKIP_ROWS,m),e.isRenderTargetTexture||e.isDepthTexture){const s=o.get(e),r=o.get(t),n=o.get(s.renderTarget),u=o.get(r.renderTarget),l=n.framebuffers[s.cacheKey],d=u.framebuffers[r.cacheKey];a.bindFramebuffer(i.READ_FRAMEBUFFER,l),a.bindFramebuffer(i.DRAW_FRAMEBUFFER,d);let c=i.COLOR_BUFFER_BIT;e.isDepthTexture&&(c=i.DEPTH_BUFFER_BIT),i.blitFramebuffer(g,m,h,p,f,y,h,p,c,i.NEAREST),a.bindFramebuffer(i.READ_FRAMEBUFFER,null),a.bindFramebuffer(i.DRAW_FRAMEBUFFER,null)}else e.isDataTexture?i.texSubImage2D(i.TEXTURE_2D,n,f,y,h,p,c,d,v.data):e.isCompressedTexture?i.compressedTexSubImage2D(i.TEXTURE_2D,n,f,y,v.width,v.height,c,v.data):i.texSubImage2D(i.TEXTURE_2D,n,f,y,h,p,c,d,v);i.pixelStorei(i.UNPACK_ROW_LENGTH,b),i.pixelStorei(i.UNPACK_IMAGE_HEIGHT,x),i.pixelStorei(i.UNPACK_SKIP_PIXELS,T),i.pixelStorei(i.UNPACK_SKIP_ROWS,_),i.pixelStorei(i.UNPACK_SKIP_IMAGES,N),0===n&&t.generateMipmaps&&i.generateMipmap(i.TEXTURE_2D),a.unbindTexture()}copyFramebufferToTexture(e,t,s){const{gl:r}=this,{state:n}=this.backend,{textureGPU:i}=this.backend.get(e),{x:o,y:a,z:u,w:l}=s,d=!0===e.isDepthTexture||t.renderTarget&&t.renderTarget.samples>0,c=t.renderTarget?t.renderTarget.height:this.backend.gerDrawingBufferSize().y;if(d){const s=0!==o||0!==a;let d,h;if(!0===e.isDepthTexture?(d=r.DEPTH_BUFFER_BIT,h=r.DEPTH_ATTACHMENT,t.stencil&&(d|=r.STENCIL_BUFFER_BIT)):(d=r.COLOR_BUFFER_BIT,h=r.COLOR_ATTACHMENT0),s){const e=this.backend.get(t.renderTarget),s=e.framebuffers[t.getCacheKey()],h=e.msaaFrameBuffer;n.bindFramebuffer(r.DRAW_FRAMEBUFFER,s),n.bindFramebuffer(r.READ_FRAMEBUFFER,h);const p=c-a-l;r.blitFramebuffer(o,p,o+u,p+l,o,p,o+u,p+l,d,r.NEAREST),n.bindFramebuffer(r.READ_FRAMEBUFFER,s),n.bindTexture(r.TEXTURE_2D,i),r.copyTexSubImage2D(r.TEXTURE_2D,0,0,0,o,p,u,l),n.unbindTexture()}else{const e=r.createFramebuffer();n.bindFramebuffer(r.DRAW_FRAMEBUFFER,e),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,h,r.TEXTURE_2D,i,0),r.blitFramebuffer(0,0,u,l,0,0,u,l,d,r.NEAREST),r.deleteFramebuffer(e)}}else n.bindTexture(r.TEXTURE_2D,i),r.copyTexSubImage2D(r.TEXTURE_2D,0,0,0,o,c-l-a,u,l),n.unbindTexture();e.generateMipmaps&&this.generateMipmaps(e),this.backend._setFramebuffer(t)}setupRenderBufferStorage(e,t){const{gl:s}=this,r=t.renderTarget,{samples:n,depthTexture:i,depthBuffer:o,stencilBuffer:a,width:u,height:l}=r;if(s.bindRenderbuffer(s.RENDERBUFFER,e),o&&!a){let t=s.DEPTH_COMPONENT24;n>0?(i&&i.isDepthTexture&&i.type===s.FLOAT&&(t=s.DEPTH_COMPONENT32F),s.renderbufferStorageMultisample(s.RENDERBUFFER,n,t,u,l)):s.renderbufferStorage(s.RENDERBUFFER,t,u,l),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.RENDERBUFFER,e)}else o&&a&&(n>0?s.renderbufferStorageMultisample(s.RENDERBUFFER,n,s.DEPTH24_STENCIL8,u,l):s.renderbufferStorage(s.RENDERBUFFER,s.DEPTH_STENCIL,u,l),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.RENDERBUFFER,e))}async copyTextureToBuffer(e,t,s,r,n,i){const{backend:o,gl:a}=this,{textureGPU:u,glFormat:l,glType:d}=this.backend.get(e),c=a.createFramebuffer();a.bindFramebuffer(a.READ_FRAMEBUFFER,c);const h=e.isCubeTexture?a.TEXTURE_CUBE_MAP_POSITIVE_X+i:a.TEXTURE_2D;a.framebufferTexture2D(a.READ_FRAMEBUFFER,a.COLOR_ATTACHMENT0,h,u,0);const p=this._getTypedArrayType(d),g=r*n*this._getBytesPerTexel(d,l),m=a.createBuffer();a.bindBuffer(a.PIXEL_PACK_BUFFER,m),a.bufferData(a.PIXEL_PACK_BUFFER,g,a.STREAM_READ),a.readPixels(t,s,r,n,l,d,0),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),await o.utils._clientWaitAsync();const f=new p(g/p.BYTES_PER_ELEMENT);return a.bindBuffer(a.PIXEL_PACK_BUFFER,m),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,f),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),a.deleteFramebuffer(c),f}_getTypedArrayType(e){const{gl:t}=this;if(e===t.UNSIGNED_BYTE)return Uint8Array;if(e===t.UNSIGNED_SHORT_4_4_4_4)return Uint16Array;if(e===t.UNSIGNED_SHORT_5_5_5_1)return Uint16Array;if(e===t.UNSIGNED_SHORT_5_6_5)return Uint16Array;if(e===t.UNSIGNED_SHORT)return Uint16Array;if(e===t.UNSIGNED_INT)return Uint32Array;if(e===t.HALF_FLOAT)return Uint16Array;if(e===t.FLOAT)return Float32Array;throw new Error(`Unsupported WebGL type: ${e}`)}_getBytesPerTexel(e,t){const{gl:s}=this;let r=0;return e===s.UNSIGNED_BYTE&&(r=1),e!==s.UNSIGNED_SHORT_4_4_4_4&&e!==s.UNSIGNED_SHORT_5_5_5_1&&e!==s.UNSIGNED_SHORT_5_6_5&&e!==s.UNSIGNED_SHORT&&e!==s.HALF_FLOAT||(r=2),e!==s.UNSIGNED_INT&&e!==s.FLOAT||(r=4),t===s.RGBA?4*r:t===s.RGB?3*r:t===s.ALPHA?r:void 0}}class hS{constructor(e){this.backend=e,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions(),this.extensions={}}get(e){let t=this.extensions[e];return void 0===t&&(t=this.gl.getExtension(e),this.extensions[e]=t),t}has(e){return this.availableExtensions.includes(e)}}class pS{constructor(e){this.backend=e,this.maxAnisotropy=null}getMaxAnisotropy(){if(null!==this.maxAnisotropy)return this.maxAnisotropy;const e=this.backend.gl,t=this.backend.extensions;if(!0===t.has("EXT_texture_filter_anisotropic")){const s=t.get("EXT_texture_filter_anisotropic");this.maxAnisotropy=e.getParameter(s.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else this.maxAnisotropy=0;return this.maxAnisotropy}}const gS={WEBGL_multi_draw:"WEBGL_multi_draw",WEBGL_compressed_texture_astc:"texture-compression-astc",WEBGL_compressed_texture_etc:"texture-compression-etc2",WEBGL_compressed_texture_etc1:"texture-compression-etc1",WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBKIT_WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBGL_compressed_texture_s3tc:"texture-compression-bc",EXT_texture_compression_bptc:"texture-compression-bptc",EXT_disjoint_timer_query_webgl2:"timestamp-query"};class mS{constructor(e){this.gl=e.gl,this.extensions=e.extensions,this.info=e.renderer.info,this.mode=null,this.index=0,this.type=null,this.object=null}render(e,t){const{gl:s,mode:r,object:n,type:i,info:o,index:a}=this;0!==a?s.drawElements(r,t,i,e):s.drawArrays(r,e,t),o.update(n,t,r,1)}renderInstances(e,t,s){const{gl:r,mode:n,type:i,index:o,object:a,info:u}=this;0!==s&&(0!==o?r.drawElementsInstanced(n,t,i,e,s):r.drawArraysInstanced(n,e,t,s),u.update(a,t,n,s))}renderMultiDraw(e,t,s){const{extensions:r,mode:n,object:i,info:o}=this;if(0===s)return;const a=r.get("WEBGL_multi_draw");if(null===a)for(let r=0;r<s;r++)this.render(e[r],t[r]);else{0!==this.index?a.multiDrawElementsWEBGL(n,t,0,this.type,e,0,s):a.multiDrawArraysWEBGL(n,e,0,t,0,s);let r=0;for(let e=0;e<s;e++)r+=t[e];o.update(i,r,n,1)}}renderMultiDrawInstances(e,t,s,r){const{extensions:n,mode:i,object:o,info:a}=this;if(0===s)return;const u=n.get("WEBGL_multi_draw");if(null===u)for(let n=0;n<s;n++)this.renderInstances(e[n],t[n],r[n]);else{0!==this.index?u.multiDrawElementsInstancedWEBGL(i,t,0,this.type,e,0,r,0,s):u.multiDrawArraysInstancedWEBGL(i,e,0,t,0,r,0,s);let n=0;for(let e=0;e<s;e++)n+=t[e]*r[e];a.update(o,n,i,1)}}}class fS extends Zv{constructor(e={}){super(e),this.isWebGLBackend=!0}init(e){super.init(e);const t=this.parameters,s=void 0!==t.context?t.context:e.domElement.getContext("webgl2");function r(t){t.preventDefault();const s={api:"WebGL",message:t.statusMessage||"Unknown reason",reason:null,originalEvent:t};e.onDeviceLost(s)}this._onContextLost=r,e.domElement.addEventListener("webglcontextlost",r,!1),this.gl=s,this.extensions=new hS(this),this.capabilities=new pS(this),this.attributeUtils=new tS(this),this.textureUtils=new cS(this),this.bufferRenderer=new mS(this),this.state=new iS(this),this.utils=new oS(this),this.vaoCache={},this.transformFeedbackCache={},this.discard=!1,this.trackTimestamp=!0===t.trackTimestamp,this.extensions.get("EXT_color_buffer_float"),this.extensions.get("WEBGL_clip_cull_distance"),this.extensions.get("OES_texture_float_linear"),this.extensions.get("EXT_color_buffer_half_float"),this.extensions.get("WEBGL_multisampled_render_to_texture"),this.extensions.get("WEBGL_render_shared_exponent"),this.extensions.get("WEBGL_multi_draw"),this.disjoint=this.extensions.get("EXT_disjoint_timer_query_webgl2"),this.parallel=this.extensions.get("KHR_parallel_shader_compile"),this._knownBindings=new WeakSet,this._currentContext=null}get coordinateSystem(){return b}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}async waitForGPU(){await this.utils._clientWaitAsync()}initTimestampQuery(e){if(!this.disjoint||!this.trackTimestamp)return;const t=this.get(e);if(this.queryRunning)return t.queryQueue||(t.queryQueue=[]),void t.queryQueue.push(e);t.activeQuery&&(this.gl.endQuery(this.disjoint.TIME_ELAPSED_EXT),t.activeQuery=null),t.activeQuery=this.gl.createQuery(),null!==t.activeQuery&&(this.gl.beginQuery(this.disjoint.TIME_ELAPSED_EXT,t.activeQuery),this.queryRunning=!0)}prepareTimestampBuffer(e){if(!this.disjoint||!this.trackTimestamp)return;const t=this.get(e);if(t.activeQuery&&(this.gl.endQuery(this.disjoint.TIME_ELAPSED_EXT),t.gpuQueries||(t.gpuQueries=[]),t.gpuQueries.push({query:t.activeQuery}),t.activeQuery=null,this.queryRunning=!1,t.queryQueue&&t.queryQueue.length>0)){const e=t.queryQueue.shift();this.initTimestampQuery(e)}}async resolveTimestampAsync(e,t="render"){if(!this.disjoint||!this.trackTimestamp)return;const s=this.get(e);s.gpuQueries||(s.gpuQueries=[]);for(let e=0;e<s.gpuQueries.length;e++){const r=s.gpuQueries[e],n=this.gl.getQueryParameter(r.query,this.gl.QUERY_RESULT_AVAILABLE),i=this.gl.getParameter(this.disjoint.GPU_DISJOINT_EXT);if(n&&!i){const n=this.gl.getQueryParameter(r.query,this.gl.QUERY_RESULT),i=Number(n)/1e6;this.gl.deleteQuery(r.query),s.gpuQueries.splice(e,1),e--,this.renderer.info.updateTimestamp(t,i)}}}getContext(){return this.gl}beginRender(e){const{gl:t}=this,s=this.get(e);if(this.initTimestampQuery(e),s.previousContext=this._currentContext,this._currentContext=e,this._setFramebuffer(e),this.clear(e.clearColor,e.clearDepth,e.clearStencil,e,!1),e.viewport?this.updateViewport(e):t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight),e.scissor){const{x:s,y:r,width:n,height:i}=e.scissorValue;t.scissor(s,e.height-i-r,n,i)}const r=e.occlusionQueryCount;r>0&&(s.currentOcclusionQueries=s.occlusionQueries,s.currentOcclusionQueryObjects=s.occlusionQueryObjects,s.lastOcclusionObject=null,s.occlusionQueries=new Array(r),s.occlusionQueryObjects=new Array(r),s.occlusionQueryIndex=0)}finishRender(e){const{gl:t,state:s}=this,r=this.get(e),n=r.previousContext,i=e.occlusionQueryCount;i>0&&(i>r.occlusionQueryIndex&&t.endQuery(t.ANY_SAMPLES_PASSED),this.resolveOccludedAsync(e));const o=e.textures;if(null!==o)for(let e=0;e<o.length;e++){const t=o[e];t.generateMipmaps&&this.generateMipmaps(t)}if(this._currentContext=n,null!==e.textures&&e.renderTarget){const r=this.get(e.renderTarget),{samples:n}=e.renderTarget;if(n>0){const n=r.framebuffers[e.getCacheKey()],i=t.COLOR_BUFFER_BIT,o=r.msaaFrameBuffer,a=e.textures;s.bindFramebuffer(t.READ_FRAMEBUFFER,o),s.bindFramebuffer(t.DRAW_FRAMEBUFFER,n);for(let s=0;s<a.length;s++)if(e.scissor){const{x:s,y:n,width:o,height:a}=e.scissorValue,u=e.height-a-n;t.blitFramebuffer(s,u,s+o,u+a,s,u,s+o,u+a,i,t.NEAREST),t.invalidateSubFramebuffer(t.READ_FRAMEBUFFER,r.invalidationArray,s,u,o,a)}else t.blitFramebuffer(0,0,e.width,e.height,0,0,e.width,e.height,i,t.NEAREST),t.invalidateFramebuffer(t.READ_FRAMEBUFFER,r.invalidationArray)}}null!==n&&(this._setFramebuffer(n),n.viewport?this.updateViewport(n):t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight)),this.prepareTimestampBuffer(e)}resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueries:s,currentOcclusionQueryObjects:r}=t;if(s&&r){const e=new WeakSet,{gl:n}=this;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueries=null;const i=()=>{let o=0;for(let t=0;t<s.length;t++){const i=s[t];null!==i&&(n.getQueryParameter(i,n.QUERY_RESULT_AVAILABLE)&&(n.getQueryParameter(i,n.QUERY_RESULT)>0&&e.add(r[t]),s[t]=null,n.deleteQuery(i),o++))}o<s.length?requestAnimationFrame(i):t.occluded=e};i()}}isOccluded(e,t){const s=this.get(e);return s.occluded&&s.occluded.has(t)}updateViewport(e){const t=this.gl,{x:s,y:r,width:n,height:i}=e.viewportValue;t.viewport(s,e.height-i-r,n,i)}setScissorTest(e){const t=this.gl;e?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST)}clear(e,t,s,r=null,n=!0){const{gl:i}=this;if(null===r){const e=this.getClearColor();e.r*=e.a,e.g*=e.a,e.b*=e.a,r={textures:null,clearColorValue:e}}let o=0;if(e&&(o|=i.COLOR_BUFFER_BIT),t&&(o|=i.DEPTH_BUFFER_BIT),s&&(o|=i.STENCIL_BUFFER_BIT),0!==o){let a;if(r.clearColorValue?a=r.clearColorValue:(a=this.getClearColor(),a.r*=a.a,a.g*=a.a,a.b*=a.a),t&&this.state.setDepthMask(!0),null===r.textures)i.clearColor(a.r,a.g,a.b,a.a),i.clear(o);else{if(n&&this._setFramebuffer(r),e)for(let e=0;e<r.textures.length;e++)i.clearBufferfv(i.COLOR,e,[a.r,a.g,a.b,a.a]);t&&s?i.clearBufferfi(i.DEPTH_STENCIL,0,1,0):t?i.clearBufferfv(i.DEPTH,0,[1]):s&&i.clearBufferiv(i.STENCIL,0,[0])}}}beginCompute(e){const{state:t,gl:s}=this;t.bindFramebuffer(s.FRAMEBUFFER,null),this.initTimestampQuery(e)}compute(e,t,s,r){const{state:n,gl:i}=this;this.discard||(i.enable(i.RASTERIZER_DISCARD),this.discard=!0);const{programGPU:o,transformBuffers:a,attributes:u}=this.get(r),l=this._getVaoKey(null,u),d=this.vaoCache[l];void 0===d?this._createVao(null,u):i.bindVertexArray(d),n.useProgram(o),this._bindUniforms(s);const c=this._getTransformFeedback(a);i.bindTransformFeedback(i.TRANSFORM_FEEDBACK,c),i.beginTransformFeedback(i.POINTS),u[0].isStorageInstancedBufferAttribute?i.drawArraysInstanced(i.POINTS,0,1,t.count):i.drawArrays(i.POINTS,0,t.count),i.endTransformFeedback(),i.bindTransformFeedback(i.TRANSFORM_FEEDBACK,null);for(let e=0;e<a.length;e++){const t=a[e];t.pbo&&this.textureUtils.copyBufferToTexture(t.transformBuffer,t.pbo),t.switchBuffers()}}finishCompute(e){const t=this.gl;this.discard=!1,t.disable(t.RASTERIZER_DISCARD),this.prepareTimestampBuffer(e),this._currentContext&&this._setFramebuffer(this._currentContext)}draw(e){const{object:t,pipeline:s,material:r,context:n,hardwareClippingPlanes:i}=e,{programGPU:o}=this.get(s),{gl:a,state:u}=this,l=this.get(n),d=e.getDrawParameters();if(null===d)return;this._bindUniforms(e.getBindings());const c=t.isMesh&&t.matrixWorld.determinant()<0;u.setMaterial(r,c,i),u.useProgram(o);const h=this.get(e);let p=h.staticVao;if(void 0===p||h.geometryId!==e.geometry.id){const t=this._getVaoKey(e.getIndex(),e.getAttributes());if(p=this.vaoCache[t],void 0===p){let t;({vaoGPU:p,staticVao:t}=this._createVao(e.getIndex(),e.getAttributes())),t&&(h.staticVao=p,h.geometryId=e.geometry.id)}}a.bindVertexArray(p);const g=e.getIndex(),m=l.lastOcclusionObject;if(m!==t&&void 0!==m){if(null!==m&&!0===m.occlusionTest&&(a.endQuery(a.ANY_SAMPLES_PASSED),l.occlusionQueryIndex++),!0===t.occlusionTest){const e=a.createQuery();a.beginQuery(a.ANY_SAMPLES_PASSED,e),l.occlusionQueries[l.occlusionQueryIndex]=e,l.occlusionQueryObjects[l.occlusionQueryIndex]=t}l.lastOcclusionObject=t}const f=this.bufferRenderer;t.isPoints?f.mode=a.POINTS:t.isLineSegments?f.mode=a.LINES:t.isLine?f.mode=a.LINE_STRIP:t.isLineLoop?f.mode=a.LINE_LOOP:!0===r.wireframe?(u.setLineWidth(r.wireframeLinewidth*this.renderer.getPixelRatio()),f.mode=a.LINES):f.mode=a.TRIANGLES;const{vertexCount:y,instanceCount:b}=d;let{firstVertex:x}=d;if(f.object=t,null!==g){x*=g.array.BYTES_PER_ELEMENT;const e=this.get(g);f.index=g.count,f.type=e.type}else f.index=0;t.isBatchedMesh?null!==t._multiDrawInstances?f.renderMultiDrawInstances(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount,t._multiDrawInstances):this.hasFeature("WEBGL_multi_draw")?f.renderMultiDraw(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount):Ns("THREE.WebGLRenderer: WEBGL_multi_draw not supported."):b>1?f.renderInstances(x,y,b):f.render(x,y),a.bindVertexArray(null)}needsRenderUpdate(){return!1}getRenderCacheKey(){return""}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}copyTextureToBuffer(e,t,s,r,n,i){return this.textureUtils.copyTextureToBuffer(e,t,s,r,n,i)}createSampler(){}destroySampler(){}createNodeBuilder(e,t){return new Kv(e,t)}createProgram(e){const t=this.gl,{stage:s,code:r}=e,n="fragment"===s?t.createShader(t.FRAGMENT_SHADER):t.createShader(t.VERTEX_SHADER);t.shaderSource(n,r),t.compileShader(n),this.set(e,{shaderGPU:n})}destroyProgram(){console.warn("Abstract class.")}createRenderPipeline(e,t){const s=this.gl,r=e.pipeline,{fragmentProgram:n,vertexProgram:i}=r,o=s.createProgram(),a=this.get(n).shaderGPU,u=this.get(i).shaderGPU;if(s.attachShader(o,a),s.attachShader(o,u),s.linkProgram(o),this.set(r,{programGPU:o,fragmentShader:a,vertexShader:u}),null!==t&&this.parallel){const n=new Promise((t=>{const n=this.parallel,i=()=>{s.getProgramParameter(o,n.COMPLETION_STATUS_KHR)?(this._completeCompile(e,r),t()):requestAnimationFrame(i)};i()}));t.push(n)}else this._completeCompile(e,r)}_handleSource(e,t){const s=e.split("\n"),r=[],n=Math.max(t-6,0),i=Math.min(t+6,s.length);for(let e=n;e<i;e++){const n=e+1;r.push(`${n===t?">":" "} ${n}: ${s[e]}`)}return r.join("\n")}_getShaderErrors(e,t,s){const r=e.getShaderParameter(t,e.COMPILE_STATUS),n=e.getShaderInfoLog(t).trim();if(r&&""===n)return"";const i=/ERROR: 0:(\d+)/.exec(n);if(i){const r=parseInt(i[1]);return s.toUpperCase()+"\n\n"+n+"\n\n"+this._handleSource(e.getShaderSource(t),r)}return n}_logProgramError(e,t,s){if(this.renderer.debug.checkShaderErrors){const r=this.gl,n=r.getProgramInfoLog(e).trim();if(!1===r.getProgramParameter(e,r.LINK_STATUS))if("function"==typeof this.renderer.debug.onShaderError)this.renderer.debug.onShaderError(r,e,s,t);else{const i=this._getShaderErrors(r,s,"vertex"),o=this._getShaderErrors(r,t,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(e,r.VALIDATE_STATUS)+"\n\nProgram Info Log: "+n+"\n"+i+"\n"+o)}else""!==n&&console.warn("THREE.WebGLProgram: Program Info Log:",n)}}_completeCompile(e,t){const{state:s,gl:r}=this,n=this.get(t),{programGPU:i,fragmentShader:o,vertexShader:a}=n;!1===r.getProgramParameter(i,r.LINK_STATUS)&&this._logProgramError(i,o,a),s.useProgram(i);const u=e.getBindings();this._setupBindings(u,i),this.set(t,{programGPU:i})}createComputePipeline(e,t){const{state:s,gl:r}=this,n={stage:"fragment",code:"#version 300 es\nprecision highp float;\nvoid main() {}"};this.createProgram(n);const{computeProgram:i}=e,o=r.createProgram(),a=this.get(n).shaderGPU,u=this.get(i).shaderGPU,l=i.transforms,d=[],c=[];for(let e=0;e<l.length;e++){const t=l[e];d.push(t.varyingName),c.push(t.attributeNode)}r.attachShader(o,a),r.attachShader(o,u),r.transformFeedbackVaryings(o,d,r.SEPARATE_ATTRIBS),r.linkProgram(o),!1===r.getProgramParameter(o,r.LINK_STATUS)&&this._logProgramError(o,a,u),s.useProgram(o),this._setupBindings(t,o);const h=i.attributes,p=[],g=[];for(let e=0;e<h.length;e++){const t=h[e].node.attribute;p.push(t),this.has(t)||this.attributeUtils.createAttribute(t,r.ARRAY_BUFFER)}for(let e=0;e<c.length;e++){const t=c[e].attribute;this.has(t)||this.attributeUtils.createAttribute(t,r.ARRAY_BUFFER);const s=this.get(t);g.push(s)}this.set(e,{programGPU:o,transformBuffers:g,attributes:p})}createBindings(e,t){if(!1===this._knownBindings.has(t)){this._knownBindings.add(t);let e=0,s=0;for(const r of t){this.set(r,{textures:s,uniformBuffers:e});for(const t of r.bindings)t.isUniformBuffer&&e++,t.isSampledTexture&&s++}}this.updateBindings(e,t)}updateBindings(e){const{gl:t}=this,s=this.get(e);let r=s.uniformBuffers,n=s.textures;for(const s of e.bindings)if(s.isUniformsGroup||s.isUniformBuffer){const e=s.buffer,n=t.createBuffer();t.bindBuffer(t.UNIFORM_BUFFER,n),t.bufferData(t.UNIFORM_BUFFER,e,t.DYNAMIC_DRAW),this.set(s,{index:r++,bufferGPU:n})}else if(s.isSampledTexture){const{textureGPU:e,glTextureType:t}=this.get(s.texture);this.set(s,{index:n++,textureGPU:e,glTextureType:t})}}updateBinding(e){const t=this.gl;if(e.isUniformsGroup||e.isUniformBuffer){const s=this.get(e).bufferGPU,r=e.buffer;t.bindBuffer(t.UNIFORM_BUFFER,s),t.bufferData(t.UNIFORM_BUFFER,r,t.DYNAMIC_DRAW)}}createIndexAttribute(e){const t=this.gl;this.attributeUtils.createAttribute(e,t.ELEMENT_ARRAY_BUFFER)}createAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}createStorageAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){}hasFeature(e){const t=Object.keys(gS).filter((t=>gS[t]===e)),s=this.extensions;for(let e=0;e<t.length;e++)if(s.has(t[e]))return!0;return!1}getMaxAnisotropy(){return this.capabilities.getMaxAnisotropy()}copyTextureToTexture(e,t,s,r,n){this.textureUtils.copyTextureToTexture(e,t,s,r,n)}copyFramebufferToTexture(e,t,s){this.textureUtils.copyFramebufferToTexture(e,t,s)}_setFramebuffer(e){const{gl:t,state:s}=this;let r=null;if(null!==e.textures){const n=e.renderTarget,i=this.get(n),{samples:o,depthBuffer:a,stencilBuffer:u}=n,l=!0===n.isWebGLCubeRenderTarget;let d=i.msaaFrameBuffer,c=i.depthRenderbuffer;const h=cm(e);let p;if(l?(i.cubeFramebuffers||(i.cubeFramebuffers={}),p=i.cubeFramebuffers[h]):(i.framebuffers||(i.framebuffers={}),p=i.framebuffers[h]),void 0===p){p=t.createFramebuffer(),s.bindFramebuffer(t.FRAMEBUFFER,p);const r=e.textures;if(l){i.cubeFramebuffers[h]=p;const{textureGPU:e}=this.get(r[0]),s=this.renderer._activeCubeFace;t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+s,e,0)}else{i.framebuffers[h]=p;for(let s=0;s<r.length;s++){const n=r[s],i=this.get(n);i.renderTarget=e.renderTarget,i.cacheKey=h;const o=t.COLOR_ATTACHMENT0+s;t.framebufferTexture2D(t.FRAMEBUFFER,o,t.TEXTURE_2D,i.textureGPU,0)}s.drawBuffers(e,p)}if(null!==e.depthTexture){const s=this.get(e.depthTexture),r=u?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;s.renderTarget=e.renderTarget,s.cacheKey=h,t.framebufferTexture2D(t.FRAMEBUFFER,r,t.TEXTURE_2D,s.textureGPU,0)}}if(o>0){if(void 0===d){const r=[];d=t.createFramebuffer(),s.bindFramebuffer(t.FRAMEBUFFER,d);const n=[],l=e.textures;for(let s=0;s<l.length;s++){if(n[s]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,n[s]),r.push(t.COLOR_ATTACHMENT0+s),a){const e=u?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;r.push(e)}const i=e.textures[s],l=this.get(i);t.renderbufferStorageMultisample(t.RENDERBUFFER,o,l.glInternalFormat,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+s,t.RENDERBUFFER,n[s])}if(i.msaaFrameBuffer=d,i.msaaRenderbuffers=n,void 0===c){c=t.createRenderbuffer(),this.textureUtils.setupRenderBufferStorage(c,e),i.depthRenderbuffer=c;const s=u?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;r.push(s)}i.invalidationArray=r}r=i.msaaFrameBuffer}else r=p}s.bindFramebuffer(t.FRAMEBUFFER,r)}_getVaoKey(e,t){let s=[];if(null!==e){s+=":"+this.get(e).id}for(let e=0;e<t.length;e++){s+=":"+this.get(t[e]).id}return s}_createVao(e,t){const{gl:s}=this,r=s.createVertexArray();let n="",i=!0;if(s.bindVertexArray(r),null!==e){const t=this.get(e);s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,t.bufferGPU),n+=":"+t.id}for(let e=0;e<t.length;e++){const r=t[e],o=this.get(r);let a,u;n+=":"+o.id,s.bindBuffer(s.ARRAY_BUFFER,o.bufferGPU),s.enableVertexAttribArray(e),(r.isStorageBufferAttribute||r.isStorageInstancedBufferAttribute)&&(i=!1),!0===r.isInterleavedBufferAttribute?(a=r.data.stride*o.bytesPerElement,u=r.offset*o.bytesPerElement):(a=0,u=0),o.isInteger?s.vertexAttribIPointer(e,r.itemSize,o.type,a,u):s.vertexAttribPointer(e,r.itemSize,o.type,r.normalized,a,u),r.isInstancedBufferAttribute&&!r.isInterleavedBufferAttribute?s.vertexAttribDivisor(e,r.meshPerAttribute):r.isInterleavedBufferAttribute&&r.data.isInstancedInterleavedBuffer&&s.vertexAttribDivisor(e,r.data.meshPerAttribute)}return s.bindBuffer(s.ARRAY_BUFFER,null),this.vaoCache[n]=r,{vaoGPU:r,staticVao:i}}_getTransformFeedback(e){let t="";for(let s=0;s<e.length;s++)t+=":"+e[s].id;let s=this.transformFeedbackCache[t];if(void 0!==s)return s;const{gl:r}=this;s=r.createTransformFeedback(),r.bindTransformFeedback(r.TRANSFORM_FEEDBACK,s);for(let t=0;t<e.length;t++){const s=e[t];r.bindBufferBase(r.TRANSFORM_FEEDBACK_BUFFER,t,s.transformBuffer)}return r.bindTransformFeedback(r.TRANSFORM_FEEDBACK,null),this.transformFeedbackCache[t]=s,s}_setupBindings(e,t){const s=this.gl;for(const r of e)for(const e of r.bindings){const r=this.get(e).index;if(e.isUniformsGroup||e.isUniformBuffer){const n=s.getUniformBlockIndex(t,e.name);s.uniformBlockBinding(t,n,r)}else if(e.isSampledTexture){const n=s.getUniformLocation(t,e.name);s.uniform1i(n,r)}}}_bindUniforms(e){const{gl:t,state:s}=this;for(const r of e)for(const e of r.bindings){const r=this.get(e),n=r.index;e.isUniformsGroup||e.isUniformBuffer?s.bindBufferBase(t.UNIFORM_BUFFER,n,r.bufferGPU):e.isSampledTexture&&s.bindTexture(r.glTextureType,r.textureGPU,t.TEXTURE0+n)}}dispose(){this.renderer.domElement.removeEventListener("webglcontextlost",this._onContextLost)}}class yS extends Bv{constructor(e,t){super(e),this.texture=t,this.version=t?t.version:0,this.isSampler=!0}}class bS extends yS{constructor(e,t,s){super(e,t?t.value:null),this.textureNode=t,this.groupNode=s}update(){this.texture=this.textureNode.value}}class xS extends Uv{constructor(e,t){super(e,t?t.array:null),this.attribute=t,this.isStorageBuffer=!0}}let TS=0;class _S extends xS{constructor(e,t){super("StorageBuffer_"+TS++,e?e.value:null),this.nodeUniform=e,this.access=e?e.access:Wy,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class NS extends Gg{constructor(e){super(),this.device=e;this.mipmapSampler=e.createSampler({minFilter:my}),this.flipYSampler=e.createSampler({minFilter:fy}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=e.createShaderModule({label:"mipmapVertex",code:"\nstruct VarysStruct {\n\t@builtin( position ) Position: vec4<f32>,\n\t@location( 0 ) vTex : vec2<f32>\n};\n\n@vertex\nfn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {\n\n\tvar Varys : VarysStruct;\n\n\tvar pos = array< vec2<f32>, 4 >(\n\t\tvec2<f32>( -1.0,  1.0 ),\n\t\tvec2<f32>(  1.0,  1.0 ),\n\t\tvec2<f32>( -1.0, -1.0 ),\n\t\tvec2<f32>(  1.0, -1.0 )\n\t);\n\n\tvar tex = array< vec2<f32>, 4 >(\n\t\tvec2<f32>( 0.0, 0.0 ),\n\t\tvec2<f32>( 1.0, 0.0 ),\n\t\tvec2<f32>( 0.0, 1.0 ),\n\t\tvec2<f32>( 1.0, 1.0 )\n\t);\n\n\tVarys.vTex = tex[ vertexIndex ];\n\tVarys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );\n\n\treturn Varys;\n\n}\n"}),this.mipmapFragmentShaderModule=e.createShaderModule({label:"mipmapFragment",code:"\n@group( 0 ) @binding( 0 )\nvar imgSampler : sampler;\n\n@group( 0 ) @binding( 1 )\nvar img : texture_2d<f32>;\n\n@fragment\nfn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {\n\n\treturn textureSample( img, imgSampler, vTex );\n\n}\n"}),this.flipYFragmentShaderModule=e.createShaderModule({label:"flipYFragment",code:"\n@group( 0 ) @binding( 0 )\nvar imgSampler : sampler;\n\n@group( 0 ) @binding( 1 )\nvar img : texture_2d<f32>;\n\n@fragment\nfn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {\n\n\treturn textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );\n\n}\n"})}getTransferPipeline(e){let t=this.transferPipelines[e];return void 0===t&&(t=this.device.createRenderPipeline({label:`mipmap-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:qf,stripIndexFormat:dy},layout:"auto"}),this.transferPipelines[e]=t),t}getFlipYPipeline(e){let t=this.flipYPipelines[e];return void 0===t&&(t=this.device.createRenderPipeline({label:`flipY-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:qf,stripIndexFormat:dy},layout:"auto"}),this.flipYPipelines[e]=t),t}flipY(e,t,s=0){const r=t.format,{width:n,height:i}=t.size,o=this.getTransferPipeline(r),a=this.getFlipYPipeline(r),u=this.device.createTexture({size:{width:n,height:i,depthOrArrayLayers:1},format:r,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),l=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:sb,baseArrayLayer:s}),d=u.createView({baseMipLevel:0,mipLevelCount:1,dimension:sb,baseArrayLayer:0}),c=this.device.createCommandEncoder({}),h=(e,t,s)=>{const r=e.getBindGroupLayout(0),n=this.device.createBindGroup({layout:r,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:t}]}),i=c.beginRenderPass({colorAttachments:[{view:s,loadOp:ny,storeOp:sy,clearValue:[0,0,0,0]}]});i.setPipeline(e),i.setBindGroup(0,n),i.draw(4,1,0,0),i.end()};h(o,l,d),h(a,d,l),this.device.queue.submit([c.finish()]),u.destroy()}generateMipmaps(e,t,s=0){const r=this.get(e);void 0===r.useCount&&(r.useCount=0,r.layers=[]);const n=r.layers[s]||this._mipmapCreateBundles(e,t,s),i=this.device.createCommandEncoder({});this._mipmapRunBundles(i,n),this.device.queue.submit([i.finish()]),0!==r.useCount&&(r.layers[s]=n),r.useCount++}_mipmapCreateBundles(e,t,s){const r=this.getTransferPipeline(t.format),n=r.getBindGroupLayout(0);let i=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:sb,baseArrayLayer:s});const o=[];for(let a=1;a<t.mipLevelCount;a++){const u=this.device.createBindGroup({layout:n,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:i}]}),l=e.createView({baseMipLevel:a,mipLevelCount:1,dimension:sb,baseArrayLayer:s}),d={colorAttachments:[{view:l,loadOp:ny,storeOp:sy,clearValue:[0,0,0,0]}]},c=this.device.createRenderBundleEncoder({colorFormats:[t.format]});c.setPipeline(r),c.setBindGroup(0,u),c.draw(4,1,0,0),o.push({renderBundles:[c.finish()],passDescriptor:d}),i=l}return o}_mipmapRunBundles(e,t){const s=t.length;for(let r=0;r<s;r++){const s=t[r],n=e.beginRenderPass(s.passDescriptor);n.executeBundles(s.renderBundles),n.end()}}}const vS={[ms]:"never",[Ae]:"less",[bs]:"equal",[ys]:"less-equal",[Ts]:"greater",[xs]:"greater-equal",[fs]:"always",[_s]:"not-equal"},SS=[0,1,3,2,4,5];class AS{constructor(e){this.backend=e,this._passUtils=null,this.defaultTexture={},this.defaultCubeTexture={},this.defaultVideoFrame=null,this.colorBuffer=null,this.depthTexture=new B,this.depthTexture.name="depthBuffer"}createSampler(e){const t=this.backend,s=t.device,r=t.get(e),n={addressModeU:this._convertAddressMode(e.wrapS),addressModeV:this._convertAddressMode(e.wrapT),addressModeW:this._convertAddressMode(e.wrapR),magFilter:this._convertFilterMode(e.magFilter),minFilter:this._convertFilterMode(e.minFilter),mipmapFilter:this._convertFilterMode(e.minFilter),maxAnisotropy:1};n.magFilter===my&&n.minFilter===my&&n.mipmapFilter===my&&(n.maxAnisotropy=e.anisotropy),e.isDepthTexture&&null!==e.compareFunction&&(n.compare=vS[e.compareFunction]),r.sampler=s.createSampler(n)}createDefaultTexture(e){let t;const s=RS(e);e.isCubeTexture?t=this._getDefaultCubeTextureGPU(s):e.isVideoTexture?this.backend.get(e).externalTexture=this._getDefaultVideoFrame():t=this._getDefaultTextureGPU(s),this.backend.get(e).texture=t}createTexture(e,t={}){const s=this.backend,r=s.get(e);if(r.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");void 0===t.needsMipmaps&&(t.needsMipmaps=!1),void 0===t.levels&&(t.levels=1),void 0===t.depth&&(t.depth=1);const{width:n,height:i,depth:o,levels:a}=t;e.isFramebufferTexture&&(t.renderTarget?t.format=this.backend.utils.getCurrentColorFormat(t.renderTarget):t.format=this.backend.utils.getPreferredCanvasFormat());const u=this._getDimension(e),l=e.internalFormat||t.format||RS(e,s.device);r.format=l;let d=void 0!==t.sampleCount?t.sampleCount:1;d=s.utils.getSampleCount(d);const c=e.isRenderTargetTexture&&!e.isMultisampleRenderTargetTexture?1:d;let h=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;!0===e.isStorageTexture&&(h|=GPUTextureUsage.STORAGE_BINDING),!0!==e.isCompressedTexture&&!0!==e.isCompressedArrayTexture&&(h|=GPUTextureUsage.RENDER_ATTACHMENT);const p={label:e.name,size:{width:n,height:i,depthOrArrayLayers:o},mipLevelCount:a,sampleCount:c,dimension:u,format:l,usage:h};if(e.isVideoTexture){const t=e.source.data,s=new VideoFrame(t);p.size.width=s.displayWidth,p.size.height=s.displayHeight,s.close(),r.externalTexture=t}else{if(void 0===l)return console.warn("WebGPURenderer: Texture format not supported."),this.createDefaultTexture(e);r.texture=s.device.createTexture(p)}if(e.isRenderTargetTexture&&d>1&&!e.isMultisampleRenderTargetTexture){const e=Object.assign({},p);e.label=e.label+"-msaa",e.sampleCount=d,r.msaaTexture=s.device.createTexture(e)}r.initialized=!0,r.textureDescriptorGPU=p}destroyTexture(e){const t=this.backend,s=t.get(e);s.texture.destroy(),void 0!==s.msaaTexture&&s.msaaTexture.destroy(),t.delete(e)}destroySampler(e){delete this.backend.get(e).sampler}generateMipmaps(e){const t=this.backend.get(e);if(e.isCubeTexture)for(let e=0;e<6;e++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,e);else{const s=e.image.depth||1;for(let e=0;e<s;e++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,e)}}getColorBuffer(){this.colorBuffer&&this.colorBuffer.destroy();const e=this.backend,{width:t,height:s}=e.getDrawingBufferSize();return this.colorBuffer=e.device.createTexture({label:"colorBuffer",size:{width:t,height:s,depthOrArrayLayers:1},sampleCount:e.utils.getSampleCount(e.renderer.samples),format:e.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC}),this.colorBuffer}getDepthBuffer(e=!0,t=!1){const s=this.backend,{width:r,height:n}=s.getDrawingBufferSize(),i=this.depthTexture,o=s.get(i).texture;let a,u;if(t?(a=de,u=he):e&&(a=ce,u=f),void 0!==o){if(i.image.width===r&&i.image.height===n&&i.format===a&&i.type===u)return o;this.destroyTexture(i)}return i.name="depthBuffer",i.format=a,i.type=u,i.image.width=r,i.image.height=n,this.createTexture(i,{sampleCount:s.utils.getSampleCount(s.renderer.samples),width:r,height:n}),s.get(i).texture}updateTexture(e,t){const s=this.backend.get(e),{textureDescriptorGPU:r}=s;if(!e.isRenderTargetTexture&&void 0!==r){if(e.isDataTexture)this._copyBufferToTexture(t.image,s.texture,r,0,e.flipY);else if(e.isDataArrayTexture||e.isData3DTexture)for(let n=0;n<t.image.depth;n++)this._copyBufferToTexture(t.image,s.texture,r,n,e.flipY,n);else if(e.isCompressedTexture||e.isCompressedArrayTexture)this._copyCompressedBufferToTexture(e.mipmaps,s.texture,r);else if(e.isCubeTexture)this._copyCubeMapToTexture(t.images,s.texture,r,e.flipY);else if(e.isVideoTexture){const t=e.source.data;s.externalTexture=t}else this._copyImageToTexture(t.image,s.texture,r,0,e.flipY);s.version=e.version,e.onUpdate&&e.onUpdate(e)}}async copyTextureToBuffer(e,t,s,r,n,i){const o=this.backend.device,a=this.backend.get(e),u=a.texture,l=a.textureDescriptorGPU.format,d=this._getBytesPerTexel(l);let c=r*d;c=256*Math.ceil(c/256);const h=o.createBuffer({size:r*n*d,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),p=o.createCommandEncoder();p.copyTextureToBuffer({texture:u,origin:{x:t,y:s,z:i}},{buffer:h,bytesPerRow:c},{width:r,height:n});const g=this._getTypedArrayType(l);o.queue.submit([p.finish()]),await h.mapAsync(GPUMapMode.READ);return new g(h.getMappedRange())}_isEnvironmentTexture(e){const t=e.mapping;return t===j||t===q||t===T||t===_}_getDefaultTextureGPU(e){let t=this.defaultTexture[e];if(void 0===t){const s=new ee;s.minFilter=ps,s.magFilter=ps,this.createTexture(s,{width:1,height:1,format:e}),this.defaultTexture[e]=t=s}return this.backend.get(t).texture}_getDefaultCubeTextureGPU(e){let t=this.defaultTexture[e];if(void 0===t){const s=new W;s.minFilter=ps,s.magFilter=ps,this.createTexture(s,{width:1,height:1,depth:6}),this.defaultCubeTexture[e]=t=s}return this.backend.get(t).texture}_getDefaultVideoFrame(){let e=this.defaultVideoFrame;if(null===e){const t={timestamp:0,codedWidth:1,codedHeight:1,format:"RGBA"};this.defaultVideoFrame=e=new VideoFrame(new Uint8Array([0,0,0,255]),t)}return e}_copyCubeMapToTexture(e,t,s,r){for(let n=0;n<6;n++){const i=e[n],o=!0===r?SS[n]:n;i.isDataTexture?this._copyBufferToTexture(i.image,t,s,o,r):this._copyImageToTexture(i,t,s,o,r)}}_copyImageToTexture(e,t,s,r,n){this.backend.device.queue.copyExternalImageToTexture({source:e},{texture:t,mipLevel:0,origin:{x:0,y:0,z:r}},{width:e.width,height:e.height,depthOrArrayLayers:1}),!0===n&&this._flipY(t,s,r)}_getPassUtils(){let e=this._passUtils;return null===e&&(this._passUtils=e=new NS(this.backend.device)),e}_generateMipmaps(e,t,s=0){this._getPassUtils().generateMipmaps(e,t,s)}_flipY(e,t,s=0){this._getPassUtils().flipY(e,t,s)}_copyBufferToTexture(e,t,s,r,n,i=0){const o=this.backend.device,a=e.data,u=this._getBytesPerTexel(s.format),l=e.width*u;o.queue.writeTexture({texture:t,mipLevel:0,origin:{x:0,y:0,z:r}},a,{offset:e.width*e.height*u*i,bytesPerRow:l},{width:e.width,height:e.height,depthOrArrayLayers:1}),!0===n&&this._flipY(t,s,r)}_copyCompressedBufferToTexture(e,t,s){const r=this.backend.device,n=this._getBlockData(s.format),i=s.size.depthOrArrayLayers>1;for(let o=0;o<e.length;o++){const a=e[o],u=a.width,l=a.height,d=i?s.size.depthOrArrayLayers:1,c=Math.ceil(u/n.width)*n.byteLength,h=c*Math.ceil(l/n.height);for(let e=0;e<d;e++)r.queue.writeTexture({texture:t,mipLevel:o,origin:{x:0,y:0,z:e}},a.data,{offset:e*h,bytesPerRow:c,rowsPerImage:Math.ceil(l/n.height)},{width:Math.ceil(u/n.width)*n.width,height:Math.ceil(l/n.height)*n.height,depthOrArrayLayers:1})}}_getBlockData(e){return e===cy.BC1RGBAUnorm||e===cy.BC1RGBAUnormSRGB?{byteLength:8,width:4,height:4}:e===cy.BC2RGBAUnorm||e===cy.BC2RGBAUnormSRGB||e===cy.BC3RGBAUnorm||e===cy.BC3RGBAUnormSRGB?{byteLength:16,width:4,height:4}:e===cy.BC4RUnorm||e===cy.BC4RSNorm?{byteLength:8,width:4,height:4}:e===cy.BC5RGUnorm||e===cy.BC5RGSnorm||e===cy.BC6HRGBUFloat||e===cy.BC6HRGBFloat||e===cy.BC7RGBAUnorm||e===cy.BC7RGBAUnormSRGB?{byteLength:16,width:4,height:4}:e===cy.ETC2RGB8Unorm||e===cy.ETC2RGB8UnormSRGB||e===cy.ETC2RGB8A1Unorm||e===cy.ETC2RGB8A1UnormSRGB?{byteLength:8,width:4,height:4}:e===cy.ETC2RGBA8Unorm||e===cy.ETC2RGBA8UnormSRGB?{byteLength:16,width:4,height:4}:e===cy.EACR11Unorm||e===cy.EACR11Snorm?{byteLength:8,width:4,height:4}:e===cy.EACRG11Unorm||e===cy.EACRG11Snorm||e===cy.ASTC4x4Unorm||e===cy.ASTC4x4UnormSRGB?{byteLength:16,width:4,height:4}:e===cy.ASTC5x4Unorm||e===cy.ASTC5x4UnormSRGB?{byteLength:16,width:5,height:4}:e===cy.ASTC5x5Unorm||e===cy.ASTC5x5UnormSRGB?{byteLength:16,width:5,height:5}:e===cy.ASTC6x5Unorm||e===cy.ASTC6x5UnormSRGB?{byteLength:16,width:6,height:5}:e===cy.ASTC6x6Unorm||e===cy.ASTC6x6UnormSRGB?{byteLength:16,width:6,height:6}:e===cy.ASTC8x5Unorm||e===cy.ASTC8x5UnormSRGB?{byteLength:16,width:8,height:5}:e===cy.ASTC8x6Unorm||e===cy.ASTC8x6UnormSRGB?{byteLength:16,width:8,height:6}:e===cy.ASTC8x8Unorm||e===cy.ASTC8x8UnormSRGB?{byteLength:16,width:8,height:8}:e===cy.ASTC10x5Unorm||e===cy.ASTC10x5UnormSRGB?{byteLength:16,width:10,height:5}:e===cy.ASTC10x6Unorm||e===cy.ASTC10x6UnormSRGB?{byteLength:16,width:10,height:6}:e===cy.ASTC10x8Unorm||e===cy.ASTC10x8UnormSRGB?{byteLength:16,width:10,height:8}:e===cy.ASTC10x10Unorm||e===cy.ASTC10x10UnormSRGB?{byteLength:16,width:10,height:10}:e===cy.ASTC12x10Unorm||e===cy.ASTC12x10UnormSRGB?{byteLength:16,width:12,height:10}:e===cy.ASTC12x12Unorm||e===cy.ASTC12x12UnormSRGB?{byteLength:16,width:12,height:12}:void 0}_convertAddressMode(e){let t=hy;return e===ds?t=py:e===hs&&(t=gy),t}_convertFilterMode(e){let t=my;return e!==ps&&e!==gs&&e!==Ie||(t=fy),t}_getBytesPerTexel(e){return e===cy.R8Unorm||e===cy.R8Snorm||e===cy.R8Uint||e===cy.R8Sint?1:e===cy.R16Uint||e===cy.R16Sint||e===cy.R16Float||e===cy.RG8Unorm||e===cy.RG8Snorm||e===cy.RG8Uint||e===cy.RG8Sint?2:e===cy.R32Uint||e===cy.R32Sint||e===cy.R32Float||e===cy.RG16Uint||e===cy.RG16Sint||e===cy.RG16Float||e===cy.RGBA8Unorm||e===cy.RGBA8UnormSRGB||e===cy.RGBA8Snorm||e===cy.RGBA8Uint||e===cy.RGBA8Sint||e===cy.BGRA8Unorm||e===cy.BGRA8UnormSRGB||e===cy.RGB9E5UFloat||e===cy.RGB10A2Unorm||e===cy.RG11B10UFloat||e===cy.Depth32Float||e===cy.Depth24Plus||e===cy.Depth24PlusStencil8||e===cy.Depth32FloatStencil8?4:e===cy.RG32Uint||e===cy.RG32Sint||e===cy.RG32Float||e===cy.RGBA16Uint||e===cy.RGBA16Sint||e===cy.RGBA16Float?8:e===cy.RGBA32Uint||e===cy.RGBA32Sint||e===cy.RGBA32Float?16:void 0}_getTypedArrayType(e){return e===cy.R8Uint?Uint8Array:e===cy.R8Sint?Int8Array:e===cy.R8Unorm?Uint8Array:e===cy.R8Snorm?Int8Array:e===cy.RG8Uint?Uint8Array:e===cy.RG8Sint?Int8Array:e===cy.RG8Unorm?Uint8Array:e===cy.RG8Snorm?Int8Array:e===cy.RGBA8Uint?Uint8Array:e===cy.RGBA8Sint?Int8Array:e===cy.RGBA8Unorm?Uint8Array:e===cy.RGBA8Snorm?Int8Array:e===cy.R16Uint?Uint16Array:e===cy.R16Sint?Int16Array:e===cy.RG16Uint?Uint16Array:e===cy.RG16Sint?Int16Array:e===cy.RGBA16Uint?Uint16Array:e===cy.RGBA16Sint?Int16Array:e===cy.R16Float||e===cy.RG16Float||e===cy.RGBA16Float?Uint16Array:e===cy.R32Uint?Uint32Array:e===cy.R32Sint?Int32Array:e===cy.R32Float?Float32Array:e===cy.RG32Uint?Uint32Array:e===cy.RG32Sint?Int32Array:e===cy.RG32Float?Float32Array:e===cy.RGBA32Uint?Uint32Array:e===cy.RGBA32Sint?Int32Array:e===cy.RGBA32Float?Float32Array:e===cy.BGRA8Unorm||e===cy.BGRA8UnormSRGB?Uint8Array:e===cy.RGB10A2Unorm||e===cy.RGB9E5UFloat||e===cy.RG11B10UFloat?Uint32Array:e===cy.Depth32Float?Float32Array:e===cy.Depth24Plus||e===cy.Depth24PlusStencil8?Uint32Array:e===cy.Depth32FloatStencil8?Float32Array:void 0}_getDimension(e){let t;return t=e.isData3DTexture?tb:eb,t}}function RS(e,t=null){const s=e.format,r=e.type,n=e.colorSpace;let i;if(!0===e.isCompressedTexture||!0===e.isCompressedArrayTexture)switch(s){case It:i=n===De?cy.BC1RGBAUnormSRGB:cy.BC1RGBAUnorm;break;case Lt:i=n===De?cy.BC2RGBAUnormSRGB:cy.BC2RGBAUnorm;break;case Vt:i=n===De?cy.BC3RGBAUnormSRGB:cy.BC3RGBAUnorm;break;case $t:i=n===De?cy.ETC2RGB8UnormSRGB:cy.ETC2RGB8Unorm;break;case Ht:i=n===De?cy.ETC2RGBA8UnormSRGB:cy.ETC2RGBA8Unorm;break;case Wt:i=n===De?cy.ASTC4x4UnormSRGB:cy.ASTC4x4Unorm;break;case jt:i=n===De?cy.ASTC5x4UnormSRGB:cy.ASTC5x4Unorm;break;case qt:i=n===De?cy.ASTC5x5UnormSRGB:cy.ASTC5x5Unorm;break;case Kt:i=n===De?cy.ASTC6x5UnormSRGB:cy.ASTC6x5Unorm;break;case Xt:i=n===De?cy.ASTC6x6UnormSRGB:cy.ASTC6x6Unorm;break;case Yt:i=n===De?cy.ASTC8x5UnormSRGB:cy.ASTC8x5Unorm;break;case Qt:i=n===De?cy.ASTC8x6UnormSRGB:cy.ASTC8x6Unorm;break;case Zt:i=n===De?cy.ASTC8x8UnormSRGB:cy.ASTC8x8Unorm;break;case Jt:i=n===De?cy.ASTC10x5UnormSRGB:cy.ASTC10x5Unorm;break;case es:i=n===De?cy.ASTC10x6UnormSRGB:cy.ASTC10x6Unorm;break;case ts:i=n===De?cy.ASTC10x8UnormSRGB:cy.ASTC10x8Unorm;break;case ss:i=n===De?cy.ASTC10x10UnormSRGB:cy.ASTC10x10Unorm;break;case rs:i=n===De?cy.ASTC12x10UnormSRGB:cy.ASTC12x10Unorm;break;case ns:i=n===De?cy.ASTC12x12UnormSRGB:cy.ASTC12x12Unorm;break;case Fe:i=n===De?cy.RGBA8UnormSRGB:cy.RGBA8Unorm;break;default:console.error("WebGPURenderer: Unsupported texture format.",s)}else switch(s){case Fe:switch(r){case Ye:i=cy.RGBA8Snorm;break;case Qe:i=cy.RGBA16Sint;break;case Xe:i=cy.RGBA16Uint;break;case f:i=cy.RGBA32Uint;break;case y:i=cy.RGBA32Sint;break;case pe:i=n===De?cy.RGBA8UnormSRGB:cy.RGBA8Unorm;break;case ye:i=cy.RGBA16Float;break;case E:i=cy.RGBA32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAFormat.",r)}break;case qe:if(r===Mt)i=cy.RGB9E5UFloat;else console.error("WebGPURenderer: Unsupported texture type with RGBFormat.",r);break;case He:switch(r){case Ye:i=cy.R8Snorm;break;case Qe:i=cy.R16Sint;break;case Xe:i=cy.R16Uint;break;case f:i=cy.R32Uint;break;case y:i=cy.R32Sint;break;case pe:i=cy.R8Unorm;break;case ye:i=cy.R16Float;break;case E:i=cy.R32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RedFormat.",r)}break;case Ce:switch(r){case Ye:i=cy.RG8Snorm;break;case Qe:i=cy.RG16Sint;break;case Xe:i=cy.RG16Uint;break;case f:i=cy.RG32Uint;break;case y:i=cy.RG32Sint;break;case pe:i=cy.RG8Unorm;break;case ye:i=cy.RG16Float;break;case E:i=cy.RG32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGFormat.",r)}break;case ce:switch(r){case Xe:i=cy.Depth16Unorm;break;case f:i=cy.Depth24Plus;break;case E:i=cy.Depth32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthFormat.",r)}break;case de:switch(r){case he:i=cy.Depth24PlusStencil8;break;case E:t&&!1===t.features.has(lb.Depth32FloatStencil8)&&console.error('WebGPURenderer: Depth textures with DepthStencilFormat + FloatType can only be used with the "depth32float-stencil8" GPU feature.'),i=cy.Depth32FloatStencil8;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthStencilFormat.",r)}break;case $e:switch(r){case y:i=cy.R32Sint;break;case f:i=cy.R32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RedIntegerFormat.",r)}break;case We:switch(r){case y:i=cy.RG32Sint;break;case f:i=cy.RG32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGIntegerFormat.",r)}break;case Ke:switch(r){case y:i=cy.RGBA32Sint;break;case f:i=cy.RGBA32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAIntegerFormat.",r)}break;default:console.error("WebGPURenderer: Unsupported texture format.",s)}return i}const CS=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/i,ES=/([a-z_0-9]+)\s*:\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/gi,wS={f32:"float",i32:"int",u32:"uint",bool:"bool","vec2<f32>":"vec2","vec2<i32>":"ivec2","vec2<u32>":"uvec2","vec2<bool>":"bvec2",vec2f:"vec2",vec2i:"ivec2",vec2u:"uvec2",vec2b:"bvec2","vec3<f32>":"vec3","vec3<i32>":"ivec3","vec3<u32>":"uvec3","vec3<bool>":"bvec3",vec3f:"vec3",vec3i:"ivec3",vec3u:"uvec3",vec3b:"bvec3","vec4<f32>":"vec4","vec4<i32>":"ivec4","vec4<u32>":"uvec4","vec4<bool>":"bvec4",vec4f:"vec4",vec4i:"ivec4",vec4u:"uvec4",vec4b:"bvec4","mat2x2<f32>":"mat2",mat2x2f:"mat2","mat3x3<f32>":"mat3",mat3x3f:"mat3","mat4x4<f32>":"mat4",mat4x4f:"mat4",sampler:"sampler",texture_1d:"texture",texture_2d:"texture",texture_2d_array:"texture",texture_multisampled_2d:"cubeTexture",texture_depth_2d:"depthTexture",texture_3d:"texture3D",texture_cube:"cubeTexture",texture_cube_array:"cubeTexture",texture_storage_1d:"storageTexture",texture_storage_2d:"storageTexture",texture_storage_2d_array:"storageTexture",texture_storage_3d:"storageTexture"};class MS extends lv{constructor(e){const{type:t,inputs:s,name:r,inputsCode:n,blockCode:i,outputType:o}=(e=>{const t=(e=e.trim()).match(CS);if(null!==t&&4===t.length){const s=t[2],r=[];let n=null;for(;null!==(n=ES.exec(s));)r.push({name:n[1],type:n[2]});const i=[];for(let e=0;e<r.length;e++){const{name:t,type:s}=r[e];let n=s;n.startsWith("ptr")?n="pointer":(n.startsWith("texture")&&(n=s.split("<")[0]),n=wS[n]),i.push(new QN(n,t))}const o=e.substring(t[0].length),a=t[3]||"void",u=void 0!==t[1]?t[1]:"";return{type:wS[a]||a,inputs:i,name:u,inputsCode:s,blockCode:o,outputType:a}}throw new Error("FunctionNode: Function is not a WGSL code.")})(e);super(t,s,r),this.inputsCode=n,this.blockCode=i,this.outputType=o}getCode(e=this.name){const t="void"!==this.outputType?"-> "+this.outputType:"";return`fn ${e} ( ${this.inputsCode.trim()} ) ${t}`+this.blockCode}}class BS extends uv{parseFunction(e){return new MS(e)}}const US=self.GPUShaderStage,FS={[ds]:"repeat",[cs]:"clamp",[hs]:"mirror"},PS={vertex:US?US.VERTEX:1,fragment:US?US.FRAGMENT:2,compute:US?US.COMPUTE:4},IS={instance:!0,swizzleAssign:!1,storageBuffer:!0},LS={"^^":"tsl_xor"},VS={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat2:"mat2x2<f32>",mat3:"mat3x3<f32>",mat4:"mat4x4<f32>"},DS={},OS={tsl_xor:new lx("fn tsl_xor( a : bool, b : bool ) -> bool { return ( a || b ) && !( a && b ); }"),mod_float:new lx("fn tsl_mod_float( x : f32, y : f32 ) -> f32 { return x - y * floor( x / y ); }"),mod_vec2:new lx("fn tsl_mod_vec2( x : vec2f, y : vec2f ) -> vec2f { return x - y * floor( x / y ); }"),mod_vec3:new lx("fn tsl_mod_vec3( x : vec3f, y : vec3f ) -> vec3f { return x - y * floor( x / y ); }"),mod_vec4:new lx("fn tsl_mod_vec4( x : vec4f, y : vec4f ) -> vec4f { return x - y * floor( x / y ); }"),equals_bool:new lx("fn tsl_equals_bool( a : bool, b : bool ) -> bool { return a == b; }"),equals_bvec2:new lx("fn tsl_equals_bvec2( a : vec2f, b : vec2f ) -> vec2<bool> { return vec2<bool>( a.x == b.x, a.y == b.y ); }"),equals_bvec3:new lx("fn tsl_equals_bvec3( a : vec3f, b : vec3f ) -> vec3<bool> { return vec3<bool>( a.x == b.x, a.y == b.y, a.z == b.z ); }"),equals_bvec4:new lx("fn tsl_equals_bvec4( a : vec4f, b : vec4f ) -> vec4<bool> { return vec4<bool>( a.x == b.x, a.y == b.y, a.z == b.z, a.w == b.w ); }"),repeatWrapping_float:new lx("fn tsl_repeatWrapping_float( coord: f32 ) -> f32 { return fract( coord ); }"),mirrorWrapping_float:new lx("fn tsl_mirrorWrapping_float( coord: f32 ) -> f32 { let mirrored = fract( coord * 0.5 ) * 2.0; return 1.0 - abs( 1.0 - mirrored ); }"),clampWrapping_float:new lx("fn tsl_clampWrapping_float( coord: f32 ) -> f32 { return clamp( coord, 0.0, 1.0 ); }"),biquadraticTexture:new lx("\nfn tsl_biquadraticTexture( map : texture_2d<f32>, coord : vec2f, iRes : vec2u, level : u32 ) -> vec4f {\n\n\tlet res = vec2f( iRes );\n\n\tlet uvScaled = coord * res;\n\tlet uvWrapping = ( ( uvScaled % res ) + res ) % res;\n\n\t// https://www.shadertoy.com/view/WtyXRy\n\n\tlet uv = uvWrapping - 0.5;\n\tlet iuv = floor( uv );\n\tlet f = fract( uv );\n\n\tlet rg1 = textureLoad( map, vec2u( iuv + vec2( 0.5, 0.5 ) ) % iRes, level );\n\tlet rg2 = textureLoad( map, vec2u( iuv + vec2( 1.5, 0.5 ) ) % iRes, level );\n\tlet rg3 = textureLoad( map, vec2u( iuv + vec2( 0.5, 1.5 ) ) % iRes, level );\n\tlet rg4 = textureLoad( map, vec2u( iuv + vec2( 1.5, 1.5 ) ) % iRes, level );\n\n\treturn mix( mix( rg1, rg2, f.x ), mix( rg3, rg4, f.x ), f.y );\n\n}\n")},GS={dFdx:"dpdx",dFdy:"- dpdy",mod_float:"tsl_mod_float",mod_vec2:"tsl_mod_vec2",mod_vec3:"tsl_mod_vec3",mod_vec4:"tsl_mod_vec4",equals_bool:"tsl_equals_bool",equals_bvec2:"tsl_equals_bvec2",equals_bvec3:"tsl_equals_bvec3",equals_bvec4:"tsl_equals_bvec4",inversesqrt:"inverseSqrt",bitcast:"bitcast<f32>"};/Windows/g.test(navigator.userAgent)&&(OS.pow_float=new lx("fn tsl_pow_float( a : f32, b : f32 ) -> f32 { return select( -pow( -a, b ), pow( a, b ), a > 0.0 ); }"),OS.pow_vec2=new lx("fn tsl_pow_vec2( a : vec2f, b : vec2f ) -> vec2f { return vec2f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ) ); }",[OS.pow_float]),OS.pow_vec3=new lx("fn tsl_pow_vec3( a : vec3f, b : vec3f ) -> vec3f { return vec3f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ) ); }",[OS.pow_float]),OS.pow_vec4=new lx("fn tsl_pow_vec4( a : vec4f, b : vec4f ) -> vec4f { return vec4f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ), tsl_pow_float( a.w, b.w ) ); }",[OS.pow_float]),GS.pow_float="tsl_pow_float",GS.pow_vec2="tsl_pow_vec2",GS.pow_vec3="tsl_pow_vec3",GS.pow_vec4="tsl_pow_vec4");let kS="";!0!==/Firefox|Deno/g.test(navigator.userAgent)&&(kS+="diagnostic( off, derivative_uniformity );\n");class zS extends XN{constructor(e,t){super(e,t,new BS),this.uniformGroups={},this.builtins={},this.directives={},this.scopedArrays=new Map}needsToWorkingColorSpace(e){return!0===e.isVideoTexture&&e.colorSpace!==m}_generateTextureSample(e,t,s,r,n=this.shaderStage){return"fragment"===n?r?`textureSample( ${t}, ${t}_sampler, ${s}, ${r} )`:`textureSample( ${t}, ${t}_sampler, ${s} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,s):this.generateTextureLod(e,t,s,r,"0")}_generateVideoSample(e,t,s=this.shaderStage){if("fragment"===s)return`textureSampleBaseClampToEdge( ${e}, ${e}_sampler, vec2<f32>( ${t}.x, 1.0 - ${t}.y ) )`;console.error(`WebGPURenderer: THREE.VideoTexture does not support ${s} shader.`)}_generateTextureSampleLevel(e,t,s,r,n,i=this.shaderStage){return"fragment"===i&&!1===this.isUnfilterable(e)?`textureSampleLevel( ${t}, ${t}_sampler, ${s}, ${r} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,s,r):this.generateTextureLod(e,t,s,n,r)}generateWrapFunction(e){const t=`tsl_coord_${FS[e.wrapS]}S_${FS[e.wrapT]}T`;let s=DS[t];if(void 0===s){const r=[];let n=`fn ${t}( coord : vec2f ) -> vec2f {\n\n\treturn vec2f(\n`;const i=(e,t)=>{e===ds?(r.push(OS.repeatWrapping_float),n+=`\t\ttsl_repeatWrapping_float( coord.${t} )`):e===cs?(r.push(OS.clampWrapping_float),n+=`\t\ttsl_clampWrapping_float( coord.${t} )`):e===hs?(r.push(OS.mirrorWrapping_float),n+=`\t\ttsl_mirrorWrapping_float( coord.${t} )`):(n+=`\t\tcoord.${t}`,console.warn(`WebGPURenderer: Unsupported texture wrap type "${e}" for vertex shader.`))};i(e.wrapS,"x"),n+=",\n",i(e.wrapT,"y"),n+="\n\t);\n\n}\n",DS[t]=s=new lx(n,r)}return s.build(this),t}generateTextureDimension(e,t,s){const r=this.getDataFromNode(e,this.shaderStage,this.globalCache);void 0===r.dimensionsSnippet&&(r.dimensionsSnippet={});let n=r.dimensionsSnippet[s];if(void 0===r.dimensionsSnippet[s]){let i;i=!0===e.isMultisampleRenderTargetTexture?t:`${t}, u32( ${s} )`,n=new Aa(new au(`textureDimensions( ${i} )`,"uvec2")),r.dimensionsSnippet[s]=n}return n.build(this)}generateFilteredTexture(e,t,s,r="0u"){this._include("biquadraticTexture");return`tsl_biquadraticTexture( ${t}, ${this.generateWrapFunction(e)}( ${s} ), ${this.generateTextureDimension(e,t,r)}, u32( ${r} ) )`}generateTextureLod(e,t,s,r,n="0u"){const i=`vec2u( ${this.generateWrapFunction(e)}( ${s} ) * vec2f( ${this.generateTextureDimension(e,t,n)} ) )`;return this.generateTextureLoad(e,t,i,r,n)}generateTextureLoad(e,t,s,r,n="0u"){return r?`textureLoad( ${t}, ${s}, ${r}, u32( ${n} ) )`:`textureLoad( ${t}, ${s}, u32( ${n} ) )`}generateTextureStore(e,t,s,r){return`textureStore( ${t}, ${s}, ${r} )`}isSampleCompare(e){return!0===e.isDepthTexture&&null!==e.compareFunction}isUnfilterable(e){return"float"!==this.getComponentTypeFromTexture(e)||!this.isAvailable("float32Filterable")&&!0===e.isDataTexture&&e.type===E||!1===this.isSampleCompare(e)&&e.minFilter===ps&&e.magFilter===ps||!0===e.isMultisampleRenderTargetTexture}generateTexture(e,t,s,r,n=this.shaderStage){let i=null;return i=!0===e.isVideoTexture?this._generateVideoSample(t,s,n):this.isUnfilterable(e)?this.generateTextureLod(e,t,s,r,"0",n):this._generateTextureSample(e,t,s,r,n),i}generateTextureGrad(e,t,s,r,n,i=this.shaderStage){if("fragment"===i)return`textureSampleGrad( ${t}, ${t}_sampler, ${s},  ${r[0]}, ${r[1]} )`;console.error(`WebGPURenderer: THREE.TextureNode.gradient() does not support ${i} shader.`)}generateTextureCompare(e,t,s,r,n,i=this.shaderStage){if("fragment"===i)return`textureSampleCompare( ${t}, ${t}_sampler, ${s}, ${r} )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${i} shader.`)}generateTextureLevel(e,t,s,r,n,i=this.shaderStage){let o=null;return o=!0===e.isVideoTexture?this._generateVideoSample(t,s,i):this._generateTextureSampleLevel(e,t,s,r,n,i),o}generateTextureBias(e,t,s,r,n,i=this.shaderStage){if("fragment"===i)return`textureSampleBias( ${t}, ${t}_sampler, ${s}, ${r} )`;console.error(`WebGPURenderer: THREE.TextureNode.biasNode does not support ${i} shader.`)}getPropertyName(e,t=this.shaderStage){if(!0===e.isNodeVarying&&!0===e.needsInterpolation){if("vertex"===t)return`varyings.${e.name}`}else if(!0===e.isNodeUniform){const t=e.name,s=e.type;return"texture"===s||"cubeTexture"===s||"storageTexture"===s||"texture3D"===s?t:"buffer"===s||"storageBuffer"===s||"indirectStorageBuffer"===s?`NodeBuffer_${e.id}.${t}`:e.groupNode.name+"."+t}return super.getPropertyName(e)}getOutputStructName(){return"output"}_getUniformGroupCount(e){return Object.keys(this.uniforms[e]).length}getFunctionOperator(e){const t=LS[e];return void 0!==t?(this._include(t),t):null}getStorageAccess(e){if(e.isStorageTextureNode)switch(e.access){case Ky:return"read";case qy:return"write";default:return"read_write"}else switch(e.access){case Wy:return"read_write";case jy:return"read";default:return"write"}}getUniformFromNode(e,t,s,r=null){const n=super.getUniformFromNode(e,t,s,r),i=this.getDataFromNode(e,s,this.globalCache);if(void 0===i.uniformGPU){let r;const o=e.groupNode,a=o.name,u=this.getBindGroupArray(a,s);if("texture"===t||"cubeTexture"===t||"storageTexture"===t||"texture3D"===t){let i=null;if("texture"===t||"storageTexture"===t?i=new kv(n.name,n.node,o,e.access?e.access:null):"cubeTexture"===t?i=new zv(n.name,n.node,o,e.access?e.access:null):"texture3D"===t&&(i=new $v(n.name,n.node,o,e.access?e.access:null)),i.store=!0===e.isStorageTextureNode,i.setVisibility(PS[s]),"fragment"===s&&!1===this.isUnfilterable(e.value)&&!1===i.store){const e=new bS(`${n.name}_sampler`,n.node,o);e.setVisibility(PS[s]),u.push(e,i),r=[e,i]}else u.push(i),r=[i]}else if("buffer"===t||"storageBuffer"===t||"indirectStorageBuffer"===t){const n=new("buffer"===t?Iv:_S)(e,o);n.setVisibility(PS[s]),u.push(n),r=n}else{const e=this.uniformGroups[s]||(this.uniformGroups[s]={});let i=e[a];void 0===i&&(i=new Dv(a,o),i.setVisibility(PS[s]),e[a]=i,u.push(i)),r=this.getNodeUniform(n,t),i.addUniform(r)}i.uniformGPU=r}return n}getBuiltin(e,t,s,r=this.shaderStage){const n=this.builtins[r]||(this.builtins[r]=new Map);return!1===n.has(e)&&n.set(e,{name:e,property:t,type:s}),t}hasBuiltin(e,t=this.shaderStage){return void 0!==this.builtins[t]&&this.builtins[t].has(e)}getVertexIndex(){return"vertex"===this.shaderStage?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}buildFunctionCode(e){const t=e.layout,s=this.flowShaderNode(e),r=[];for(const e of t.inputs)r.push(e.name+" : "+this.getType(e.type));let n=`fn ${t.name}( ${r.join(", ")} ) -> ${this.getType(t.type)} {\n${s.vars}\n${s.code}\n`;return s.result&&(n+=`\treturn ${s.result};\n`),n+="\n}\n",n}getInstanceIndex(){return"vertex"===this.shaderStage?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getInvocationLocalIndex(){return this.getBuiltin("local_invocation_index","invocationLocalIndex","u32","attribute")}getSubgroupSize(){return this.enableSubGroups(),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute")}getInvocationSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_invocation_id","invocationSubgroupIndex","u32","attribute")}getSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_id","subgroupIndex","u32","attribute")}getDrawIndex(){return null}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>")+".xy"}getFragDepth(){return"output."+this.getBuiltin("frag_depth","depth","f32","output")}getClipDistance(){return"varyings.hw_clip_distances"}isFlipY(){return!1}enableDirective(e,t=this.shaderStage){(this.directives[t]||(this.directives[t]=new Set)).add(e)}getDirectives(e){const t=[],s=this.directives[e];if(void 0!==s)for(const e of s)t.push(`enable ${e};`);return t.join("\n")}enableSubGroups(){this.enableDirective("subgroups")}enableSubgroupsF16(){this.enableDirective("subgroups-f16")}enableClipDistances(){this.enableDirective("clip_distances")}enableShaderF16(){this.enableDirective("f16")}enableDualSourceBlending(){this.enableDirective("dual_source_blending")}enableHardwareClipping(e){this.enableClipDistances(),this.getBuiltin("clip_distances","hw_clip_distances",`array<f32, ${e} >`,"vertex")}getBuiltins(e){const t=[],s=this.builtins[e];if(void 0!==s)for(const{name:e,property:r,type:n}of s.values())t.push(`@builtin( ${e} ) ${r} : ${n}`);return t.join(",\n\t")}getScopedArray(e,t,s,r){return!1===this.scopedArrays.has(e)&&this.scopedArrays.set(e,{name:e,scope:t,bufferType:s,bufferCount:r}),e}getScopedArrays(e){if("compute"!==e)return;const t=[];for(const{name:e,scope:s,bufferType:r,bufferCount:n}of this.scopedArrays.values()){const i=this.getType(r);t.push(`var<${s}> ${e}: array< ${i}, ${n} >;`)}return t.join("\n")}getAttributes(e){const t=[];if("compute"===e&&(this.getBuiltin("global_invocation_id","id","vec3<u32>","attribute"),this.getBuiltin("workgroup_id","workgroupId","vec3<u32>","attribute"),this.getBuiltin("local_invocation_id","localId","vec3<u32>","attribute"),this.getBuiltin("num_workgroups","numWorkgroups","vec3<u32>","attribute"),this.renderer.hasFeature("subgroups")&&(this.enableDirective("subgroups",e),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute"))),"vertex"===e||"compute"===e){const e=this.getBuiltins("attribute");e&&t.push(e);const s=this.getAttributesArray();for(let e=0,r=s.length;e<r;e++){const r=s[e],n=r.name,i=this.getType(r.type);t.push(`@location( ${e} ) ${n} : ${i}`)}}return t.join(",\n\t")}getStructMembers(e){const t=[],s=e.getMemberTypes();for(let e=0;e<s.length;e++){const r=s[e];t.push(`\t@location( ${e} ) m${e} : ${r}<f32>`)}const r=this.getBuiltins("output");return r&&t.push("\t"+r),t.join(",\n")}getStructs(e){const t=[],s=this.structs[e];for(let e=0,r=s.length;e<r;e++){const r=s[e],n=r.name;let i=`struct ${n} {\n`;i+=this.getStructMembers(r),i+="\n}",t.push(i),t.push(`\nvar<private> output : ${n};\n\n`)}return t.join("\n\n")}getVar(e,t){return`var ${t} : ${this.getType(e)}`}getVars(e){const t=[],s=this.vars[e];if(void 0!==s)for(const e of s)t.push(`\t${this.getVar(e.type,e.name)};`);return`\n${t.join("\n")}\n`}getVaryings(e){const t=[];if("vertex"===e&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),"vertex"===e||"fragment"===e){const s=this.varyings,r=this.vars[e];for(let n=0;n<s.length;n++){const i=s[n];if(i.needsInterpolation){let e=`@location( ${n} )`;/^(int|uint|ivec|uvec)/.test(i.type)&&(e+=" @interpolate( flat )"),t.push(`${e} ${i.name} : ${this.getType(i.type)}`)}else"vertex"===e&&!1===r.includes(i)&&r.push(i)}}const s=this.getBuiltins(e);s&&t.push(s);const r=t.join(",\n\t");return"vertex"===e?this._getWGSLStruct("VaryingsStruct","\t"+r):r}getUniforms(e){const t=this.uniforms[e],s=[],r=[],n=[],i={};for(const n of t){const t=n.groupNode.name,o=this.bindingsIndexes[t];if("texture"===n.type||"cubeTexture"===n.type||"storageTexture"===n.type||"texture3D"===n.type){const t=n.node.value;let r;"fragment"===e&&!1===this.isUnfilterable(t)&&!0!==n.node.isStorageTextureNode&&(this.isSampleCompare(t)?s.push(`@binding( ${o.binding++} ) @group( ${o.group} ) var ${n.name}_sampler : sampler_comparison;`):s.push(`@binding( ${o.binding++} ) @group( ${o.group} ) var ${n.name}_sampler : sampler;`));let i="";if(!0===t.isMultisampleRenderTargetTexture&&(i="_multisampled"),!0===t.isCubeTexture)r="texture_cube<f32>";else if(!0===t.isDataArrayTexture||!0===t.isCompressedArrayTexture)r="texture_2d_array<f32>";else if(!0===t.isDepthTexture)r=`texture_depth${i}_2d`;else if(!0===t.isVideoTexture)r="texture_external";else if(!0===t.isData3DTexture)r="texture_3d<f32>";else if(!0===n.node.isStorageTextureNode){r=`texture_storage_2d<${RS(t)}, ${this.getStorageAccess(n.node)}>`}else{r=`texture${i}_2d<${this.getComponentTypeFromTexture(t).charAt(0)}32>`}s.push(`@binding( ${o.binding++} ) @group( ${o.group} ) var ${n.name} : ${r};`)}else if("buffer"===n.type||"storageBuffer"===n.type||"indirectStorageBuffer"===n.type){const e=n.node,t=this.getType(e.bufferType),s=e.bufferCount,i=s>0&&"buffer"===n.type?", "+s:"",a=e.isAtomic?`atomic<${t}>`:`${t}`,u=`\t${n.name} : array< ${a}${i} >\n`,l=e.isStorageBufferNode?`storage, ${this.getStorageAccess(e)}`:"uniform";r.push(this._getWGSLStructBinding("NodeBuffer_"+e.id,u,l,o.binding++,o.group))}else{const e=this.getType(this.getVectorType(n.type)),t=n.groupNode.name;(i[t]||(i[t]={index:o.binding++,id:o.group,snippets:[]})).snippets.push(`\t${n.name} : ${e}`)}}for(const e in i){const t=i[e];n.push(this._getWGSLStructBinding(e,t.snippets.join(",\n"),"uniform",t.index,t.id))}let o=s.join("\n");return o+=r.join("\n"),o+=n.join("\n"),o}buildCode(){const e=null!==this.material?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){const s=e[t];s.uniforms=this.getUniforms(t),s.attributes=this.getAttributes(t),s.varyings=this.getVaryings(t),s.structs=this.getStructs(t),s.vars=this.getVars(t),s.codes=this.getCodes(t),s.directives=this.getDirectives(t),s.scopedArrays=this.getScopedArrays(t);let r="// code\n\n";r+=this.flowCode[t];const n=this.flowNodes[t],i=n[n.length-1],o=i.outputNode,a=void 0!==o&&!0===o.isOutputStructNode;for(const e of n){const n=this.getFlowData(e),u=e.name;if(u&&(r.length>0&&(r+="\n"),r+=`\t// flow -> ${u}\n\t`),r+=`${n.code}\n\t`,e===i&&"compute"!==t)if(r+="// result\n\n\t","vertex"===t)r+=`varyings.Vertex = ${n.result};`;else if("fragment"===t)if(a)s.returnType=o.nodeType,r+=`return ${n.result};`;else{let e="\t@location(0) color: vec4<f32>";const t=this.getBuiltins("output");t&&(e+=",\n\t"+t),s.returnType="OutputStruct",s.structs+=this._getWGSLStruct("OutputStruct",e),s.structs+="\nvar<private> output : OutputStruct;\n\n",r+=`output.color = ${n.result};\n\n\treturn output;`}}s.flow=r}null!==this.material?(this.vertexShader=this._getWGSLVertexCode(e.vertex),this.fragmentShader=this._getWGSLFragmentCode(e.fragment)):this.computeShader=this._getWGSLComputeCode(e.compute,(this.object.workgroupSize||[64]).join(", "))}getMethod(e,t=null){let s;return null!==t&&(s=this._getWGSLMethod(e+"_"+t)),void 0===s&&(s=this._getWGSLMethod(e)),s||e}getType(e){return VS[e]||e}isAvailable(e){let t=IS[e];return void 0===t&&("float32Filterable"===e?t=this.renderer.hasFeature("float32-filterable"):"clipDistance"===e&&(t=this.renderer.hasFeature("clip-distances")),IS[e]=t),t}_getWGSLMethod(e){return void 0!==OS[e]&&this._include(e),GS[e]}_include(e){const t=OS[e];return t.build(this),null!==this.currentFunctionNode&&this.currentFunctionNode.includes.push(t),t}_getWGSLVertexCode(e){return`${this.getSignature()}\n// directives\n${e.directives}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\nvar<private> varyings : VaryingsStruct;\n\n// codes\n${e.codes}\n\n@vertex\nfn main( ${e.attributes} ) -> VaryingsStruct {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n\treturn varyings;\n\n}\n`}_getWGSLFragmentCode(e){return`${this.getSignature()}\n// global\n${kS}\n\n// uniforms\n${e.uniforms}\n\n// structs\n${e.structs}\n\n// codes\n${e.codes}\n\n@fragment\nfn main( ${e.varyings} ) -> ${e.returnType} {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}_getWGSLComputeCode(e,t){return`${this.getSignature()}\n// directives\n${e.directives}\n\n// system\nvar<private> instanceIndex : u32;\n\n// locals\n${e.scopedArrays}\n\n// uniforms\n${e.uniforms}\n\n// codes\n${e.codes}\n\n@compute @workgroup_size( ${t} )\nfn main( ${e.attributes} ) {\n\n\t// system\n\tinstanceIndex = id.x + id.y * numWorkgroups.x * u32(${t}) + id.z * numWorkgroups.x * numWorkgroups.y * u32(${t});\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}_getWGSLStruct(e,t){return`\nstruct ${e} {\n${t}\n};`}_getWGSLStructBinding(e,t,s,r=0,n=0){const i=e+"Struct";return`${this._getWGSLStruct(i,t)}\n@binding( ${r} ) @group( ${n} )\nvar<${s}> ${e} : ${i};`}}class $S{constructor(e){this.backend=e}getCurrentDepthStencilFormat(e){let t;return null!==e.depthTexture?t=this.getTextureFormatGPU(e.depthTexture):e.depth&&e.stencil?t=cy.Depth24PlusStencil8:e.depth&&(t=cy.Depth24Plus),t}getTextureFormatGPU(e){return this.backend.get(e).format}getCurrentColorFormat(e){let t;return t=null!==e.textures?this.getTextureFormatGPU(e.textures[0]):this.getPreferredCanvasFormat(),t}getCurrentColorSpace(e){return null!==e.textures?e.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(e,t){return e.isPoints?$f:e.isLineSegments||e.isMesh&&!0===t.wireframe?Hf:e.isLine?Wf:e.isMesh?jf:void 0}getSampleCount(e){let t=1;return e>1&&(t=Math.pow(2,Math.floor(Math.log2(e))),2===t&&(t=4)),t}getSampleCountRenderContext(e){return null!==e.textures?this.getSampleCount(e.sampleCount):this.getSampleCount(this.backend.renderer.samples)}getPreferredCanvasFormat(){return navigator.userAgent.includes("Quest")?cy.BGRA8Unorm:navigator.gpu.getPreferredCanvasFormat()}}const HS=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]),WS=new Map([[Le,["float16"]]]),jS=new Map([[Int32Array,"sint32"],[Int16Array,"sint32"],[Uint32Array,"uint32"],[Uint16Array,"uint32"],[Float32Array,"float32"]]);class qS{constructor(e){this.backend=e}createAttribute(e,t){const s=this._getBufferAttribute(e),r=this.backend,n=r.get(s);let i=n.buffer;if(void 0===i){const o=r.device;let a=s.array;if(!1===e.normalized&&(a.constructor===Int16Array||a.constructor===Uint16Array)){const e=new Uint32Array(a.length);for(let t=0;t<a.length;t++)e[t]=a[t];a=e}if(s.array=a,(s.isStorageBufferAttribute||s.isStorageInstancedBufferAttribute)&&3===s.itemSize){a=new a.constructor(4*s.count);for(let e=0;e<s.count;e++)a.set(s.array.subarray(3*e,3*e+3),4*e);s.itemSize=4,s.array=a}const u=a.byteLength+(4-a.byteLength%4)%4;i=o.createBuffer({label:s.name,size:u,usage:t,mappedAtCreation:!0}),new a.constructor(i.getMappedRange()).set(a),i.unmap(),n.buffer=i}}updateAttribute(e){const t=this._getBufferAttribute(e),s=this.backend,r=s.device,n=s.get(t).buffer,i=t.array,o=t.updateRanges;if(0===o.length)r.queue.writeBuffer(n,0,i,0);else{for(let e=0,t=o.length;e<t;e++){const t=o[e];r.queue.writeBuffer(n,0,i,t.start*i.BYTES_PER_ELEMENT,t.count*i.BYTES_PER_ELEMENT)}t.clearUpdateRanges()}}createShaderVertexBuffers(e){const t=e.getAttributes(),s=new Map;for(let e=0;e<t.length;e++){const r=t[e],n=r.array.BYTES_PER_ELEMENT,i=this._getBufferAttribute(r);let o=s.get(i);if(void 0===o){let e,t;!0===r.isInterleavedBufferAttribute?(e=r.data.stride*n,t=r.data.isInstancedInterleavedBuffer?ub:ab):(e=r.itemSize*n,t=r.isInstancedBufferAttribute?ub:ab),!1!==r.normalized||r.array.constructor!==Int16Array&&r.array.constructor!==Uint16Array||(e=4),o={arrayStride:e,attributes:[],stepMode:t},s.set(i,o)}const a=this._getVertexFormat(r),u=!0===r.isInterleavedBufferAttribute?r.offset*n:0;o.attributes.push({shaderLocation:e,offset:u,format:a})}return Array.from(s.values())}destroyAttribute(e){const t=this.backend;t.get(this._getBufferAttribute(e)).buffer.destroy(),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,s=t.device,r=t.get(this._getBufferAttribute(e)).buffer,n=r.size,i=s.createBuffer({label:e.name,size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),o=s.createCommandEncoder({});o.copyBufferToBuffer(r,0,i,0,n),i.unmap();const a=o.finish();s.queue.submit([a]),await i.mapAsync(GPUMapMode.READ);return i.getMappedRange()}_getVertexFormat(e){const{itemSize:t,normalized:s}=e,r=e.array.constructor,n=e.constructor;let i;if(1==t)i=jS.get(r);else{const e=(WS.get(n)||HS.get(r))[s?1:0];if(e){const s=r.BYTES_PER_ELEMENT*t,n=4*Math.floor((s+3)/4)/r.BYTES_PER_ELEMENT;if(n%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");i=`${e}x${n}`}}return i||console.error("THREE.WebGPUAttributeUtils: Vertex format not supported yet."),i}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}class KS{constructor(e){this.backend=e,this.bindGroupLayoutCache=new WeakMap}createBindingsLayout(e){const t=this.backend.device,s=[];let r=0;for(const t of e.bindings){const e={binding:r++,visibility:t.visibility};if(t.isUniformBuffer||t.isStorageBuffer){const s={};t.isStorageBuffer&&(s.type=t.access),e.buffer=s}else if(t.isSampler){const s={};t.texture.isDepthTexture&&null!==t.texture.compareFunction&&(s.type="comparison"),e.sampler=s}else if(t.isSampledTexture&&t.texture.isVideoTexture)e.externalTexture={};else if(t.isSampledTexture&&t.store){const s=this.backend.get(t.texture).texture.format,r=t.access;e.storageTexture={format:s,access:r}}else if(t.isSampledTexture){const s={};if(!0===t.texture.isMultisampleRenderTargetTexture&&(s.multisampled=!0),t.texture.isDepthTexture)s.sampleType=Qy;else if(t.texture.isDataTexture||t.texture.isDataArrayTexture||t.texture.isData3DTexture){const e=t.texture.type;e===y?s.sampleType=Zy:e===f?s.sampleType=Jy:e===E&&(this.backend.hasFeature("float32-filterable")?s.sampleType=Xy:s.sampleType=Yy)}t.isSampledCubeTexture?s.viewDimension=nb:t.texture.isDataArrayTexture||t.texture.isCompressedArrayTexture?s.viewDimension=rb:t.isSampledTexture3D&&(s.viewDimension=ib),e.texture=s}else console.error(`WebGPUBindingUtils: Unsupported binding "${t}".`);s.push(e)}return t.createBindGroupLayout({entries:s})}createBindings(e,t,s,r=0){const{backend:n,bindGroupLayoutCache:i}=this,o=n.get(e);let a,u=i.get(e.bindingsReference);void 0===u&&(u=this.createBindingsLayout(e),i.set(e.bindingsReference,u)),s>0&&(void 0===o.groups&&(o.groups=[],o.versions=[]),o.versions[s]===r&&(a=o.groups[s])),void 0===a&&(a=this.createBindGroup(e,u),s>0&&(o.groups[s]=a,o.versions[s]=r)),o.group=a,o.layout=u}updateBinding(e){const t=this.backend,s=t.device,r=e.buffer,n=t.get(e).buffer;s.queue.writeBuffer(n,0,r,0)}createBindGroup(e,t){const s=this.backend,r=s.device;let n=0;const i=[];for(const t of e.bindings){if(t.isUniformBuffer){const e=s.get(t);if(void 0===e.buffer){const s=t.byteLength,n=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,i=r.createBuffer({label:"bindingBuffer_"+t.name,size:s,usage:n});e.buffer=i}i.push({binding:n,resource:{buffer:e.buffer}})}else if(t.isStorageBuffer){const e=s.get(t);if(void 0===e.buffer){const r=t.attribute;e.buffer=s.get(r).buffer}i.push({binding:n,resource:{buffer:e.buffer}})}else if(t.isSampler){const e=s.get(t.texture);i.push({binding:n,resource:e.sampler})}else if(t.isSampledTexture){const e=s.get(t.texture);let o;if(void 0!==e.externalTexture)o=r.importExternalTexture({source:e.externalTexture});else{const s=t.store?1:e.texture.mipLevelCount,r=`view-${e.texture.width}-${e.texture.height}-${s}`;if(o=e[r],void 0===o){const n=ob;let i;i=t.isSampledCubeTexture?nb:t.isSampledTexture3D?ib:t.texture.isDataArrayTexture||t.texture.isCompressedArrayTexture?rb:sb,o=e[r]=e.texture.createView({aspect:n,dimension:i,mipLevelCount:s})}}i.push({binding:n,resource:o})}n++}return r.createBindGroup({label:"bindGroup_"+e.name,layout:t,entries:i})}}class XS{constructor(e){this.backend=e}_getSampleCount(e){return this.backend.utils.getSampleCountRenderContext(e)}createRenderPipeline(e,t){const{object:s,material:r,geometry:n,pipeline:i}=e,{vertexProgram:o,fragmentProgram:a}=i,u=this.backend,l=u.device,d=u.utils,c=u.get(i),h=[];for(const t of e.getBindings()){const e=u.get(t);h.push(e.layout)}const p=u.attributeUtils.createShaderVertexBuffers(e);let g;!0===r.transparent&&r.blending!==G&&(g=this._getBlending(r));let m={};!0===r.stencilWrite&&(m={compare:this._getStencilCompare(r),failOp:this._getStencilOperation(r.stencilFail),depthFailOp:this._getStencilOperation(r.stencilZFail),passOp:this._getStencilOperation(r.stencilZPass)});const f=this._getColorWriteMask(r),y=[];if(null!==e.context.textures){const t=e.context.textures;for(let e=0;e<t.length;e++){const s=d.getTextureFormatGPU(t[e]);y.push({format:s,blend:g,writeMask:f})}}else{const t=d.getCurrentColorFormat(e.context);y.push({format:t,blend:g,writeMask:f})}const b=u.get(o).module,x=u.get(a).module,T=this._getPrimitiveState(s,n,r),_=this._getDepthCompare(r),N=d.getCurrentDepthStencilFormat(e.context),v=this._getSampleCount(e.context),S={label:`renderPipeline_${r.name||r.type}_${r.id}`,vertex:Object.assign({},b,{buffers:p}),fragment:Object.assign({},x,{targets:y}),primitive:T,multisample:{count:v,alphaToCoverageEnabled:r.alphaToCoverage&&v>1},layout:l.createPipelineLayout({bindGroupLayouts:h})},A={},R=e.context.depth,C=e.context.stencil;if(!0!==R&&!0!==C||(!0===R&&(A.format=N,A.depthWriteEnabled=r.depthWrite,A.depthCompare=_),!0===C&&(A.stencilFront=m,A.stencilBack={},A.stencilReadMask=r.stencilFuncMask,A.stencilWriteMask=r.stencilWriteMask),S.depthStencil=A),null===t)c.pipeline=l.createRenderPipeline(S);else{const e=new Promise((e=>{l.createRenderPipelineAsync(S).then((t=>{c.pipeline=t,e()}))}));t.push(e)}}createBundleEncoder(e){const t=this.backend,{utils:s,device:r}=t,n=s.getCurrentDepthStencilFormat(e),i={label:"renderBundleEncoder",colorFormats:[s.getCurrentColorFormat(e)],depthStencilFormat:n,sampleCount:this._getSampleCount(e)};return r.createRenderBundleEncoder(i)}createComputePipeline(e,t){const s=this.backend,r=s.device,n=s.get(e.computeProgram).module,i=s.get(e),o=[];for(const e of t){const t=s.get(e);o.push(t.layout)}i.pipeline=r.createComputePipeline({compute:n,layout:r.createPipelineLayout({bindGroupLayouts:o})})}_getBlending(e){let t,s;const r=e.blending,n=e.blendSrc,i=e.blendDst,o=e.blendEquation;if(r===ft){const r=null!==e.blendSrcAlpha?e.blendSrcAlpha:n,a=null!==e.blendDstAlpha?e.blendDstAlpha:i,u=null!==e.blendEquationAlpha?e.blendEquationAlpha:o;t={srcFactor:this._getBlendFactor(n),dstFactor:this._getBlendFactor(i),operation:this._getBlendOperation(o)},s={srcFactor:this._getBlendFactor(r),dstFactor:this._getBlendFactor(a),operation:this._getBlendOperation(u)}}else{const n=(e,r,n,i)=>{t={srcFactor:e,dstFactor:r,operation:My},s={srcFactor:n,dstFactor:i,operation:My}};if(e.premultipliedAlpha)switch(r){case F:n(by,Ny,by,Ny);break;case xt:n(by,by,by,by);break;case bt:n(yy,Ty,yy,by);break;case yt:n(yy,xy,yy,_y)}else switch(r){case F:n(_y,Ny,by,Ny);break;case xt:n(_y,by,_y,by);break;case bt:n(yy,Ty,yy,by);break;case yt:n(yy,xy,yy,xy)}}if(void 0!==t&&void 0!==s)return{color:t,alpha:s};console.error("THREE.WebGPURenderer: Invalid blending: ",r)}_getBlendFactor(e){let t;switch(e){case st:t=yy;break;case rt:t=by;break;case nt:t=xy;break;case lt:t=Ty;break;case it:t=_y;break;case dt:t=Ny;break;case at:t=vy;break;case ct:t=Sy;break;case ut:t=Ay;break;case ht:t=Ry;break;case ot:t=Cy;break;case 211:t=Ey;break;case 212:t=wy;break;default:console.error("THREE.WebGPURenderer: Blend factor not supported.",e)}return t}_getStencilCompare(e){let t;const s=e.stencilFunc;switch(s){case Ms:t=Kf;break;case ws:t=ty;break;case Es:t=Xf;break;case Cs:t=Qf;break;case Rs:t=Yf;break;case As:t=ey;break;case Ss:t=Zf;break;case vs:t=Jf;break;default:console.error("THREE.WebGPURenderer: Invalid stencil function.",s)}return t}_getStencilOperation(e){let t;switch(e){case Ds:t=Vy;break;case Vs:t=Dy;break;case Ls:t=Oy;break;case Is:t=Gy;break;case Ps:t=ky;break;case Fs:t=zy;break;case Us:t=$y;break;case Bs:t=Hy;break;default:console.error("THREE.WebGPURenderer: Invalid stencil operation.",t)}return t}_getBlendOperation(e){let t;switch(e){case Je:t=My;break;case et:t=By;break;case tt:t=Uy;break;case Gs:t=Fy;break;case Os:t=Py;break;default:console.error("THREE.WebGPUPipelineUtils: Blend equation not supported.",e)}return t}_getPrimitiveState(e,t,s){const r={},n=this.backend.utils;switch(r.topology=n.getPrimitiveTopology(e,s),null!==t.index&&!0===e.isLine&&!0!==e.isLineSegments&&(r.stripIndexFormat=t.index.array instanceof Uint16Array?ly:dy),s.side){case Ge:r.frontFace=iy,r.cullMode=uy;break;case x:r.frontFace=iy,r.cullMode=ay;break;case le:r.frontFace=iy,r.cullMode=oy;break;default:console.error("THREE.WebGPUPipelineUtils: Unknown material.side value.",s.side)}return r}_getColorWriteMask(e){return!0===e.colorWrite?Ly:Iy}_getDepthCompare(e){let t;if(!1===e.depthTest)t=ty;else{const s=e.depthFunc;switch(s){case Ct:t=Kf;break;case Rt:t=ty;break;case At:t=Xf;break;case St:t=Qf;break;case vt:t=Yf;break;case Nt:t=ey;break;case _t:t=Zf;break;case Tt:t=Jf;break;default:console.error("THREE.WebGPUPipelineUtils: Invalid depth function.",s)}}return t}}class YS extends Zv{constructor(e={}){super(e),this.isWebGPUBackend=!0,this.parameters.alpha=void 0===e.alpha||e.alpha,this.parameters.requiredLimits=void 0===e.requiredLimits?{}:e.requiredLimits,this.trackTimestamp=!0===e.trackTimestamp,this.device=null,this.context=null,this.colorBuffer=null,this.defaultRenderPassdescriptor=null,this.utils=new $S(this),this.attributeUtils=new qS(this),this.bindingUtils=new KS(this),this.pipelineUtils=new XS(this),this.textureUtils=new AS(this),this.occludedResolveCache=new Map}async init(e){await super.init(e);const t=this.parameters;let s;if(void 0===t.device){const e={powerPreference:t.powerPreference},r=await navigator.gpu.requestAdapter(e);if(null===r)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const n=Object.values(lb),i=[];for(const e of n)r.features.has(e)&&i.push(e);const o={requiredFeatures:i,requiredLimits:t.requiredLimits};s=await r.requestDevice(o)}else s=t.device;s.lost.then((t=>{const s={api:"WebGPU",message:t.message||"Unknown reason",reason:t.reason||null,originalEvent:t};e.onDeviceLost(s)}));const r=void 0!==t.context?t.context:e.domElement.getContext("webgpu");this.device=s,this.context=r;const n=t.alpha?"premultiplied":"opaque";this.trackTimestamp=this.trackTimestamp&&this.hasFeature(lb.TimestampQuery),this.context.configure({device:this.device,format:this.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:n}),this.updateSize()}get coordinateSystem(){return N}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}getContext(){return this.context}_getDefaultRenderPassDescriptor(){let e=this.defaultRenderPassdescriptor;if(null===e){const t=this.renderer;e={colorAttachments:[{view:null}]},!0!==this.renderer.depth&&!0!==this.renderer.stencil||(e.depthStencilAttachment={view:this.textureUtils.getDepthBuffer(t.depth,t.stencil).createView()});const s=e.colorAttachments[0];this.renderer.samples>0?s.view=this.colorBuffer.createView():s.resolveTarget=void 0,this.defaultRenderPassdescriptor=e}const t=e.colorAttachments[0];return this.renderer.samples>0?t.resolveTarget=this.context.getCurrentTexture().createView():t.view=this.context.getCurrentTexture().createView(),e}_getRenderPassDescriptor(e){const t=e.renderTarget,s=this.get(t);let r=s.descriptors;if(void 0===r||s.width!==t.width||s.height!==t.height||s.activeMipmapLevel!==t.activeMipmapLevel||s.samples!==t.samples){r={},s.descriptors=r;const e=()=>{t.removeEventListener("dispose",e),this.delete(t)};t.addEventListener("dispose",e)}const n=e.getCacheKey();let i=r[n];if(void 0===i){const o=e.textures,a=[];for(let t=0;t<o.length;t++){const s=this.get(o[t]),r=s.texture.createView({baseMipLevel:e.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:e.activeCubeFace,dimension:sb});let n,i;void 0!==s.msaaTexture?(n=s.msaaTexture.createView(),i=r):(n=r,i=void 0),a.push({view:n,resolveTarget:i,loadOp:ry,storeOp:sy})}if(i={colorAttachments:a},e.depth){const t={view:this.get(e.depthTexture).texture.createView()};i.depthStencilAttachment=t}r[n]=i,s.width=t.width,s.height=t.height,s.samples=t.samples,s.activeMipmapLevel=t.activeMipmapLevel}return i}beginRender(e){const t=this.get(e),s=this.device,r=e.occlusionQueryCount;let n,i;r>0&&(t.currentOcclusionQuerySet&&t.currentOcclusionQuerySet.destroy(),t.currentOcclusionQueryBuffer&&t.currentOcclusionQueryBuffer.destroy(),t.currentOcclusionQuerySet=t.occlusionQuerySet,t.currentOcclusionQueryBuffer=t.occlusionQueryBuffer,t.currentOcclusionQueryObjects=t.occlusionQueryObjects,n=s.createQuerySet({type:"occlusion",count:r,label:`occlusionQuerySet_${e.id}`}),t.occlusionQuerySet=n,t.occlusionQueryIndex=0,t.occlusionQueryObjects=new Array(r),t.lastOcclusionObject=null),i=null===e.textures?this._getDefaultRenderPassDescriptor():this._getRenderPassDescriptor(e),this.initTimestampQuery(e,i),i.occlusionQuerySet=n;const o=i.depthStencilAttachment;if(null!==e.textures){const t=i.colorAttachments;for(let s=0;s<t.length;s++){const r=t[s];e.clearColor?(r.clearValue=0===s?e.clearColorValue:{r:0,g:0,b:0,a:1},r.loadOp=ny,r.storeOp=sy):(r.loadOp=ry,r.storeOp=sy)}}else{const t=i.colorAttachments[0];e.clearColor?(t.clearValue=e.clearColorValue,t.loadOp=ny,t.storeOp=sy):(t.loadOp=ry,t.storeOp=sy)}e.depth&&(e.clearDepth?(o.depthClearValue=e.clearDepthValue,o.depthLoadOp=ny,o.depthStoreOp=sy):(o.depthLoadOp=ry,o.depthStoreOp=sy)),e.stencil&&(e.clearStencil?(o.stencilClearValue=e.clearStencilValue,o.stencilLoadOp=ny,o.stencilStoreOp=sy):(o.stencilLoadOp=ry,o.stencilStoreOp=sy));const a=s.createCommandEncoder({label:"renderContext_"+e.id}),u=a.beginRenderPass(i);if(t.descriptor=i,t.encoder=a,t.currentPass=u,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.renderBundles=[],e.viewport&&this.updateViewport(e),e.scissor){const{x:t,y:s,width:r,height:n}=e.scissorValue;u.setScissorRect(t,s,r,n)}}finishRender(e){const t=this.get(e),s=e.occlusionQueryCount;if(t.renderBundles.length>0&&t.currentPass.executeBundles(t.renderBundles),s>t.occlusionQueryIndex&&t.currentPass.endOcclusionQuery(),t.currentPass.end(),s>0){const r=8*s;let n=this.occludedResolveCache.get(r);void 0===n&&(n=this.device.createBuffer({size:r,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(r,n));const i=this.device.createBuffer({size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});t.encoder.resolveQuerySet(t.occlusionQuerySet,0,s,n,0),t.encoder.copyBufferToBuffer(n,0,i,0,r),t.occlusionQueryBuffer=i,this.resolveOccludedAsync(e)}if(this.prepareTimestampBuffer(e,t.encoder),this.device.queue.submit([t.encoder.finish()]),null!==e.textures){const t=e.textures;for(let e=0;e<t.length;e++){const s=t[e];!0===s.generateMipmaps&&this.textureUtils.generateMipmaps(s)}}}isOccluded(e,t){const s=this.get(e);return s.occluded&&s.occluded.has(t)}async resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueryBuffer:s,currentOcclusionQueryObjects:r}=t;if(s&&r){const e=new WeakSet;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueryBuffer=null,await s.mapAsync(GPUMapMode.READ);const n=s.getMappedRange(),i=new BigUint64Array(n);for(let t=0;t<r.length;t++)i[t]!==BigInt(0)&&e.add(r[t]);s.destroy(),t.occluded=e}}updateViewport(e){const{currentPass:t}=this.get(e),{x:s,y:r,width:n,height:i,minDepth:o,maxDepth:a}=e.viewportValue;t.setViewport(s,r,n,i,o,a)}clear(e,t,s,r=null){const n=this.device,i=this.renderer;let o,a,u,l,d=[];if(e){const e=this.getClearColor();if(!0===this.renderer.alpha){const t=e.a;a={r:e.r*t,g:e.g*t,b:e.b*t,a:t}}else a={r:e.r,g:e.g,b:e.b,a:e.a}}if(null===r){u=i.depth,l=i.stencil;const t=this._getDefaultRenderPassDescriptor();if(e){d=t.colorAttachments;const e=d[0];e.clearValue=a,e.loadOp=ny,e.storeOp=sy}(u||l)&&(o=t.depthStencilAttachment)}else{if(u=r.depth,l=r.stencil,e)for(const e of r.textures){const t=this.get(e),s=t.texture.createView();let r,n;void 0!==t.msaaTexture?(r=t.msaaTexture.createView(),n=s):(r=s,n=void 0),d.push({view:r,resolveTarget:n,clearValue:a,loadOp:ny,storeOp:sy})}if(u||l){o={view:this.get(r.depthTexture).texture.createView()}}}u&&(t?(o.depthLoadOp=ny,o.depthClearValue=i.getClearDepth(),o.depthStoreOp=sy):(o.depthLoadOp=ry,o.depthStoreOp=sy)),l&&(s?(o.stencilLoadOp=ny,o.stencilClearValue=i.getClearStencil(),o.stencilStoreOp=sy):(o.stencilLoadOp=ry,o.stencilStoreOp=sy));const c=n.createCommandEncoder({});c.beginRenderPass({colorAttachments:d,depthStencilAttachment:o}).end(),n.queue.submit([c.finish()])}beginCompute(e){const t=this.get(e),s={};this.initTimestampQuery(e,s),t.cmdEncoderGPU=this.device.createCommandEncoder(),t.passEncoderGPU=t.cmdEncoderGPU.beginComputePass(s)}compute(e,t,s,r){const{passEncoderGPU:n}=this.get(e),i=this.get(r).pipeline;n.setPipeline(i);for(let e=0,t=s.length;e<t;e++){const t=s[e],r=this.get(t);n.setBindGroup(e,r.group)}const o=this.device.limits.maxComputeWorkgroupsPerDimension,a=this.get(t);void 0===a.dispatchSize&&(a.dispatchSize={x:0,y:1,z:1});const{dispatchSize:u}=a;t.dispatchCount>o?(u.x=Math.min(t.dispatchCount,o),u.y=Math.ceil(t.dispatchCount/o)):u.x=t.dispatchCount,n.dispatchWorkgroups(u.x,u.y,u.z)}finishCompute(e){const t=this.get(e);t.passEncoderGPU.end(),this.prepareTimestampBuffer(e,t.cmdEncoderGPU),this.device.queue.submit([t.cmdEncoderGPU.finish()])}async waitForGPU(){await this.device.queue.onSubmittedWorkDone()}draw(e,t){const{object:s,context:r,pipeline:n}=e,i=e.getBindings(),o=this.get(r),a=this.get(n).pipeline,u=o.currentSets,l=o.currentPass,d=e.getDrawParameters();if(null===d)return;u.pipeline!==a&&(l.setPipeline(a),u.pipeline=a);const c=u.bindingGroups;for(let e=0,t=i.length;e<t;e++){const t=i[e],s=this.get(t);c[t.index]!==t.id&&(l.setBindGroup(t.index,s.group),c[t.index]=t.id)}const h=e.getIndex(),p=null!==h;if(!0===p&&u.index!==h){const e=this.get(h).buffer,t=h.array instanceof Uint16Array?ly:dy;l.setIndexBuffer(e,t),u.index=h}const g=e.getVertexBuffers();for(let e=0,t=g.length;e<t;e++){const t=g[e];if(u.attributes[e]!==t){const s=this.get(t).buffer;l.setVertexBuffer(e,s),u.attributes[e]=t}}if(void 0!==o.occlusionQuerySet){const e=o.lastOcclusionObject;e!==s&&(null!==e&&!0===e.occlusionTest&&(l.endOcclusionQuery(),o.occlusionQueryIndex++),!0===s.occlusionTest&&(l.beginOcclusionQuery(o.occlusionQueryIndex),o.occlusionQueryObjects[o.occlusionQueryIndex]=s),o.lastOcclusionObject=s)}if(!0===s.isBatchedMesh){const e=s._multiDrawStarts,t=s._multiDrawCounts,r=s._multiDrawCount,n=s._multiDrawInstances,i=p?h.array.BYTES_PER_ELEMENT:1;for(let s=0;s<r;s++){const r=n?n[s]:1,o=r>1?0:s;l.drawIndexed(t[s],r,e[s]/i,0,o)}}else if(!0===p){const{vertexCount:r,instanceCount:n,firstVertex:i}=d,o=e.getIndirect();if(null!==o){const e=this.get(o).buffer;l.drawIndexedIndirect(e,0)}else l.drawIndexed(r,n,i,0,0);t.update(s,r,n)}else{const{vertexCount:r,instanceCount:n,firstVertex:i}=d,o=e.getIndirect();if(null!==o){const e=this.get(o).buffer;l.drawIndirect(e,0)}else l.draw(r,n,i,0);t.update(s,r,n)}}needsRenderUpdate(e){const t=this.get(e),{object:s,material:r}=e,n=this.utils,i=n.getSampleCountRenderContext(e.context),o=n.getCurrentColorSpace(e.context),a=n.getCurrentColorFormat(e.context),u=n.getCurrentDepthStencilFormat(e.context),l=n.getPrimitiveTopology(s,r);let d=!1;return t.material===r&&t.materialVersion===r.version&&t.transparent===r.transparent&&t.blending===r.blending&&t.premultipliedAlpha===r.premultipliedAlpha&&t.blendSrc===r.blendSrc&&t.blendDst===r.blendDst&&t.blendEquation===r.blendEquation&&t.blendSrcAlpha===r.blendSrcAlpha&&t.blendDstAlpha===r.blendDstAlpha&&t.blendEquationAlpha===r.blendEquationAlpha&&t.colorWrite===r.colorWrite&&t.depthWrite===r.depthWrite&&t.depthTest===r.depthTest&&t.depthFunc===r.depthFunc&&t.stencilWrite===r.stencilWrite&&t.stencilFunc===r.stencilFunc&&t.stencilFail===r.stencilFail&&t.stencilZFail===r.stencilZFail&&t.stencilZPass===r.stencilZPass&&t.stencilFuncMask===r.stencilFuncMask&&t.stencilWriteMask===r.stencilWriteMask&&t.side===r.side&&t.alphaToCoverage===r.alphaToCoverage&&t.sampleCount===i&&t.colorSpace===o&&t.colorFormat===a&&t.depthStencilFormat===u&&t.primitiveTopology===l&&t.clippingContextCacheKey===e.clippingContextCacheKey||(t.material=r,t.materialVersion=r.version,t.transparent=r.transparent,t.blending=r.blending,t.premultipliedAlpha=r.premultipliedAlpha,t.blendSrc=r.blendSrc,t.blendDst=r.blendDst,t.blendEquation=r.blendEquation,t.blendSrcAlpha=r.blendSrcAlpha,t.blendDstAlpha=r.blendDstAlpha,t.blendEquationAlpha=r.blendEquationAlpha,t.colorWrite=r.colorWrite,t.depthWrite=r.depthWrite,t.depthTest=r.depthTest,t.depthFunc=r.depthFunc,t.stencilWrite=r.stencilWrite,t.stencilFunc=r.stencilFunc,t.stencilFail=r.stencilFail,t.stencilZFail=r.stencilZFail,t.stencilZPass=r.stencilZPass,t.stencilFuncMask=r.stencilFuncMask,t.stencilWriteMask=r.stencilWriteMask,t.side=r.side,t.alphaToCoverage=r.alphaToCoverage,t.sampleCount=i,t.colorSpace=o,t.colorFormat=a,t.depthStencilFormat=u,t.primitiveTopology=l,t.clippingContextCacheKey=e.clippingContextCacheKey,d=!0),d}getRenderCacheKey(e){const{object:t,material:s}=e,r=this.utils,n=e.context;return[s.transparent,s.blending,s.premultipliedAlpha,s.blendSrc,s.blendDst,s.blendEquation,s.blendSrcAlpha,s.blendDstAlpha,s.blendEquationAlpha,s.colorWrite,s.depthWrite,s.depthTest,s.depthFunc,s.stencilWrite,s.stencilFunc,s.stencilFail,s.stencilZFail,s.stencilZPass,s.stencilFuncMask,s.stencilWriteMask,s.side,r.getSampleCountRenderContext(n),r.getCurrentColorSpace(n),r.getCurrentColorFormat(n),r.getCurrentDepthStencilFormat(n),r.getPrimitiveTopology(t,s),e.getGeometryCacheKey(),e.clippingContextCacheKey].join()}createSampler(e){this.textureUtils.createSampler(e)}destroySampler(e){this.textureUtils.destroySampler(e)}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}copyTextureToBuffer(e,t,s,r,n,i){return this.textureUtils.copyTextureToBuffer(e,t,s,r,n,i)}async initTimestampQuery(e,t){if(!this.trackTimestamp)return;const s=this.get(e);if(!s.timeStampQuerySet){this.device.pushErrorScope("out-of-memory");const r=await this.device.createQuerySet({type:"timestamp",count:2,label:`timestamp_renderContext_${e.id}`});if(await this.device.popErrorScope())return s.attemptingTimeStampQuerySetFailed||(console.error(`[GPUOutOfMemoryError][renderContext_${e.id}]:\nFailed to create timestamp query set. This may be because timestamp queries are already running in other tabs.`),s.attemptingTimeStampQuerySetFailed=!0),void(s.timeStampQuerySet=null);const n={querySet:r,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1};Object.assign(t,{timestampWrites:n}),s.timeStampQuerySet=r}}prepareTimestampBuffer(e,t){if(!this.trackTimestamp)return;const s=this.get(e);if(!s.timeStampQuerySet)return;const r=2*BigInt64Array.BYTES_PER_ELEMENT;void 0===s.currentTimestampQueryBuffers&&(s.currentTimestampQueryBuffers={resolveBuffer:this.device.createBuffer({label:"timestamp resolve buffer",size:r,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),resultBuffer:this.device.createBuffer({label:"timestamp result buffer",size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),isMappingPending:!1});const{resolveBuffer:n,resultBuffer:i,isMappingPending:o}=s.currentTimestampQueryBuffers;!0!==o&&(t.resolveQuerySet(s.timeStampQuerySet,0,2,n,0),t.copyBufferToBuffer(n,0,i,0,r))}async resolveTimestampAsync(e,t="render"){if(!this.trackTimestamp)return;const s=this.get(e);if(!s.timeStampQuerySet)return;if(void 0===s.currentTimestampQueryBuffers)return;const{resultBuffer:r,isMappingPending:n}=s.currentTimestampQueryBuffers;!0!==n&&(s.currentTimestampQueryBuffers.isMappingPending=!0,r.mapAsync(GPUMapMode.READ).then((()=>{const e=new BigUint64Array(r.getMappedRange()),n=Number(e[1]-e[0])/1e6;this.renderer.info.updateTimestamp(t,n),r.unmap(),s.currentTimestampQueryBuffers.isMappingPending=!1})))}createNodeBuilder(e,t){return new zS(e,t)}createProgram(e){this.get(e).module={module:this.device.createShaderModule({code:e.code,label:e.stage}),entryPoint:"main"}}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){this.pipelineUtils.createRenderPipeline(e,t)}createComputePipeline(e,t){this.pipelineUtils.createComputePipeline(e,t)}beginBundle(e){const t=this.get(e);t._currentPass=t.currentPass,t._currentSets=t.currentSets,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.currentPass=this.pipelineUtils.createBundleEncoder(e)}finishBundle(e,t){const s=this.get(e),r=s.currentPass.finish();this.get(t).bundleGPU=r,s.currentSets=s._currentSets,s.currentPass=s._currentPass}addBundle(e,t){this.get(e).renderBundles.push(this.get(t).bundleGPU)}createBindings(e,t,s,r){this.bindingUtils.createBindings(e,t,s,r)}updateBindings(e,t,s,r){this.bindingUtils.createBindings(e,t,s,r)}updateBinding(e){this.bindingUtils.updateBinding(e)}createIndexAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createIndirectStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.INDIRECT|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){this.colorBuffer=this.textureUtils.getColorBuffer(),this.defaultRenderPassdescriptor=null}getMaxAnisotropy(){return 16}hasFeature(e){return this.device.features.has(e)}copyTextureToTexture(e,t,s=null,r=null,n=0){let i=0,o=0,a=0,u=0,l=0,d=0,c=e.image.width,h=e.image.height;null!==s&&(u=s.x,l=s.y,d=s.z||0,c=s.width,h=s.height),null!==r&&(i=r.x,o=r.y,a=r.z||0);const p=this.device.createCommandEncoder({label:"copyTextureToTexture_"+e.id+"_"+t.id}),g=this.get(e).texture,m=this.get(t).texture;p.copyTextureToTexture({texture:g,mipLevel:n,origin:{x:u,y:l,z:d}},{texture:m,mipLevel:n,origin:{x:i,y:o,z:a}},[c,h,1]),this.device.queue.submit([p.finish()])}copyFramebufferToTexture(e,t,s){const r=this.get(t);let n=null;n=t.renderTarget?e.isDepthTexture?this.get(t.depthTexture).texture:this.get(t.textures[0]).texture:e.isDepthTexture?this.textureUtils.getDepthBuffer(t.depth,t.stencil):this.context.getCurrentTexture();const i=this.get(e).texture;if(n.format!==i.format)return void console.error("WebGPUBackend: copyFramebufferToTexture: Source and destination formats do not match.",n.format,i.format);let o;if(r.currentPass?(r.currentPass.end(),o=r.encoder):o=this.device.createCommandEncoder({label:"copyFramebufferToTexture_"+e.id}),o.copyTextureToTexture({texture:n,origin:{x:s.x,y:s.y,z:0}},{texture:i},[s.z,s.w]),e.generateMipmaps&&this.textureUtils.generateMipmaps(e),r.currentPass){const{descriptor:e}=r;for(let t=0;t<e.colorAttachments.length;t++)e.colorAttachments[t].loadOp=ry;t.depth&&(e.depthStencilAttachment.depthLoadOp=ry),t.stencil&&(e.depthStencilAttachment.stencilLoadOp=ry),r.currentPass=o.beginRenderPass(e),r.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null}}else this.device.queue.submit([o.finish()])}}class QS extends ks{constructor(e,t,s,r,n,i){super(e,t,s,r,n,i),this.iesMap=null}copy(e,t){return super.copy(e,t),this.iesMap=e.iesMap,this}}class ZS extends _v{constructor(){super(),this.addLight(GT,zs),this.addLight(ZN,$s),this.addLight(sv,Hs),this.addLight(rv,ks),this.addLight(iv,Ws),this.addLight(ov,js),this.addLight(av,qs),this.addLight(nv,QS),this.addToneMapping(Jb,Ks),this.addToneMapping(ex,Xs),this.addToneMapping(tx,Ys),this.addToneMapping(rx,Qs),this.addToneMapping(ax,Zs),this.addToneMapping(ux,Js)}}class JS extends Mv{constructor(e={}){let t;e.forceWebGL?t=fS:(t=YS,e.getFallback=()=>(console.warn("THREE.WebGPURenderer: WebGPU is not available, running under WebGL2 backend."),new fS(e)));super(new t(e),e),this.library=new ZS,this.isWebGPURenderer=!0}}class eA extends er{constructor(){super(),this.isBundleGroup=!0,this.type="BundleGroup",this.static=!0,this.version=0}set needsUpdate(e){!0===e&&this.version++}}const tA=new ah,sA=new vf(tA);class rA{constructor(e,t=Vn(0,0,1,1)){this.renderer=e,this.outputNode=t,this.outputColorTransform=!0,this.needsUpdate=!0,tA.name="PostProcessing"}render(){this.update();const e=this.renderer,t=e.toneMapping,s=e.outputColorSpace;e.toneMapping=d,e.outputColorSpace=Se,sA.render(e),e.toneMapping=t,e.outputColorSpace=s}update(){if(!0===this.needsUpdate){const e=this.renderer,t=e.toneMapping,s=e.outputColorSpace;sA.material.fragmentNode=!0===this.outputColorTransform?hu(this.outputNode,t,s):this.outputNode.context({toneMapping:t,outputColorSpace:s}),sA.material.needsUpdate=!0,this.needsUpdate=!1}}async renderAsync(){this.update();const e=this.renderer,t=e.toneMapping,s=e.outputColorSpace;e.toneMapping=d,e.outputColorSpace=Se,await sA.renderAsync(e),e.toneMapping=t,e.outputColorSpace=s}}function nA(t,s={}){return s.toneMapping=t.toneMapping,s.toneMappingExposure=t.toneMappingExposure,s.outputColorSpace=t.outputColorSpace,s.renderTarget=t.getRenderTarget(),s.activeCubeFace=t.getActiveCubeFace(),s.activeMipmapLevel=t.getActiveMipmapLevel(),s.renderObjectFunction=t.getRenderObjectFunction(),s.pixelRatio=t.getPixelRatio(),s.mrt=t.getMRT(),s.clearColor=t.getClearColor(s.clearColor||new e),s.clearAlpha=t.getClearAlpha(),s.autoClear=t.autoClear,s.scissorTest=t.getScissorTest(),s}function iA(e,t){e.toneMapping=t.toneMapping,e.toneMappingExposure=t.toneMappingExposure,e.outputColorSpace=t.outputColorSpace,e.setRenderTarget(t.renderTarget,t.activeCubeFace,t.activeMipmapLevel),e.setRenderObjectFunction(t.renderObjectFunction),e.setPixelRatio(t.pixelRatio),e.setMRT(t.mrt),e.setClearColor(t.clearColor,t.clearAlpha),e.autoClear=t.autoClear,e.setScissorTest(t.scissorTest)}function oA(e,t,s={}){return(s=nA(e,s)).background=t.background,s.backgroundNode=t.backgroundNode,s.overrideMaterial=t.overrideMaterial,s}var aA=Object.freeze({__proto__:null,resetRendererAndSceneState:function(e,t,s){return s=oA(e,t,s),t.background=null,t.backgroundNode=null,t.overrideMaterial=null,s},resetRendererState:function(e,t){return t=nA(e,t),e.setMRT(null),e.setRenderObjectFunction(null),e.setClearColor(0,1),e.autoClear=!0,t},restoreRendererAndSceneState:function(e,t,s){iA(e,s),t.background=s.background,t.backgroundNode=s.backgroundNode,t.overrideMaterial=s.overrideMaterial},restoreRendererState:iA,saveRendererAndSceneState:oA,saveRendererState:nA});class uA extends ee{constructor(e=1,t=1){super(),this.image={width:e,height:t},this.magFilter=$,this.minFilter=$,this.isStorageTexture=!0}}class lA extends Me{constructor(e,t,s=Float32Array){!1===ArrayBuffer.isView(e)&&(e=new s(e*t)),super(e,t),this.isStorageBufferAttribute=!0}}class dA extends R{constructor(e,t,s=Float32Array){!1===ArrayBuffer.isView(e)&&(e=new s(e*t)),super(e,t),this.isStorageInstancedBufferAttribute=!0}}class cA extends lA{constructor(e,t){super(e,t,Uint32Array),this.isIndirectStorageBufferAttribute=!0}}class hA extends tr{constructor(e){super(e),this.textures={},this.nodes={}}load(e,t,s,r){const n=new sr(this.manager);n.setPath(this.path),n.setRequestHeader(this.requestHeader),n.setWithCredentials(this.withCredentials),n.load(e,(s=>{try{t(this.parse(JSON.parse(s)))}catch(t){r?r(t):console.error(t),this.manager.itemError(e)}}),s,r)}parseNodes(e){const t={};if(void 0!==e){for(const s of e){const{uuid:e,type:r}=s;t[e]=this.createNodeFromType(r),t[e].uuid=e}const s={nodes:t,textures:this.textures};for(const r of e){r.meta=s;t[r.uuid].deserialize(r),delete r.meta}}return t}parse(e){const t=this.createNodeFromType(e.type);t.uuid=e.uuid;const s={nodes:this.parseNodes(e.nodes),textures:this.textures};return e.meta=s,t.deserialize(e),delete e.meta,t}setTextures(e){return this.textures=e,this}setNodes(e){return this.nodes=e,this}createNodeFromType(e){return void 0===this.nodes[e]?(console.error("THREE.NodeLoader: Node type not found:",e),An()):pn(new this.nodes[e])}}class pA extends rr{constructor(e){super(e),this.nodes={},this.nodeMaterials={}}parse(e){const t=super.parse(e),s=this.nodes,r=e.inputNodes;for(const e in r){const n=r[e];t[e]=s[n]}return t}setNodes(e){return this.nodes=e,this}setNodeMaterials(e){return this.nodeMaterials=e,this}createMaterialFromType(e){const t=this.nodeMaterials[e];return void 0!==t?new t:super.createMaterialFromType(e)}}class gA extends nr{constructor(e){super(e),this.nodes={},this.nodeMaterials={},this._nodesJSON=null}setNodes(e){return this.nodes=e,this}setNodeMaterials(e){return this.nodeMaterials=e,this}parse(e,t){this._nodesJSON=e.nodes;const s=super.parse(e,t);return this._nodesJSON=null,s}parseNodes(e,t){if(void 0!==e){const s=new hA;return s.setNodes(this.nodes),s.setTextures(t),s.parseNodes(e)}return{}}parseMaterials(e,t){const s={};if(void 0!==e){const r=this.parseNodes(this._nodesJSON,t),n=new pA;n.setTextures(t),n.setNodes(r),n.setNodeMaterials(this.nodeMaterials);for(let t=0,r=e.length;t<r;t++){const r=e[t];s[r.uuid]=n.parse(r)}}return s}}class mA extends er{constructor(){super(),this.isClippingGroup=!0,this.clippingPlanes=[],this.enabled=!0,this.clipIntersection=!1,this.clipShadows=!1}}export{Qs as ACESFilmicToneMapping,_c as AONode,Je as AddEquation,K as AddOperation,xt as AdditiveBlending,Zs as AgXToneMapping,Bt as AlphaFormat,fs as AlwaysCompare,Rt as AlwaysDepth,ws as AlwaysStencilFunc,Ws as AmbientLight,iv as AmbientLightNode,ET as AnalyticLightNode,Cr as ArrayElementNode,Pi as AssignNode,gu as AttributeNode,Yh as BRDF_GGX,Ih as BRDF_Lambert,x as BackSide,Eh as BasicEnvironmentNode,yT as BasicShadowFilter,Ee as BasicShadowMap,nc as BatchNode,O as BoxGeometry,pc as Break,Me as BufferAttribute,qa as BufferAttributeNode,Te as BufferGeometry,vl as BufferNode,rd as BumpMapNode,eA as BundleGroup,su as BypassNode,Ye as ByteType,eu as CacheNode,Ys as CineonToneMapping,cs as ClampToEdgeWrapping,mA as ClippingGroup,lx as CodeNode,e as Color,u as ColorManagement,Pa as ColorSpaceNode,Za as ComputeNode,Lr as ConstNode,Na as ContextNode,hc as Continue,Er as ConvertNode,H as CubeCamera,T as CubeReflectionMapping,_ as CubeRefractionMapping,W as CubeTexture,_l as CubeTextureNode,Be as CubeUVReflectionMapping,gt as CullFaceBack,mt as CullFaceFront,pt as CullFaceNone,ft as CustomBlending,Qh as DFGApprox,qh as D_GGX,C as DataArrayTexture,ze as DataTexture,Fs as DecrementStencilOp,Bs as DecrementWrapStencilOp,ce as DepthFormat,de as DepthStencilFormat,B as DepthTexture,$s as DirectionalLight,ZN as DirectionalLightNode,lu as Discard,le as DoubleSide,ut as DstAlphaFactor,at as DstColorFactor,p as DynamicDrawUsage,uo as EPSILON,ng as EnvironmentNode,bs as EqualCompare,vt as EqualDepth,Rs as EqualStencilFunc,Th as EquirectUVNode,j as EquirectangularReflectionMapping,q as EquirectangularRefractionMapping,ve as Euler,o as EventDispatcher,au as ExpressionNode,Ph as F_Schlick,sr as FileLoader,Le as Float16BufferAttribute,_e as Float32BufferAttribute,E as FloatType,bn as Fn,wx as FogExp2Node,Ax as FogNode,Cx as FogRangeNode,w as FramebufferTexture,rl as FrontFacingNode,Ge as FrontSide,ke as Frustum,Li as FunctionCallNode,gx as FunctionNode,Pm as FunctionOverloadingNode,gv as GLSLNodeParser,Ts as GreaterCompare,_t as GreaterDepth,xs as GreaterEqualCompare,Nt as GreaterEqualDepth,As as GreaterEqualStencilFunc,Ss as GreaterStencilFunc,er as Group,ye as HalfFloatType,js as HemisphereLight,ov as HemisphereLightNode,QS as IESSpotLight,nv as IESSpotLightNode,lo as INFINITY,Nn as If,Ps as IncrementStencilOp,Us as IncrementWrapStencilOp,qd as IndexNode,cA as IndirectStorageBufferAttribute,ec as InstanceNode,R as InstancedBufferAttribute,A as InstancedInterleavedBuffer,sc as InstancedMeshNode,lh as InstancedPointsNodeMaterial,y as IntType,h as InterleavedBuffer,g as InterleavedBufferAttribute,Is as InvertStencilOp,Sc as IrradianceNode,Mr as JoinNode,Ds as KeepStencilOp,Ae as LessCompare,At as LessDepth,ys as LessEqualCompare,St as LessEqualDepth,Cs as LessEqualStencilFunc,Es as LessStencilFunc,qs as LightProbe,av as LightProbeNode,vv as Lighting,Nc as LightingContextNode,Mh as LightingModel,Tc as LightingNode,pT as LightsNode,mh as Line2NodeMaterial,I as LineBasicMaterial,ch as LineBasicNodeMaterial,L as LineDashedMaterial,ph as LineDashedNodeMaterial,$ as LinearFilter,be as LinearMipMapLinearFilter,M as LinearMipmapLinearFilter,Pe as LinearMipmapNearestFilter,Se as LinearSRGBColorSpace,Ks as LinearToneMapping,tr as Loader,cc as Loop,dc as LoopNode,Ft as LuminanceAlphaFormat,Ut as LuminanceFormat,Sm as MRTNode,yg as MatcapUVNode,U as Material,rr as MaterialLoader,od as MaterialNode,Fl as MaterialReferenceNode,a as MathUtils,n as Matrix3,i as Matrix4,Os as MaxEquation,xu as MaxMipLevelNode,k as Mesh,Q as MeshBasicMaterial,Fh as MeshBasicNodeMaterial,Z as MeshLambertMaterial,Gh as MeshLambertNodeMaterial,ne as MeshMatcapMaterial,Tg as MeshMatcapNodeMaterial,V as MeshNormalMaterial,xh as MeshNormalNodeMaterial,J as MeshPhongMaterial,zh as MeshPhongNodeMaterial,se as MeshPhysicalMaterial,dg as MeshPhysicalNodeMaterial,hg as MeshSSSNodeMaterial,te as MeshStandardMaterial,ug as MeshStandardNodeMaterial,re as MeshToonMaterial,fg as MeshToonNodeMaterial,Gs as MinEquation,hs as MirroredRepeatWrapping,X as MixOperation,Ou as ModelNode,Wd as ModelViewProjectionNode,bc as MorphNode,yt as MultiplyBlending,Y as MultiplyOperation,ps as NearestFilter,Ie as NearestMipmapLinearFilter,gs as NearestMipmapNearestFilter,Js as NeutralToneMapping,ms as NeverCompare,Ct as NeverDepth,Ms as NeverStencilFunc,G as NoBlending,m as NoColorSpace,d as NoToneMapping,Rr as Node,rN as NodeAttribute,XN as NodeBuilder,lN as NodeCache,aN as NodeCode,YN as NodeFrame,QN as NodeFunctionInput,hA as NodeLoader,ah as NodeMaterial,pA as NodeMaterialLoader,or as NodeMaterialObserver,gA as NodeObjectLoader,br as NodeShaderStage,Tr as NodeType,nN as NodeUniform,xr as NodeUpdateType,yr as NodeUtils,iN as NodeVar,oN as NodeVarying,F as NormalBlending,Jl as NormalMapNode,_s as NotEqualCompare,Tt as NotEqualDepth,vs as NotEqualStencilFunc,fe as Object3D,Fu as Object3DNode,nr as ObjectLoader,S as ObjectSpaceNormalMap,rt as OneFactor,ht as OneMinusDstAlphaFactor,ct as OneMinusDstColorFactor,dt as OneMinusSrcAlphaFactor,lt as OneMinusSrcColorFactor,xe as OrthographicCamera,_m as OutputStructNode,bT as PCFShadowFilter,Oe as PCFShadowMap,xT as PCFSoftShadowFilter,co as PI,ho as PI2,ON as PMREMGenerator,tg as PMREMNode,fm as ParameterNode,qb as PassNode,Ue as PerspectiveCamera,Dh as PhongLightingModel,Bp as PhysicalLightingModel,me as Plane,zs as PointLight,GT as PointLightNode,Ff as PointUVNode,P as PointsMaterial,Ng as PointsNodeMaterial,rA as PostProcessing,aA as PostProcessingUtils,Ob as PosterizeNode,ri as PropertyNode,vf as QuadMesh,us as RED_GREEN_RGTC2_Format,os as RED_RGTC1_Format,Ve as REVISION,Fe as RGBAFormat,Ke as RGBAIntegerFormat,ss as RGBA_ASTC_10x10_Format,Jt as RGBA_ASTC_10x5_Format,es as RGBA_ASTC_10x6_Format,ts as RGBA_ASTC_10x8_Format,rs as RGBA_ASTC_12x10_Format,ns as RGBA_ASTC_12x12_Format,Wt as RGBA_ASTC_4x4_Format,jt as RGBA_ASTC_5x4_Format,qt as RGBA_ASTC_5x5_Format,Kt as RGBA_ASTC_6x5_Format,Xt as RGBA_ASTC_6x6_Format,Yt as RGBA_ASTC_8x5_Format,Qt as RGBA_ASTC_8x6_Format,Zt as RGBA_ASTC_8x8_Format,is as RGBA_BPTC_Format,Ht as RGBA_ETC2_EAC_Format,kt as RGBA_PVRTC_2BPPV1_Format,Gt as RGBA_PVRTC_4BPPV1_Format,It as RGBA_S3TC_DXT1_Format,Lt as RGBA_S3TC_DXT3_Format,Vt as RGBA_S3TC_DXT5_Format,qe as RGBFormat,je as RGBIntegerFormat,zt as RGB_ETC1_Format,$t as RGB_ETC2_Format,Ot as RGB_PVRTC_2BPPV1_Format,Dt as RGB_PVRTC_4BPPV1_Format,Pt as RGB_S3TC_DXT1_Format,Ce as RGFormat,We as RGIntegerFormat,Af as RTTNode,Fx as RangeNode,Hs as RectAreaLight,sv as RectAreaLightNode,He as RedFormat,$e as RedIntegerFormat,Ml as ReferenceNode,yf as ReflectorNode,Xs as ReinhardToneMapping,nu as RemapNode,cu as RenderOutputNode,ge as RenderTarget,za as RendererReferenceNode,ds as RepeatWrapping,Ls as ReplaceStencilOp,du as Return,tt as ReverseSubtractEquation,vg as RotateNode,ls as SIGNED_RED_GREEN_RGTC2_Format,as as SIGNED_RED_RGTC1_Format,De as SRGBColorSpace,l as SRGBTransfer,z as Scene,Vf as SceneNode,Jh as Schlick_to_F0,Cc as ScreenNode,vx as ScriptableNode,Nx as ScriptableNodeResources,bx as ScriptableValueNode,Fr as SetNode,hn as ShaderNode,oe as ShadowMaterial,RT as ShadowNode,wg as ShadowNodeMaterial,Qe as ShortType,ac as SkinningNode,we as SphereGeometry,Ur as SplitNode,ks as SpotLight,rv as SpotLightNode,ie as SpriteMaterial,Rg as SpriteNodeMaterial,Qm as SpriteSheetUVNode,it as SrcAlphaFactor,ot as SrcAlphaSaturateFactor,nt as SrcColorFactor,bm as StackNode,c as StaticDrawUsage,kf as StorageArrayElementNode,lA as StorageBufferAttribute,db as StorageBufferNode,dA as StorageInstancedBufferAttribute,uA as StorageTexture,pb as StorageTextureNode,et as SubtractEquation,bt as SubtractiveBlending,Kl as TBNViewMatrix,v as TangentSpaceNormalMap,wr as TempNode,ee as Texture,Bg as Texture3DNode,_u as TextureNode,yu as TextureSizeNode,Ha as ToneMappingNode,Qb as ToonOutlinePassNode,Jm as TriplanarTexturesNode,Ne as UVMapping,ue as Uint16BufferAttribute,ae as Uint32BufferAttribute,Rl as UniformArrayNode,Xn as UniformGroupNode,ti as UniformNode,pe as UnsignedByteType,he as UnsignedInt248Type,Mt as UnsignedInt5999Type,f as UnsignedIntType,Et as UnsignedShort4444Type,wt as UnsignedShort5551Type,Xe as UnsignedShortType,fb as UserDataNode,TT as VSMShadowFilter,Re as VSMShadowMap,Wh as V_GGX_SmithCorrelated,Aa as VarNode,Ea as VaryingNode,t as Vector2,s as Vector3,r as Vector4,Bf as VertexColorNode,Wc as ViewportDepthNode,$c as ViewportDepthTextureNode,zb as ViewportSharedTextureNode,Oc as ViewportTextureNode,Fg as VolumeNodeMaterial,b as WebGLCoordinateSystem,D as WebGLCubeRenderTarget,N as WebGPUCoordinateSystem,JS as WebGPURenderer,st as ZeroFactor,Vs as ZeroStencilOp,Po as abs,rx as acesFilmicToneMapping,Uo as acos,Oi as add,Or as addMethodChaining,pu as addNodeElement,ax as agxToneMapping,po as all,yi as alphaT,Yi as and,bi as anisotropy,Ti as anisotropyB,xi as anisotropyT,go as any,vn as append,Wn as arrayBuffer,Bo as asin,Ii as assign,Fo as atan,qo as atan2,Zx as atomicAdd,sT as atomicAnd,Yx as atomicFunc,eT as atomicMax,tT as atomicMin,rT as atomicOr,Qx as atomicStore,Jx as atomicSub,nT as atomicXor,Ui as attenuationColor,Bi as attenuationDistance,mu as attribute,Df as backgroundBlurriness,Of as backgroundIntensity,Gf as backgroundRotation,ic as batch,Xm as billboarding,eo as bitAnd,to as bitNot,so as bitOr,ro as bitXor,zl as bitangentGeometry,$l as bitangentLocal,Hl as bitangentView,Wl as bitangentWorld,Wo as bitcast,vb as blendBurn,Cb as blendColor,Sb as blendDodge,Rb as blendOverlay,Ab as blendScreen,Qp as blur,En as bool,Sl as buffer,Ka as bufferAttribute,nd as bumpMap,Eb as burn,Un as bvec2,Ln as bvec3,Gn as bvec4,ru as bypass,tu as cache,Vi as call,Ru as cameraFar,Au as cameraNear,Bu as cameraNormalMatrix,Uu as cameraPosition,Cu as cameraProjectionMatrix,Eu as cameraProjectionMatrixInverse,wu as cameraViewMatrix,Mu as cameraWorldMatrix,ua as cbrt,Db as cdl,Ao as ceil,kT as checker,tx as cineonToneMapping,ca as clamp,di as clearcoat,ci as clearcoatRoughness,dx as code,Sn as color,Da as colorSpaceToWorking,yh as colorToDirection,Ja as compute,_a as cond,va as context,qn as convert,Oa as convertColorSpace,Cf as convertToTexture,wo as cos,Ze as createCanvasElement,sa as cross,Nl as cubeTexture,Oo as dFdx,Go as dFdy,Ai as dashSize,Nr as defaultBuildStages,_r as defaultShaderStages,dn as defined,yo as degrees,Dm as deltaTime,Mx as densityFog,Jc as depth,Yb as depthPass,ea as difference,oi as diffuseColor,OT as directPointLight,fh as directionToColor,Fi as dispersion,Jo as distance,zi as div,wb as dodge,ta as dot,Jd as drawIndex,Xa as dynamicBufferAttribute,jn as element,ai as emissive,Hi as equal,mo as equals,_h as equirectUV,bo as exp,xo as exp2,uu as expression,il as faceDirection,ma as faceForward,An as float,So as floor,Rx as fog,Co as fract,Zn as frameGroup,Om as frameId,nl as frontFacing,Ho as fwidth,Em as gain,Ri as gapSize,cn as getConstNodeType,_n as getCurrentStack,qp as getDirection,wT as getDistanceAttenuation,$h as getGeometryRoughness,Mf as getNormalFromDepth,Y_ as getParallaxCorrectNormal,Hh as getRoughness,wf as getScreenPosition,Q_ as getShIrradianceAt,vm as getTextureIndex,Ef as getViewPosition,px as glsl,fx as glslFn,Ub as grayscale,qi as greaterThan,Xi as greaterThanEqual,Rm as hash,Xu as highPrecisionModelNormalViewMatrix,Ku as highPrecisionModelViewMatrix,Ib as hue,tc as instance,Xd as instanceIndex,Ya as instancedBufferAttribute,Qa as instancedDynamicBufferAttribute,rc as instancedMesh,Rn as int,vo as inverseSqrt,Zd as invocationLocalIndex,Qd as invocationSubgroupIndex,Ei as ior,gi as iridescence,mi as iridescenceIOR,fi as iridescenceThickness,Mn as ivec2,Pn as ivec3,Dn as ivec4,cx as js,Sa as label,Lo as length,la as lengthSq,ji as lessThan,Ki as lessThanEqual,aT as lightPosition,dT as lightTargetDirection,uT as lightTargetPosition,lT as lightViewPosition,vc as lightingContext,gT as lights,eh as linearDepth,Jb as linearToneMapping,Ox as localId,To as log,_o as log2,Qc as logarithmicDepthToViewZ,gc as loop,Lb as luminance,kn as mat2,zn as mat3,$n as mat4,bg as matcapUV,$d as materialAOMap,ad as materialAlphaTest,Rd as materialAnisotropy,Hd as materialAnisotropyVector,Pd as materialAttenuationColor,Fd as materialAttenuationDistance,Td as materialClearcoat,Nd as materialClearcoatNormal,_d as materialClearcoatRoughness,ud as materialColor,kd as materialDispersion,dd as materialEmissive,Ud as materialIOR,Cd as materialIridescence,Ed as materialIridescenceIOR,wd as materialIridescenceThickness,zd as materialLightMap,Od as materialLineDashOffset,Ld as materialLineDashSize,Vd as materialLineGapSize,Id as materialLineScale,Dd as materialLineWidth,bd as materialMetalness,xd as materialNormal,cd as materialOpacity,Gd as materialPointWidth,Pl as materialReference,fd as materialReflectivity,fl as materialRefractionRatio,vd as materialRotation,yd as materialRoughness,Sd as materialSheen,Ad as materialSheenRoughness,ld as materialShininess,hd as materialSpecular,gd as materialSpecularColor,pd as materialSpecularIntensity,md as materialSpecularStrength,Bd as materialThickness,Md as materialTransmission,Xo as max,Tu as maxMipLevel,li as metalness,Ko as min,da as mix,ya as mixElement,Yo as mod,$i as modInt,Gu as modelDirection,Wu as modelNormalMatrix,zu as modelPosition,$u as modelScale,qu as modelViewMatrix,Hu as modelViewPosition,jd as modelViewProjection,ku as modelWorldMatrix,ju as modelWorldMatrixInverse,xc as morphReference,Am as mrt,ki as mul,w_ as mx_aastep,W_ as mx_cell_noise_float,D_ as mx_contrast,j_ as mx_fractal_noise_float,q_ as mx_fractal_noise_vec2,K_ as mx_fractal_noise_vec3,X_ as mx_fractal_noise_vec4,R_ as mx_hsvtorgb,O_ as mx_noise_float,G_ as mx_noise_vec3,k_ as mx_noise_vec4,B_ as mx_ramplr,U_ as mx_ramptb,C_ as mx_rgbtohsv,V_ as mx_safepower,P_ as mx_splitlr,I_ as mx_splittb,E_ as mx_srgb_texture_to_lin_rec709,L_ as mx_transform_uv,z_ as mx_worley_noise_float,$_ as mx_worley_noise_vec2,H_ as mx_worley_noise_vec3,Vo as negate,ux as neutralToneMapping,mn as nodeArray,yn as nodeImmutable,pn as nodeObject,gn as nodeObjects,fn as nodeProxy,ul as normalFlat,ol as normalGeometry,al as normalLocal,ed as normalMap,ll as normalView,dl as normalWorld,Ro as normalize,Zi as not,Wi as notEqual,Vx as numWorkgroups,Pu as objectDirection,ei as objectGroup,Lu as objectPosition,Vu as objectScale,Du as objectViewPosition,Iu as objectWorldMatrix,Do as oneMinus,Qi as or,qc as orthographicDepthToViewZ,jm as oscSawtooth,$m as oscSine,Hm as oscSquare,Wm as oscTriangle,Si as output,Nm as outputStruct,Bb as overlay,Lm as overloadingFn,Cm as parabola,Xl as parallaxDirection,Yl as parallaxUV,ym as parameter,Kb as pass,Xb as passTexture,wm as pcurve,Xc as perspectiveDepthToViewZ,sg as pmremTexture,Pf as pointUV,Ci as pointWidth,Yu as positionGeometry,Qu as positionLocal,Zu as positionPrevious,tl as positionView,sl as positionViewDirection,Ju as positionWorld,el as positionWorldDirection,Gb as posterize,ra as pow,na as pow2,ia as pow3,oa as pow4,ni as property,fo as radians,fa as rand,Px as range,Ex as rangeFog,zo as reciprocal,Bl as reference,Ul as referenceBuffer,Zo as reflect,xl as reflectVector,yl as reflectView,xf as reflector,pa as refract,Tl as refractVector,bl as refractView,ex as reinhardToneMapping,oo as remainder,iu as remap,ou as remapClamp,Jn as renderGroup,hu as renderOutput,$a as rendererReference,Sg as rotate,qm as rotateUV,ui as roughness,ko as round,Rf as rtt,Ma as sRGBTransferEOTF,Ba as sRGBTransferOETF,Su as sampler,ha as saturate,Fb as saturation,Mb as screen,Mc as screenCoordinate,wc as screenSize,Ec as screenUV,Sx as scriptable,xx as scriptableValue,Ta as select,Tn as setCurrentStack,vr as shaderStages,CT as shadow,Qn as sharedUniformGroup,hi as sheen,pi as sheenRoughness,no as shiftLeft,io as shiftRight,vi as shininess,Io as sign,Eo as sin,Mm as sinc,uc as skinning,lc as skinningReference,ga as smoothstep,ba as smoothstepElement,_i as specularColor,Ni as specularF90,Km as spherizeUV,Kn as split,Zm as spritesheetUV,No as sqrt,xm as stack,Qo as step,cb as storage,$x as storageBarrier,hb as storageObject,gb as storageTexture,Hn as string,Gi as sub,Yd as subgroupIndex,Gx as subgroupSize,Mo as tan,Il as tangentGeometry,Ll as tangentLocal,Vl as tangentView,Dl as tangentWorld,Ca as temp,Nu as texture,Ug as texture3D,Hx as textureBarrier,yp as textureBicubic,Kp as textureCubeUV,vu as textureLoad,bu as textureSize,mb as textureStore,Mi as thickness,Vb as threshold,Vm as time,zm as timerDelta,km as timerGlobal,Gm as timerLocal,Ia as toOutputColorSpace,La as toWorkingColorSpace,Wa as toneMapping,ja as toneMappingExposure,Zb as toonOutlinePass,aa as transformDirection,gl as transformNormal,ml as transformNormalToView,Ql as transformedBentNormalView,jl as transformedBitangentView,ql as transformedBitangentWorld,pl as transformedClearcoatNormalView,cl as transformedNormalView,hl as transformedNormalWorld,Ol as transformedTangentView,Gl as transformedTangentWorld,wi as transmission,jo as transpose,Bm as tri,Um as tri3,Fm as triNoise3D,tf as triplanarTexture,ef as triplanarTextures,$o as trunc,xn as tslFn,Cn as uint,si as uniform,Cl as uniformArray,Yn as uniformGroup,El as uniforms,yb as userData,fu as uv,Bn as uvec2,In as uvec3,On as uvec4,wa as varying,ii as varyingProperty,wn as vec2,Fn as vec3,Vn as vec4,Sr as vectorComponents,Nb as velocity,Uf as vertexColor,Kd as vertexIndex,Pb as vibrance,Yc as viewZToLogarithmicDepth,jc as viewZToOrthographicDepth,Kc as viewZToPerspectiveDepth,Bc as viewport,Vc as viewportBottomLeft,Fc as viewportCoordinate,Hc as viewportDepthTexture,th as viewportLinearDepth,kc as viewportMipTexture,Ic as viewportResolution,Ym as viewportSafeUV,$b as viewportSharedTexture,Uc as viewportSize,Gc as viewportTexture,Lc as viewportTopLeft,Pc as viewportUV,hx as wgsl,yx as wgslFn,qx as workgroupArray,zx as workgroupBarrier,Dx as workgroupId,Va as workingToColorSpace,Ji as xor};
